{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/nprogress.js","path":"js/third-party/nprogress.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo.md","hash":"66d0a7c96cd8e89d164eaea62d5f1a70dec76a88","modified":1630081766701},{"_id":"source/_posts/CodeIgniter安裝Swagger.md","hash":"4dc8ad1b86ca1d20096613adcf63a4ed6c39e45a","modified":1630088863518},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB.md","hash":"f948d13029e324fe78b267b70bfbb1609b13d85e","modified":1628319617616},{"_id":"source/_posts/Word-新增快捷建.md","hash":"6540e15d2d6b745084ef4b782d887c9012dcd7d8","modified":1628319646063},{"_id":"source/_posts/Zenbo開發系列-01-後蓋打開方式、偵錯USB孔位置.md","hash":"6399671ec91c5e89adbc49cd9defd413a6cb0883","modified":1628319738973},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器.md","hash":"ef365fa97d517cc3e9a96947a56f374288baee70","modified":1628319810874},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow.md","hash":"33664fed229478a8e1584f84c7ea4dd8f338a8df","modified":1628352426331},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介.md","hash":"72bdff8b3787ccec740b0d88c57bc75c44f067b7","modified":1628352495202},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計.md","hash":"b5cdbf9c555b3248614229a2937f1bd6a70a109a","modified":1628534559524},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder.md","hash":"d4f5dab28e84e64150a830f0e5836e9f052ebf77","modified":1630081766841},{"_id":"source/_posts/按鈕監聽器.md","hash":"1ecb2a57e1ff05ea620ee981d8282b117e24b129","modified":1630138032215},{"_id":"source/_posts/第一個-Kotlin-專案.md","hash":"dd41e1c8a8ee3da95fdf2fc2dd1e63b3f2c6addf","modified":1630089149592},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號.md","hash":"c91a78ba140c3d6de3d7c64eb574b665817881ca","modified":1628319601955},{"_id":"source/_posts/逆向工程-反編譯APK.md","hash":"9c81101df859e3f424fe34e1d70d12994cfd396e","modified":1630083762779},{"_id":"source/tags/index.md","hash":"6d28e6b0e2c2044fa8a474bef0aaf2363a085d35","modified":1628320273041},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/activity_uuid.png","hash":"c8144be937cd63ce39d494ed574465824af50906","modified":1630081766777},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/all_uuid.png","hash":"cf6e47543e66dca0a5d09be615d785d4bf2fa368","modified":1630081766781},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/launch_activity.png","hash":"7aedc39de75519249a4cf49609638b6a62281b59","modified":1630081766808},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/project_info.png","hash":"2ce8cbe93734b68b68144cb5a0a0fdfc791d7292","modified":1630081766835},{"_id":"source/_posts/CodeIgniter安裝Swagger/edit.png","hash":"713220eed1ad64b7d9df89ed8bd453ea2f5a1496","modified":1630085626330},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/mongodb_內容.png","hash":"606cfb9d2a54d8af907bc1120430f5843b3e71be","modified":1628263954118},{"_id":"source/_posts/CodeIgniter安裝Swagger/dir.png","hash":"770bafe9bb864e645a303a3357138c16a29005d0","modified":1630085563568},{"_id":"source/_posts/CodeIgniter安裝Swagger/show.png","hash":"0577721c1499bd427cc4cf94885eb0644adbb3b2","modified":1630085693647},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/services_msc.png","hash":"0020d162b57ca496d0d145ac3914a8d21849f785","modified":1628263954124},{"_id":"source/_posts/Word-新增快捷建/自訂鍵盤.png","hash":"22d2867127db6f962a971402c35a4075fbe1f1d5","modified":1628263954142},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/模擬器完成.jpg","hash":"723c32202eba7f177b20992246913a96eafd8e15","modified":1628263954235},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/建立新模擬器.jpg","hash":"bcf039a2e2d4f05a751c69c1b159ef2b9d5d38af","modified":1628263954206},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/硬體規格.jpg","hash":"00eec5d8caf3d4429cbc8ba83f3a6da65899ff52","modified":1628263954246},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/選擇作業系統版本.jpg","hash":"f0d5531cddce12d0fd8bb8f74cd2f5b739a09509","modified":1628263954258},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/manifest_uuid.png","hash":"616695fd2f34ff62f7d92770a1cb98dbb27ea8cd","modified":1630081766814},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/選擇硬體裝置.jpg","hash":"2a277a2ed9464dde34512812dcdfc32b821ad309","modified":1628263954270},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE1.png","hash":"13ae6bdc49ec47915639a0e5039387247324c75e","modified":1628267257460},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE3.png","hash":"6cc964e346d9b188d8dceba349da90e18dab6361","modified":1628268405756},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/建立新硬體外型.jpg","hash":"40780d9594c25864868a8558258cbedc5007de69","modified":1628263954222},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF2.png","hash":"deefb17a87679b3c2879ed772040a2bc7f55f9eb","modified":1628263954287},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF1.png","hash":"55b1860ac5827aa6968ea24fa6d0d5ccfc269eb0","modified":1628263954282},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF_entities.png","hash":"57e639be3c3bc632edb0afa1dc1ffd11ff3853dc","modified":1628263954292},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE2.png","hash":"0df62ca2aae53db8ccacea5af1caaf23eb547339","modified":1628268270053},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Plans1.png","hash":"af1d57bc200c90bdd5c7d15a91004ef36910905e","modified":1628279038748},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled.png","hash":"e009c2295595327f762a70dd976d6148e44e5e2e","modified":1628271248617},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Plans2.png","hash":"aef8a217a6ae366db6b33d9e5523c6df91f067b3","modified":1628279045113},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled2.png","hash":"1ceb216c76b12bc107fba01d7db94220a9aa66da","modified":1628271522368},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled3.png","hash":"94bbce2a105ee5ab27a6d50ecfddf6756613602f","modified":1628271530691},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled5.png","hash":"021b95b3f7d62ba2eb590657ac85d7491fc6c967","modified":1628271541358},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled4.png","hash":"9d3cae68500903114e6b5093440e2ca54a2663ac","modified":1628271536112},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled7.png","hash":"18f772dca98626aadd33f93a592f23484d24dfbc","modified":1628271545751},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled6.png","hash":"f6cdf09aa684da7f5e5b6ee31593b5dd3e0901cb","modified":1628271550923},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents2.png","hash":"794a9d9667988159f6ecd8dab62d073fd76ec9c6","modified":1628518400849},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents3.png","hash":"06ddfadaa4b8ca895953420ae86c99740bec771b","modified":1628519219044},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled8.png","hash":"a23179df53d7127b7a9275a8714a72b675e555f3","modified":1628271556311},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents4.png","hash":"65aaa70bf689780e1c31704c32d4dae5c7eb9f42","modified":1628519269187},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents5.png","hash":"2d28216cc1b40bc136d625fa3bba8b5852fab532","modified":1628519990718},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Plans1.png","hash":"361fca057b4d0dbc13562b62d86efaa664f00753","modified":1628531009258},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Plans2.png","hash":"76860b08afd66d05e2afb6a7c8637dbbbf3d835b","modified":1628531540760},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/TTS.png","hash":"880d9a28798ac5a415179196e1b228a31ced2051","modified":1628531951795},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Test2.png","hash":"1b80bfc33bdebe33f3761f4d15fc4551db2789a0","modified":1628533868319},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Test1.png","hash":"31edc5c66fe18dbdcb5d32d219d7bc51ba61f3c8","modified":1628533730381},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/concepts1.png","hash":"9b2e868930e6fff207a2d71d2fef35188c9f95dc","modified":1628512264795},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents1.png","hash":"cb78150e4054e12bfd56884dfe1272ef2eafee11","modified":1628518367875},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/concepts2.png","hash":"6b4b0513857e4de26427cd1099052b72ce97031e","modified":1628512343133},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/flow.xml","hash":"678d5d66c61a6d5bbf6f7598cae10c59874e518e","modified":1628429354382},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/info.png","hash":"3d45e3e35d7caa32f1d4ddfdfd58aba0f7d18e16","modified":1628443656078},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/console_config.png","hash":"cd0ef9371942a330fb5210b9db13ee1e9714a5c1","modified":1628432201619},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/flow.jpg","hash":"8d2d8e643249e023995ab953e9661478d042a20c","modified":1628429409455},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/input_output_contexts.xml","hash":"e9dbcc26a08120bd6996cf713fa5ca39f33e8d69","modified":1628431312538},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/project_info.png","hash":"2ce8cbe93734b68b68144cb5a0a0fdfc791d7292","modified":1628444391533},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/input_output_contexts.jpg","hash":"6a1205ef518cbe9ec056f281fd9913b6fc842e70","modified":1628431327703},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/plan_graph.png","hash":"7ae86535571e0088e0f10b9153fa7a7e9035cb3d","modified":1628532653424},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/publish.png","hash":"e958e6f0aef3f114dec283b84e70dc941ac583e7","modified":1628532263444},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB4.png","hash":"b9fe173e816c8a86b6ef27e1d47f03f7fe515f90","modified":1630081767087},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/info.png","hash":"616b3bc36662df4aa79a903197f0f8eaaec00def","modified":1630081767392},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans1.png","hash":"ebcec8b1d4cf03942d6148b46e0f6c60b8a984d2","modified":1630081767498},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans2.png","hash":"3a0d5c9d05f7f688cdf7bc62ba199c36b31e9c8e","modified":1630081767544},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans3.png","hash":"72fc1ca8a00e28553eb3998b75ce5e3d6eeae330","modified":1630081767547},{"_id":"source/_posts/按鈕監聽器/image.png","hash":"76f887bfb7d12d1770b07f8a3d70e2aa49796094","modified":1630137629212},{"_id":"source/_posts/第一個-Kotlin-專案/image12.png","hash":"ec3cd8dbe2d98ad2a66f6c823b48a27e968efe49","modified":1630089149604},{"_id":"source/_posts/第一個-Kotlin-專案/image7.png","hash":"e124e958c17bc0cf7960c1e0d689ba52386c899b","modified":1630089149614},{"_id":"source/_posts/第一個-Kotlin-專案/image8.png","hash":"829269e66058a48c04e3e61e99946a65457c32e8","modified":1630089149617},{"_id":"source/_posts/第一個-Kotlin-專案/image6.png","hash":"db379d46e546cfa38322e42b7bf92cc81771ed8b","modified":1630089149613},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/出現這個畫面就算成功了.png","hash":"41a065d4649290d23e31f629217ecf592db4aa62","modified":1628263954331},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/儲存到個人雲端.png","hash":"be3763ed28a1d5f558269b30156330009e20b66a","modified":1628263954319},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/匯出筆記本.png","hash":"a61a59ad5a27fe2d6d7b46ce5480eff2323bea93","modified":1628263954414},{"_id":"source/_posts/第一個-Kotlin-專案/image9.png","hash":"9ff6b64fda1ee2e814f91bce898cb213255ac862","modified":1630089149619},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/切換帳號.png","hash":"60fdd3028f9082d0126c182f8af17c43741584e3","modified":1628263954343},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/名字改一下.png","hash":"43487c9fc88512e98033c9a377bb2c6010d45d5f","modified":1628263954426},{"_id":"source/_posts/逆向工程-反編譯APK/classes-dex2jar.png","hash":"1ac85b81269b4f2cc0039b79c286cfa9d62ce92e","modified":1630083309280},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/成功出現在雲端.png","hash":"1c563f51a6bd6df018fa1f54f1c577417431eb27","modified":1628263954437},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/需要兩個帳號.png","hash":"9f4409df0c88150736139299436088966406cf90","modified":1628263954450},{"_id":"source/_posts/逆向工程-反編譯APK/classes.png","hash":"5968d353d6da280deab514d68162b3907495f2cc","modified":1630082338264},{"_id":"source/_posts/逆向工程-反編譯APK/open-file.png","hash":"a4268fc62b1fd7c7c8cc465e210f6757654d3e95","modified":1630083527472},{"_id":"source/_posts/逆向工程-反編譯APK/jd-gui.png","hash":"2e38feab78fbef6b1c7307845236961c1b6e746a","modified":1630083419061},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/服務.png","hash":"79cb24e37cfa0673c7863fb79b68aa2997c79976","modified":1628263954130},{"_id":"source/_posts/Zenbo開發系列-01-後蓋打開方式、偵錯USB孔位置/Zenbo頭上有USB孔.jpg","hash":"972bab596399d25c2f4842357f8f1da4c0b70724","modified":1628263954163},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/就是平板.jpg","hash":"e3a22524b0d1c87e155d1ef861e7a4945cb101fc","modified":1628263954184},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF比較強大.png","hash":"9d8576b3f60fa891101c6da7168b591966a37461","modified":1628263954299},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled1.png","hash":"0a88071f4ad05c0d1aa925b34351fee7c659a9c5","modified":1628271515698},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB2.png","hash":"1e718605f6027475b168f42a0d2a17e046e7edb6","modified":1630081767003},{"_id":"source/_posts/第一個-Kotlin-專案/image1.png","hash":"8e4e979e9c6af0073eae5f74791ae0f88bef55fe","modified":1630089149599},{"_id":"source/_posts/第一個-Kotlin-專案/image.png","hash":"968ba191c376b300fd3e3f3330dad2c3d9285983","modified":1630089149597},{"_id":"source/_posts/第一個-Kotlin-專案/image11.png","hash":"724e0d96a036c2fa86cd22c7bc49aef5f7d4e009","modified":1630089149602},{"_id":"source/_posts/第一個-Kotlin-專案/image10.png","hash":"0d5bcf99871620f224604949635fdd5e5ca2ff83","modified":1630089149601},{"_id":"source/_posts/第一個-Kotlin-專案/image13.png","hash":"ce4953f4d5767be0e1240767de4aa0288b413ace","modified":1630089149605},{"_id":"source/_posts/第一個-Kotlin-專案/image5.png","hash":"a1053ac61be8049ff0c6eeab330b3d103158cd07","modified":1630089149612},{"_id":"source/_posts/第一個-Kotlin-專案/image3.png","hash":"03555088953119d88c3dfd2b370e574839db2568","modified":1630089149609},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB1.png","hash":"1308befdf7432318f0130afb0bc7cf8373b7e0d0","modified":1630081766997},{"_id":"source/_posts/ADB-在你的手機上下指令.md","hash":"380740992101f11a226bde6a469af9982d3bdb49","modified":1630139124288},{"_id":"source/_posts/第一個-Kotlin-專案/image2.png","hash":"d41882d62b84c9275b58b9ec266438ba3a48292d","modified":1630089149608},{"_id":"source/_posts/第一個-Kotlin-專案/image4.png","hash":"ba4d449ff593c52dcb1f70d0e3b37da57ac1f7c9","modified":1630089149610},{"_id":"source/_posts/逆向工程-反編譯APK/result.png","hash":"9e8175f754c7babca1349cf1747dcbc9096a4513","modified":1630083573996},{"_id":"source/_posts/逆向工程-反編譯APK/unzip.png","hash":"6aa25213c07dbafa02884caed49a2f793a499bc8","modified":1630083081394},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB3.png","hash":"3c6266d71a3d0f2402a151805d92bfaa1f69842a","modified":1630081767010},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled9.png","hash":"09ac8baf4939c2d99af078c47bea357ec403bc8e","modified":1628271561048},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB.png","hash":"0bbd393e5a6cfc8c46f3b2d17c02903c1b5dba6b","modified":1630081766988},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1628263926067},{"_id":"node_modules/hexo-theme-next/README.md","hash":"43fe29330352545446a532e6630866251129882a","modified":1628263926075},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"9c9f11e36f7cc08fe951cbe07fd12be058c39b97","modified":1628263926083},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"95d8de74da7e2900689921c779da583af80388a9","modified":1628263926091},{"_id":"node_modules/hexo-theme-next/package.json","hash":"95827366bc294676d89a5e98837b9763d0e489c1","modified":1628263927122},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1628263926098},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1628263926104},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1628263926113},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1628263926165},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"cc7e3e2855348563d746f15c4752b9c63fcdd91a","modified":1628263926171},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"83023c4246b93a2f89f342afe29a7b9e1185f74f","modified":1628263926179},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"66445143decfbb5eb7031eb370698e31d5222a7a","modified":1628263926185},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"07955d78028cea2a590c63fdc2c01ca3ee05a727","modified":1628263926191},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"e09fad889ab3ae87874093e1acd51edc9297d869","modified":1628263926197},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"328c255c82e9b561e20a9f51a4d84abc63d1b90a","modified":1628263926203},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"d7c337ca72efb0bd02ade8b5560c559384ad84dd","modified":1628263926210},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c038ff0cadbe405750d980bcacfd3900acf96905","modified":1628263926215},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"57a35b21aca04ce8bca64fb5933f35626c462ea3","modified":1628263926222},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d6e2add7488065ec4f7d21cfcf7f0eaa877a84f4","modified":1628263926227},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"e47858bd1e0d0622c15366ae6c0513d996f589e3","modified":1628263926233},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"305025e932832328b7e2a8a584638a23c462e68f","modified":1628263926239},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"ff93459250c33d3c7ba06c30164cc4208edf9b33","modified":1628263926245},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"7d13108f4a70ff6a162508a49678e4a477fa7b56","modified":1628263926251},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"40512abdf7b5b4dcb45030c1fb4cba72ccf5cbfc","modified":1628263926258},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"f32871f67c63d26bc4e3e15df9b01f5a41236a50","modified":1628263926269},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"59507ba6ae0cb7ef5685043d341841c73d427c04","modified":1628263926263},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"e452ea8c48993262a3e8fce9d92072cafabfc734","modified":1628263926276},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"f8379d15038e22ef7039d91272cb4f36842dbbe1","modified":1628263926281},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"c1ee97ceb56da76ecdc7b69fa975f28c8574441b","modified":1628263926287},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"70c45076ad722b777956048fcc430eac37844c11","modified":1628263926293},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"2842f3e9fdde5bbd14cac89629221e68d80c8ea1","modified":1628263926299},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1628263927085},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c243c94abe62ec1e7da73067ac2db147f9a42416","modified":1628263927093},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"92db3756ad46718a0cbb0d2bda02218bd865a63d","modified":1628263927101},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"5fd0c362019eac987e17954dc85287b682195c76","modified":1628263927109},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"707a50e50b90df5fbeaf8407d12895d04163a290","modified":1628263927115},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"64148c8f6b623391433595ae691ff64d7941d8af","modified":1628263927116},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"e1d6bf38cf34972ca2ee5331a727787fe14082a3","modified":1628263926122},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1628263926131},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"c1ba78b246349f79adcf06a940961bba8a8350cb","modified":1628263926132},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1628263926304},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"354b0b0a24cbe97cccf2ec8bd97eb7d624fa0dea","modified":1628263926141},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"e81c2c9f6f7c8c1395b6dd3ff67ed424a1c62394","modified":1628263926311},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"fe331c2a8cfeffbdb639744115cd0a9158ae4ceb","modified":1628263926318},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d6b7bb7764e3b471ed6b4e5715f6cbe2dd453f59","modified":1628263926327},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"65f0d69084e0e26a0153d3b8db610a15c4102691","modified":1628263926328},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1628263926432},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1628263926486},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"967594ee64805e27b7ff9d957e23ab3f5c948600","modified":1628263926578},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"4eb65641b47ea9b23ed2ddfd69b18f21d7d8f214","modified":1628263926588},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1628263926597},{"_id":"node_modules/hexo-theme-next/layout/_third-party/nprogress.njk","hash":"709a20d09bc30cf3184e4c10a590e755cd8960f5","modified":1628263926997},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"89bd76116740cac541a747bcb5fb8edce3f7029c","modified":1628263926965},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1628263927002},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"d0444179fec512760ab1d4f76928d795b971c884","modified":1628263927012},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"8499b9c8c6cdae8aa7e4f5ec5b4b76037969db76","modified":1628263927301},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1628263927292},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"ee5edb49a24a2fddcd0086b7422e737488feae32","modified":1628263927312},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"4666e8e040c4689fbdef15dfc1275ad62e0828e3","modified":1628263927324},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"18cc82558e7a9f3b6086c41ce9de0c46e807a66c","modified":1628263927335},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"a08ed43b0542e764c49c3948569d4d97077a6f9f","modified":1628263927358},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"98fc68cf3fcd6253bbb94068ab1d86578a4ef9ea","modified":1628263927368},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1628263927380},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1628263927347},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1628263927391},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1628263927399},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1628263927412},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"4cf2002bcd5a6851aea68e9a1971e6399f5c3ed2","modified":1628263927421},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1628263927434},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1628263927442},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1628263927453},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1628263927463},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1628263927474},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1628263927494},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1628263927484},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1628263927506},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"fb3feea03bacd679bccc1ec0a1ddeede5d2703df","modified":1628263927132},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1628263928533},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1628263928536},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1628263928534},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1628263928542},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1628263928546},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1628263928553},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"1457291a7244b7786ec35b949d97183e4fbd181d","modified":1628263928559},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1628263928563},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1628263928567},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"20b979ebe3671cb415e6e7171485d65cc347086e","modified":1628263928575},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1628263928567},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"e256464541176567a2a55965bfd91415c7d68e18","modified":1628263928583},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"2d461e93f8802463941eff5c2b05ae4a4e38ae24","modified":1628263928595},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"113196655a1629908af320c90c7d21bc247726cd","modified":1628263928591},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"0447fa8311d21cdd5a1e2583a6e1f9308ac9ea6a","modified":1628263928734},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"f3368760774a02969bca9f99a97b5650be7daa88","modified":1628263927517},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"2ca820b221fb7458e6ef4fbcff826e1d1cf4b473","modified":1628263927999},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"38b8a12681a3a04bed02aa1659054912ed6def11","modified":1628263928521},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"7dc97674c232f6ca71e48b95e3f66472cd8e9c05","modified":1628263928528},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"2de62b14511cd96f5698695159a43ec94b3c42cf","modified":1628263926335},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"838cb2b7ae11a65f690d3f88288d6430ceb435d0","modified":1628263926342},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"5d02ca876f25038c9f9e1d789c6ebae9ef71ae00","modified":1628263926349},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"2f550b53372ec150c2538f216399995b8c003a21","modified":1628263926358},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"f066390762faf6684a523e2eb943420023aac2b1","modified":1628263926370},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"cb841a7a5db322dacd18c23074be300460aa6353","modified":1628263926384},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"940cad08a67e6c361214045096bd3cdffdf44fcf","modified":1628263926396},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"9c136edd2248e2d50c1f6110b75e2b75c299bbd7","modified":1628263926442},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1628263926451},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1628263926461},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"130e776575d634201d4f8ef3d78dc12624f19fde","modified":1628263926469},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1628263926479},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"0ebc0142abebbeef4278e32abb543c7d7fa75d88","modified":1628263926498},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"ebf83083856f8bd81ad47ffb985d44e338b4e6bb","modified":1628263926500},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1628263926509},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"5ca644f912fe71ee2bb7c0b8dd328e59faafc20b","modified":1628263926517},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"80d3dac42740d2aef677e25165e31c05eb048887","modified":1628263926528},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1628263926552},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"58b3f657a47bae406e5fcf19cd5e42680785ac71","modified":1628263926536},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"35a2e6fa3eccb75445c4dec6a7fd85f97911fec9","modified":1628263926568},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1628263926545},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1628263926696},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"375a86f0b19e130cfa7707007e3a53d9ae7c9b64","modified":1628263926709},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1628263926717},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1628263926561},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1628263926728},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1628263926744},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1628263926730},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1628263926754},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1628263926766},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1628263926782},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1628263926768},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"a84db8bc8804335f95609a221ac1746433dcdc89","modified":1628263926980},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1628263926986},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1628263926970},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c7cea42f6db2137c11ca1d83e43fcb7ad7ccfb89","modified":1628263926616},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"50287cb874271504d1ab60b86e61de01eda881f3","modified":1628263926626},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1628263926653},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"465fcffd4216f8ca0ea2613fe9cf7308f71b9da5","modified":1628263926670},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1628263926605},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1628263927024},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"d128b35536bfc68582b87de3984c870c503313ad","modified":1628263927033},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1628263927043},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1628263927052},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1628263927061},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1628263927070},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1628263927073},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1628263927079},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"cfff8331fdaa2ede4ab08c58cfc6d98c7d2374d9","modified":1628263927176},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1628263927186},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1628263927195},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1628263927201},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"70eb507ef7f1a4fc3ca71a3814cc57afe7f3f60c","modified":1628263927211},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1628263927255},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1628263927265},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1628263927273},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1628263927282},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"f67199585cab3ff632d3974181b592fbd112b278","modified":1628263927143},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1628263927151},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1628263927161},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"8508e96a5f883a5a57d8c1b8b5ea438fa29aafd3","modified":1628263927162},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"f3160080b6eb0ef6014ca6696ad15f378fc072f8","modified":1628263927164},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"e18fc7074a580509dd5f966eb55428eb86730393","modified":1628263928603},{"_id":"node_modules/hexo-theme-next/source/js/third-party/nprogress.js","hash":"a6b74d8fc5551dbaa1ac9de907d23a4e1bb5f5c6","modified":1628263928666},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"539c5bb51244f7f4aa98884f3229d128c1cefc40","modified":1628263928672},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"a1f44247c18ac00ee3e0026560398429e4c77dd7","modified":1628263928679},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1628263928484},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"ee5024be8e39605f0c6d71db038e15e0693d0f41","modified":1628263928492},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1628263928500},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"58014a2d087c4126058a99b5b1cb7d8a2eb6224d","modified":1628263928504},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"8e4fa8b2bc30a87f972b0648f70db2ea32dc128a","modified":1628263928512},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1628263928607},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1628263928607},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1628263928616},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"14b024c920a8b359777d79dd8e1a849387f8f3ad","modified":1628263928624},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1628263928616},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1628263928624},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"5460de247c038d6cfbe774d7f8747f0a958d9017","modified":1628263928633},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1c282d6c2151346d1f0aa95055d17abe77054ec9","modified":1628263928634},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1628263928642},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1628263928643},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"b1dd519dc3b1153c9d2ba2d35f68ca8f73f33bae","modified":1628263928632},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1628263928644},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1628263928651},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1628263928652},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"fb10fd131bc10a05d4d6a2cf268f5e4d85a90ab3","modified":1628263928659},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"45f41089a95defe406636ede46a84c96989bde9c","modified":1628263928694},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"ea94731438d8c518d946601f8f46a65b92381fac","modified":1628263928685},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"d0829fe41d2fe86b8499e2a896556c1275ea0066","modified":1628263928713},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"6abdc209f4503d4efd676e18bc30ddea813b6ff9","modified":1628263928723},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"81520086421c29b6ebe2975ddef5fd94040add8a","modified":1628263928732},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1628263928733},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ad044edaf6d3d9402559129841061e3eaea173cb","modified":1628263927526},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"4f692c9d937bb82e6067ee3b9350d32f452c2567","modified":1628263927534},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"5ec6081092feda51fdfd0bd91d9e3730100331c0","modified":1628263927543},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"b26aee1586cdf4168993cdea762c17387ce3ce66","modified":1628263927713},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"36cea5ab33eddbceaed7bbc2bba25df72604a137","modified":1628263927879},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1628263927885},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1628263927891},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1628263927909},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1628263927916},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1628263927929},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"3caa80aa2aba30f2e1b58b39de23ed5c8c55184e","modified":1628263927923},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"90f7d3baab061e860172b536c9edc38c7fd2ef5c","modified":1628263927994},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"f51b6a4f06359ed56b2d10caa6f15362d3b3751d","modified":1628263928008},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"b1054313ca9419e76fea0451417c881616f50a38","modified":1628263928015},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"f337981f8f20944ed366694aea88146c7b0a13ab","modified":1628263928367},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"00366a6bd1a66f99f845c5ebfc9e8cf56651b815","modified":1628263928354},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"c9a9e07b721bb2376e24753ae0a9452431439114","modified":1628263928383},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1628263928397},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"b39a58d63606be5076bbbb2d9e20300a5dcfcde2","modified":1628263927804},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"fef59a95584be575e17617d138d351b71de1b52e","modified":1628263927810},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"fd89988442f380cba907752fe3f608e3498f8c93","modified":1628263928407},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"018b6a761e197086174c9f06b4d5ea21cc230951","modified":1628263928416},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"28030c61288cc0e1321b18373a5c79029fd76a53","modified":1628263928427},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"134272cb8096156c9e32fbbe085394633c7509cd","modified":1628263928432},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1628263928438},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1628263928444},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1628263928463},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"6f87f78f90bac7e5275948cb21632ba99d3e5928","modified":1628263928450},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"9f60d501808f67d151af437221d0dfacc27c180c","modified":1628263928456},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"42bf453def88da82c842dca84e8f47087091f08e","modified":1628263928469},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1628263928476},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1628263928480},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1628263927620},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"b49e233cddd82804f58ebd772fcd3fc8bad24f3b","modified":1628263927640},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"d8bbe8571b9032b544d84430420a29247235fad8","modified":1628263927611},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"e53a5eb1d1771e284044bdb0bc0ed2de27923669","modified":1628263927651},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1628263927666},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"942943c7d5ea06b99d4e084aeb0ec2476f8586b6","modified":1628263927599},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"a90077eeca0a3c4887a534ddc625817dc7a51546","modified":1628263927677},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1628263927688},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"9043d9bc2db35ca000c79258ef89fdb161dc43fb","modified":1628263927698},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1628263927705},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1628263927552},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1628263927578},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1628263927561},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1628263927569},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1628263927588},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"f067696465a5f812dcc178b4e294794445a59e67","modified":1628263927719},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"6d46ac9b2260291bd562f181e5ea63821ae1af37","modified":1628263927726},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"033b8beefc9f4ac7f08ee309d4ce9039ddd7b542","modified":1628263927733},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"fe0f1edf277b0cd23a8a4635cb0f476d165c17b7","modified":1628263927738},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"f6bd6c941f76394b43bfa883613729940587213c","modified":1628263927744},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"aa3543cfb412130ec392a58e60fc39723cbdfbc6","modified":1628263927751},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"a4003e1408844568cb5102a5a111046cb19b2d31","modified":1628263927897},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"b9ee15cb65f36e7286e051f9bb60014a357abaaf","modified":1628263927902},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1628263927946},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"25c639ea7fccc2982459e07ac9ceb8f1224c307d","modified":1628263927951},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"899fed183460e4648f1ffc5fab16909c70c022b7","modified":1628263927937},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1628263927958},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"a366545c8d0ddfdb8ea648dd95ed221ab927fbe6","modified":1628263927963},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"fd5af9b40afc126fea71d569b50b1fcfec8328a8","modified":1628263927970},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"97a4b9cf8e4d5bd0b52e5cac28635649335cfa5e","modified":1628263927976},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1628263927982},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"afc2801dbfaed3004f29c3fc9bd56c0477793f64","modified":1628263927988},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"a2333025b130945b22094c2f9d854ab2485de0dc","modified":1628263927767},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"e9b54085452539ba59d5066616e7fc999105d087","modified":1628263927760},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"d4d2a828868056e69812e7f76d7c4f9ba47f74b2","modified":1628263927773},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"2db695204d39e4c7daa7b91585a0ea4b06b49f11","modified":1628263927786},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1628263927799},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"46567765e0617189e09893ce017db01526bf3d2c","modified":1628263927779},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"aa1de16f693dd6aa66adc5728cce112f0b6fbe38","modified":1628263927793},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"cb88462621edecdf8f808580b69be27e5abb5d19","modified":1628263927817},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"1c324d56ae83e96db2c4c6d63edd7ee51c936fc1","modified":1628263927834},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1628263927829},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1628263927823},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"57ed6770535ecb2e6485a0c87d4de6d6476368b9","modified":1628263927845},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"1c3d0b9c58cf6b9b09232ef749f036b1360a98c5","modified":1628263927851},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"63d8f5f169c2b1c969928fc79244c5fe89ee484e","modified":1628263927840},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"4ecadcc8b8b162a02175e9fa33cbdea376c39d6a","modified":1628263927859},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"782b06aad720a6225776a0c72e4a8b04633606ae","modified":1628263927864},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"195cfc10c3093054c601310f989119cbcfad01f6","modified":1628263927871},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/project_register.jpg","hash":"2739387667b8ef06397837613c4fbaec5a7e3db0","modified":1630081767558},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/save.jpg","hash":"4010de90b1fc50bd54a9859963b0c8fa3128a678","modified":1630081767570},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/Zenbo-Scratch-語句聽不懂問題的解決方式.pdf","hash":"208c546824e9f110c0659620fb2a5aa17d9102dc","modified":1630081766728},{"_id":"source/_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo/dstools.png","hash":"54d4f18a508f51e0bef5123b1ec1d4a9e4aac32f","modified":1630081766804},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/Zenbo-App-Builder-加關鍵字輔助按鈕.zba","hash":"bc9a58b0cc55d455b6f404412749ce472bee3bd5","modified":1630081767148},{"_id":"source/_posts/ADB-在你的手機上下指令/image4.png","hash":"d546df34d2a60e881cf6284d0e7e7e259b99a080","modified":1630138555230},{"_id":"source/_posts/ADB-在你的手機上下指令/image5.png","hash":"b612fccf836b70a068d6a9b60cc96afa8211d01b","modified":1630138566178},{"_id":"source/_posts/ADB-在你的手機上下指令/image1.png","hash":"845c2d1dfa37e4536cb35757870631e4287f7a5d","modified":1630138528572},{"_id":"source/_posts/ADB-在你的手機上下指令/image2.png","hash":"e4f699bf0ae35f9e085609cb475f901d0442261b","modified":1630138538474},{"_id":"source/_posts/ADB-在你的手機上下指令/image3.png","hash":"b9ae8f2144ff8cfae1058cff1cc6ea3e99b91c1a","modified":1630138547432}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2021-08-07T07:10:31.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-08-07 15:10:31\ntype: \"tags\"\n---\n","updated":"2021-08-07T07:11:13.041Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cksvi98al00003nwbdhyj0bt1","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"[Zenbo開發系列] 06-安裝DDE語料到Zenbo","date":"2021-08-10T06:10:39.000Z","_content":"\n今天使用的範例出自高煥堂老師的書《AI機器人、藍芽與Android整合開發技術》，需要完整程式碼請參考書中內容喔。\n本篇會以 `Ex14-01-ZenboWiFi` 這份程式碼說明如何將語料安裝到 Zenob 中。\n\n<!-- more -->\n\n# 準備材料\n\n你需要\n- 一台 Zenbo\n- 一份做好的 DDE 語料 (製作方式請參考[上一篇](../../07/Zenbo開發系列-05-DDE回覆規則設計))\n- 一份 `Ex14-01-ZenboWiFi` Sample code\n\n在 DDE info 設定的地方，Launch Activity 要填 APP 啟動的第一個 Activity，完整路徑可以看 Manifest。\n![project_info](project_info.png)\n![launch_activity](launch_activity.png)\n\n# 綁定 Domain\n\n還記得你的 Domain UUID 嗎?\n在 DDE info 最上面 點選 `All` 可以查看你所有的 uuid。\n![all_uuid](all_uuid.png)\n\n打開 Android 專案，範例中基本都已經打好了，我們只須把自己的 Domain 換上去。\n特別注意，總共有 3 個地方要改唷\n- Manifest 2 個\n- ZenboWiFiActivity 1 個\n\n![manifest_uuid](manifest_uuid.png)\n![activity_uuid](activity_uuid.png)\n\n第一次安裝，開啟時應該會自動更新語料。\n去 DS Tools 確認是否有更新成功\n\n> DS Tools 可以在 [DDE Tutorial-Links](https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Downloads/Links) 找到下載連結。\n> 把 APK 裝到 Zenbo 的方法很多，用隨身碟或雲端硬碟都行。\n\n# DS Tools\n可以管理自己安裝在 Zenbo 上的語料庫。\n如果剛才 DDE 有安裝成功的話，這裡點選 `Show APP List` 會看到 Package name、UUID 和 更新時間。確認一下 PKG 和 UUID 是不是都符合前面的設定。\n以後如果要更新 DDE 的話，可以先點選要更新的 APP，讓 UUID 自動帶到上方欄位，再按 `Update by ID`。\n![dstools](dstools.png)\n\n# 刪除 Zenbo 中的 DDE\n\n這就是我前幾篇提到，我寫信給客服信箱的問題了。我前面不知道怎麼弄的，PKG 和 UUID 一直對不上，所以沒辦法更新。客服請我先把裝壞的 DS 資料清掉，這邊紀錄一下作法。\n\n1. 先把裝壞的 APP 刪除: 設定 > 應用程式 > [你的APP] > 儲存空間 > 清除資料\n2. 把 APP 刪掉\n3. 參考 [Zenbo-Scratch-語句聽不懂問題的解決方式](Zenbo-Scratch-語句聽不懂問題的解決方式.pdf)  將 LocalDS 的資料清除\n   - 這篇就是客服寄給我的\n4. Zenbo 關機重開\n5. DDE 重新 Publish、Deploy to Download Server\n6. APP 重裝\n7. 去 ASUS Update Tools 確認\n\n# 成果\n我有改過 `Ex14-01-ZenboWiFi` 的畫面和部份的 code 成品大概像影片這樣。\n\n{% youtube zWkc5L9Ux5o %}\n\n## DDE 的問題\n截自我的論文:\n> 根據文獻（朱祐萱，2019；白麗等，2018），Zenbo 的語音識別功能，不能清楚辨識指令，是其主要問題。再加上本研究嘗試使用 Zenbo SDK 實作語音回答時，發現 Zenbo 無法處理破音字的發音。例如，「長照」正確唸法是「長（ㄔㄤˊ）照」，但 Zenbo SDK 會唸作「長（ㄓㄤˇ）照」。有時也會跳過句子中的某些字，例如，「台中市政府長期照顧管理中心」的「長」、「原住民」的「民」。\n>\n> 經過嘗試，最後本研究決定在 APP 中，使用 Android 官方提供的兩個函式庫「android.speech.RecognizerIntent」（以下簡稱 RecognizerIntent）與「android.speech.tts.TextToSpeech」（以下簡稱 TextToSpeech）。根據官方文件 RecognizerIntent（Android Developers, 2021）可以透過 Intent（意圖）啟動語音辨識；TextToSpeech（Android Developers, 2021）可以從文本合成出語音後，立即播放或儲存成音檔。\n>\n> 為了解決 Zenbo 反應遲鈍，我們在 APP 中提供按鈕，按下按鈕便會觸發 RecognizerIntent 開始聆聽使用者的問題，並將問句顯示在畫面上，使用者可以確認語音輸入的結果是否正確再點選送出（請參考  Youtube  影片：[語音識別與輸出（使用 RecognizerIntent 和 TextToSpeech）](https://youtu.be/iSneVFi9J0I)）。\n\n這就是我最後沒有使用 DDE 和 Zenbo SDK 的原因。\n\n# 參考資料\n- Android Developers. (2021). TextToSpeech. Retrieved from https://developer.android.com/reference/android/speech/tts/TextToSpeech\n- Android Developers. (2021). RecognizerIntent. Retrieved from https://developer.android.com/reference/android/speech/RecognizerIntent\n- 白麗、鄭家凱、林恩如、陳思宇、張譯云、徐業良、華碩電腦智慧機器人產品企劃團隊（2018）。 陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo 為例。福祉科技與服務管理學刊，6(3)，265-282。DOI：10.6283/JOCSG.201809_6(3).265。檢自：https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282。\n- 朱祐萱（2019）。銀髮族使用 Zenbo 機器人服務體驗洞察研究。南開科技大學福祉科技與服務管理所碩士論文，南投縣。檢自：https://hdl.handle.net/11296/x4x8c6。\n","source":"_drafts/Zenbo開發系列-06-安裝DDE語料到Zenbo.md","raw":"---\ntitle: '[Zenbo開發系列] 06-安裝DDE語料到Zenbo'\ndate: 2021-08-10 14:10:39\ntags:\n- Zenbo\n- DDE\n---\n\n今天使用的範例出自高煥堂老師的書《AI機器人、藍芽與Android整合開發技術》，需要完整程式碼請參考書中內容喔。\n本篇會以 `Ex14-01-ZenboWiFi` 這份程式碼說明如何將語料安裝到 Zenob 中。\n\n<!-- more -->\n\n# 準備材料\n\n你需要\n- 一台 Zenbo\n- 一份做好的 DDE 語料 (製作方式請參考[上一篇](../../07/Zenbo開發系列-05-DDE回覆規則設計))\n- 一份 `Ex14-01-ZenboWiFi` Sample code\n\n在 DDE info 設定的地方，Launch Activity 要填 APP 啟動的第一個 Activity，完整路徑可以看 Manifest。\n![project_info](project_info.png)\n![launch_activity](launch_activity.png)\n\n# 綁定 Domain\n\n還記得你的 Domain UUID 嗎?\n在 DDE info 最上面 點選 `All` 可以查看你所有的 uuid。\n![all_uuid](all_uuid.png)\n\n打開 Android 專案，範例中基本都已經打好了，我們只須把自己的 Domain 換上去。\n特別注意，總共有 3 個地方要改唷\n- Manifest 2 個\n- ZenboWiFiActivity 1 個\n\n![manifest_uuid](manifest_uuid.png)\n![activity_uuid](activity_uuid.png)\n\n第一次安裝，開啟時應該會自動更新語料。\n去 DS Tools 確認是否有更新成功\n\n> DS Tools 可以在 [DDE Tutorial-Links](https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Downloads/Links) 找到下載連結。\n> 把 APK 裝到 Zenbo 的方法很多，用隨身碟或雲端硬碟都行。\n\n# DS Tools\n可以管理自己安裝在 Zenbo 上的語料庫。\n如果剛才 DDE 有安裝成功的話，這裡點選 `Show APP List` 會看到 Package name、UUID 和 更新時間。確認一下 PKG 和 UUID 是不是都符合前面的設定。\n以後如果要更新 DDE 的話，可以先點選要更新的 APP，讓 UUID 自動帶到上方欄位，再按 `Update by ID`。\n![dstools](dstools.png)\n\n# 刪除 Zenbo 中的 DDE\n\n這就是我前幾篇提到，我寫信給客服信箱的問題了。我前面不知道怎麼弄的，PKG 和 UUID 一直對不上，所以沒辦法更新。客服請我先把裝壞的 DS 資料清掉，這邊紀錄一下作法。\n\n1. 先把裝壞的 APP 刪除: 設定 > 應用程式 > [你的APP] > 儲存空間 > 清除資料\n2. 把 APP 刪掉\n3. 參考 [Zenbo-Scratch-語句聽不懂問題的解決方式](Zenbo-Scratch-語句聽不懂問題的解決方式.pdf)  將 LocalDS 的資料清除\n   - 這篇就是客服寄給我的\n4. Zenbo 關機重開\n5. DDE 重新 Publish、Deploy to Download Server\n6. APP 重裝\n7. 去 ASUS Update Tools 確認\n\n# 成果\n我有改過 `Ex14-01-ZenboWiFi` 的畫面和部份的 code 成品大概像影片這樣。\n\n{% youtube zWkc5L9Ux5o %}\n\n## DDE 的問題\n截自我的論文:\n> 根據文獻（朱祐萱，2019；白麗等，2018），Zenbo 的語音識別功能，不能清楚辨識指令，是其主要問題。再加上本研究嘗試使用 Zenbo SDK 實作語音回答時，發現 Zenbo 無法處理破音字的發音。例如，「長照」正確唸法是「長（ㄔㄤˊ）照」，但 Zenbo SDK 會唸作「長（ㄓㄤˇ）照」。有時也會跳過句子中的某些字，例如，「台中市政府長期照顧管理中心」的「長」、「原住民」的「民」。\n>\n> 經過嘗試，最後本研究決定在 APP 中，使用 Android 官方提供的兩個函式庫「android.speech.RecognizerIntent」（以下簡稱 RecognizerIntent）與「android.speech.tts.TextToSpeech」（以下簡稱 TextToSpeech）。根據官方文件 RecognizerIntent（Android Developers, 2021）可以透過 Intent（意圖）啟動語音辨識；TextToSpeech（Android Developers, 2021）可以從文本合成出語音後，立即播放或儲存成音檔。\n>\n> 為了解決 Zenbo 反應遲鈍，我們在 APP 中提供按鈕，按下按鈕便會觸發 RecognizerIntent 開始聆聽使用者的問題，並將問句顯示在畫面上，使用者可以確認語音輸入的結果是否正確再點選送出（請參考  Youtube  影片：[語音識別與輸出（使用 RecognizerIntent 和 TextToSpeech）](https://youtu.be/iSneVFi9J0I)）。\n\n這就是我最後沒有使用 DDE 和 Zenbo SDK 的原因。\n\n# 參考資料\n- Android Developers. (2021). TextToSpeech. Retrieved from https://developer.android.com/reference/android/speech/tts/TextToSpeech\n- Android Developers. (2021). RecognizerIntent. Retrieved from https://developer.android.com/reference/android/speech/RecognizerIntent\n- 白麗、鄭家凱、林恩如、陳思宇、張譯云、徐業良、華碩電腦智慧機器人產品企劃團隊（2018）。 陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo 為例。福祉科技與服務管理學刊，6(3)，265-282。DOI：10.6283/JOCSG.201809_6(3).265。檢自：https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282。\n- 朱祐萱（2019）。銀髮族使用 Zenbo 機器人服務體驗洞察研究。南開科技大學福祉科技與服務管理所碩士論文，南投縣。檢自：https://hdl.handle.net/11296/x4x8c6。\n","slug":"Zenbo開發系列-06-安裝DDE語料到Zenbo","published":0,"updated":"2021-08-27T16:29:26.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98an00013nwbe2e3c22v","content":"<p>今天使用的範例出自高煥堂老師的書《AI機器人、藍芽與Android整合開發技術》，需要完整程式碼請參考書中內容喔。<br>本篇會以 <code>Ex14-01-ZenboWiFi</code> 這份程式碼說明如何將語料安裝到 Zenob 中。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"準備材料\"><a href=\"#準備材料\" class=\"headerlink\" title=\"準備材料\"></a>準備材料</h1><p>你需要</p>\n<ul>\n<li>一台 Zenbo</li>\n<li>一份做好的 DDE 語料 (製作方式請參考<a href=\"../../07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88\">上一篇</a>)</li>\n<li>一份 <code>Ex14-01-ZenboWiFi</code> Sample code</li>\n</ul>\n<p>在 DDE info 設定的地方，Launch Activity 要填 APP 啟動的第一個 Activity，完整路徑可以看 Manifest。<br><img src=\"/project_info.png\" alt=\"project_info\"><br><img src=\"/launch_activity.png\" alt=\"launch_activity\"></p>\n<h1 id=\"綁定-Domain\"><a href=\"#綁定-Domain\" class=\"headerlink\" title=\"綁定 Domain\"></a>綁定 Domain</h1><p>還記得你的 Domain UUID 嗎?<br>在 DDE info 最上面 點選 <code>All</code> 可以查看你所有的 uuid。<br><img src=\"/all_uuid.png\" alt=\"all_uuid\"></p>\n<p>打開 Android 專案，範例中基本都已經打好了，我們只須把自己的 Domain 換上去。<br>特別注意，總共有 3 個地方要改唷</p>\n<ul>\n<li>Manifest 2 個</li>\n<li>ZenboWiFiActivity 1 個</li>\n</ul>\n<p><img src=\"/manifest_uuid.png\" alt=\"manifest_uuid\"><br><img src=\"/activity_uuid.png\" alt=\"activity_uuid\"></p>\n<p>第一次安裝，開啟時應該會自動更新語料。<br>去 DS Tools 確認是否有更新成功</p>\n<blockquote>\n<p>DS Tools 可以在 <a href=\"https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Downloads/Links\">DDE Tutorial-Links</a> 找到下載連結。<br>把 APK 裝到 Zenbo 的方法很多，用隨身碟或雲端硬碟都行。</p>\n</blockquote>\n<h1 id=\"DS-Tools\"><a href=\"#DS-Tools\" class=\"headerlink\" title=\"DS Tools\"></a>DS Tools</h1><p>可以管理自己安裝在 Zenbo 上的語料庫。<br>如果剛才 DDE 有安裝成功的話，這裡點選 <code>Show APP List</code> 會看到 Package name、UUID 和 更新時間。確認一下 PKG 和 UUID 是不是都符合前面的設定。<br>以後如果要更新 DDE 的話，可以先點選要更新的 APP，讓 UUID 自動帶到上方欄位，再按 <code>Update by ID</code>。<br><img src=\"/dstools.png\" alt=\"dstools\"></p>\n<h1 id=\"刪除-Zenbo-中的-DDE\"><a href=\"#刪除-Zenbo-中的-DDE\" class=\"headerlink\" title=\"刪除 Zenbo 中的 DDE\"></a>刪除 Zenbo 中的 DDE</h1><p>這就是我前幾篇提到，我寫信給客服信箱的問題了。我前面不知道怎麼弄的，PKG 和 UUID 一直對不上，所以沒辦法更新。客服請我先把裝壞的 DS 資料清掉，這邊紀錄一下作法。</p>\n<ol>\n<li>先把裝壞的 APP 刪除: 設定 &gt; 應用程式 &gt; [你的APP] &gt; 儲存空間 &gt; 清除資料</li>\n<li>把 APP 刪掉</li>\n<li>參考 <a href=\"Zenbo-Scratch-%E8%AA%9E%E5%8F%A5%E8%81%BD%E4%B8%8D%E6%87%82%E5%95%8F%E9%A1%8C%E7%9A%84%E8%A7%A3%E6%B1%BA%E6%96%B9%E5%BC%8F.pdf\">Zenbo-Scratch-語句聽不懂問題的解決方式</a>  將 LocalDS 的資料清除<ul>\n<li>這篇就是客服寄給我的</li>\n</ul>\n</li>\n<li>Zenbo 關機重開</li>\n<li>DDE 重新 Publish、Deploy to Download Server</li>\n<li>APP 重裝</li>\n<li>去 ASUS Update Tools 確認</li>\n</ol>\n<h1 id=\"成果\"><a href=\"#成果\" class=\"headerlink\" title=\"成果\"></a>成果</h1><p>我有改過 <code>Ex14-01-ZenboWiFi</code> 的畫面和部份的 code 成品大概像影片這樣。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/zWkc5L9Ux5o\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<h2 id=\"DDE-的問題\"><a href=\"#DDE-的問題\" class=\"headerlink\" title=\"DDE 的問題\"></a>DDE 的問題</h2><p>截自我的論文:</p>\n<blockquote>\n<p>根據文獻（朱祐萱，2019；白麗等，2018），Zenbo 的語音識別功能，不能清楚辨識指令，是其主要問題。再加上本研究嘗試使用 Zenbo SDK 實作語音回答時，發現 Zenbo 無法處理破音字的發音。例如，「長照」正確唸法是「長（ㄔㄤˊ）照」，但 Zenbo SDK 會唸作「長（ㄓㄤˇ）照」。有時也會跳過句子中的某些字，例如，「台中市政府長期照顧管理中心」的「長」、「原住民」的「民」。</p>\n<p>經過嘗試，最後本研究決定在 APP 中，使用 Android 官方提供的兩個函式庫「android.speech.RecognizerIntent」（以下簡稱 RecognizerIntent）與「android.speech.tts.TextToSpeech」（以下簡稱 TextToSpeech）。根據官方文件 RecognizerIntent（Android Developers, 2021）可以透過 Intent（意圖）啟動語音辨識；TextToSpeech（Android Developers, 2021）可以從文本合成出語音後，立即播放或儲存成音檔。</p>\n<p>為了解決 Zenbo 反應遲鈍，我們在 APP 中提供按鈕，按下按鈕便會觸發 RecognizerIntent 開始聆聽使用者的問題，並將問句顯示在畫面上，使用者可以確認語音輸入的結果是否正確再點選送出（請參考  Youtube  影片：<a href=\"https://youtu.be/iSneVFi9J0I\">語音識別與輸出（使用 RecognizerIntent 和 TextToSpeech）</a>）。</p>\n</blockquote>\n<p>這就是我最後沒有使用 DDE 和 Zenbo SDK 的原因。</p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><ul>\n<li>Android Developers. (2021). TextToSpeech. Retrieved from <a href=\"https://developer.android.com/reference/android/speech/tts/TextToSpeech\">https://developer.android.com/reference/android/speech/tts/TextToSpeech</a></li>\n<li>Android Developers. (2021). RecognizerIntent. Retrieved from <a href=\"https://developer.android.com/reference/android/speech/RecognizerIntent\">https://developer.android.com/reference/android/speech/RecognizerIntent</a></li>\n<li>白麗、鄭家凱、林恩如、陳思宇、張譯云、徐業良、華碩電腦智慧機器人產品企劃團隊（2018）。 陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo 為例。福祉科技與服務管理學刊，6(3)，265-282。DOI：10.6283/JOCSG.201809_6(3).265。檢自：<a href=\"https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282%E3%80%82\">https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282。</a></li>\n<li>朱祐萱（2019）。銀髮族使用 Zenbo 機器人服務體驗洞察研究。南開科技大學福祉科技與服務管理所碩士論文，南投縣。檢自：<a href=\"https://hdl.handle.net/11296/x4x8c6%E3%80%82\">https://hdl.handle.net/11296/x4x8c6。</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>今天使用的範例出自高煥堂老師的書《AI機器人、藍芽與Android整合開發技術》，需要完整程式碼請參考書中內容喔。<br>本篇會以 <code>Ex14-01-ZenboWiFi</code> 這份程式碼說明如何將語料安裝到 Zenob 中。</p>","more":"<h1 id=\"準備材料\"><a href=\"#準備材料\" class=\"headerlink\" title=\"準備材料\"></a>準備材料</h1><p>你需要</p>\n<ul>\n<li>一台 Zenbo</li>\n<li>一份做好的 DDE 語料 (製作方式請參考<a href=\"../../07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88\">上一篇</a>)</li>\n<li>一份 <code>Ex14-01-ZenboWiFi</code> Sample code</li>\n</ul>\n<p>在 DDE info 設定的地方，Launch Activity 要填 APP 啟動的第一個 Activity，完整路徑可以看 Manifest。<br><img src=\"/project_info.png\" alt=\"project_info\"><br><img src=\"/launch_activity.png\" alt=\"launch_activity\"></p>\n<h1 id=\"綁定-Domain\"><a href=\"#綁定-Domain\" class=\"headerlink\" title=\"綁定 Domain\"></a>綁定 Domain</h1><p>還記得你的 Domain UUID 嗎?<br>在 DDE info 最上面 點選 <code>All</code> 可以查看你所有的 uuid。<br><img src=\"/all_uuid.png\" alt=\"all_uuid\"></p>\n<p>打開 Android 專案，範例中基本都已經打好了，我們只須把自己的 Domain 換上去。<br>特別注意，總共有 3 個地方要改唷</p>\n<ul>\n<li>Manifest 2 個</li>\n<li>ZenboWiFiActivity 1 個</li>\n</ul>\n<p><img src=\"/manifest_uuid.png\" alt=\"manifest_uuid\"><br><img src=\"/activity_uuid.png\" alt=\"activity_uuid\"></p>\n<p>第一次安裝，開啟時應該會自動更新語料。<br>去 DS Tools 確認是否有更新成功</p>\n<blockquote>\n<p>DS Tools 可以在 <a href=\"https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Downloads/Links\">DDE Tutorial-Links</a> 找到下載連結。<br>把 APK 裝到 Zenbo 的方法很多，用隨身碟或雲端硬碟都行。</p>\n</blockquote>\n<h1 id=\"DS-Tools\"><a href=\"#DS-Tools\" class=\"headerlink\" title=\"DS Tools\"></a>DS Tools</h1><p>可以管理自己安裝在 Zenbo 上的語料庫。<br>如果剛才 DDE 有安裝成功的話，這裡點選 <code>Show APP List</code> 會看到 Package name、UUID 和 更新時間。確認一下 PKG 和 UUID 是不是都符合前面的設定。<br>以後如果要更新 DDE 的話，可以先點選要更新的 APP，讓 UUID 自動帶到上方欄位，再按 <code>Update by ID</code>。<br><img src=\"/dstools.png\" alt=\"dstools\"></p>\n<h1 id=\"刪除-Zenbo-中的-DDE\"><a href=\"#刪除-Zenbo-中的-DDE\" class=\"headerlink\" title=\"刪除 Zenbo 中的 DDE\"></a>刪除 Zenbo 中的 DDE</h1><p>這就是我前幾篇提到，我寫信給客服信箱的問題了。我前面不知道怎麼弄的，PKG 和 UUID 一直對不上，所以沒辦法更新。客服請我先把裝壞的 DS 資料清掉，這邊紀錄一下作法。</p>\n<ol>\n<li>先把裝壞的 APP 刪除: 設定 &gt; 應用程式 &gt; [你的APP] &gt; 儲存空間 &gt; 清除資料</li>\n<li>把 APP 刪掉</li>\n<li>參考 <a href=\"Zenbo-Scratch-%E8%AA%9E%E5%8F%A5%E8%81%BD%E4%B8%8D%E6%87%82%E5%95%8F%E9%A1%8C%E7%9A%84%E8%A7%A3%E6%B1%BA%E6%96%B9%E5%BC%8F.pdf\">Zenbo-Scratch-語句聽不懂問題的解決方式</a>  將 LocalDS 的資料清除<ul>\n<li>這篇就是客服寄給我的</li>\n</ul>\n</li>\n<li>Zenbo 關機重開</li>\n<li>DDE 重新 Publish、Deploy to Download Server</li>\n<li>APP 重裝</li>\n<li>去 ASUS Update Tools 確認</li>\n</ol>\n<h1 id=\"成果\"><a href=\"#成果\" class=\"headerlink\" title=\"成果\"></a>成果</h1><p>我有改過 <code>Ex14-01-ZenboWiFi</code> 的畫面和部份的 code 成品大概像影片這樣。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/zWkc5L9Ux5o\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<h2 id=\"DDE-的問題\"><a href=\"#DDE-的問題\" class=\"headerlink\" title=\"DDE 的問題\"></a>DDE 的問題</h2><p>截自我的論文:</p>\n<blockquote>\n<p>根據文獻（朱祐萱，2019；白麗等，2018），Zenbo 的語音識別功能，不能清楚辨識指令，是其主要問題。再加上本研究嘗試使用 Zenbo SDK 實作語音回答時，發現 Zenbo 無法處理破音字的發音。例如，「長照」正確唸法是「長（ㄔㄤˊ）照」，但 Zenbo SDK 會唸作「長（ㄓㄤˇ）照」。有時也會跳過句子中的某些字，例如，「台中市政府長期照顧管理中心」的「長」、「原住民」的「民」。</p>\n<p>經過嘗試，最後本研究決定在 APP 中，使用 Android 官方提供的兩個函式庫「android.speech.RecognizerIntent」（以下簡稱 RecognizerIntent）與「android.speech.tts.TextToSpeech」（以下簡稱 TextToSpeech）。根據官方文件 RecognizerIntent（Android Developers, 2021）可以透過 Intent（意圖）啟動語音辨識；TextToSpeech（Android Developers, 2021）可以從文本合成出語音後，立即播放或儲存成音檔。</p>\n<p>為了解決 Zenbo 反應遲鈍，我們在 APP 中提供按鈕，按下按鈕便會觸發 RecognizerIntent 開始聆聽使用者的問題，並將問句顯示在畫面上，使用者可以確認語音輸入的結果是否正確再點選送出（請參考  Youtube  影片：<a href=\"https://youtu.be/iSneVFi9J0I\">語音識別與輸出（使用 RecognizerIntent 和 TextToSpeech）</a>）。</p>\n</blockquote>\n<p>這就是我最後沒有使用 DDE 和 Zenbo SDK 的原因。</p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><ul>\n<li>Android Developers. (2021). TextToSpeech. Retrieved from <a href=\"https://developer.android.com/reference/android/speech/tts/TextToSpeech\">https://developer.android.com/reference/android/speech/tts/TextToSpeech</a></li>\n<li>Android Developers. (2021). RecognizerIntent. Retrieved from <a href=\"https://developer.android.com/reference/android/speech/RecognizerIntent\">https://developer.android.com/reference/android/speech/RecognizerIntent</a></li>\n<li>白麗、鄭家凱、林恩如、陳思宇、張譯云、徐業良、華碩電腦智慧機器人產品企劃團隊（2018）。 陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo 為例。福祉科技與服務管理學刊，6(3)，265-282。DOI：10.6283/JOCSG.201809_6(3).265。檢自：<a href=\"https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282%E3%80%82\">https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282。</a></li>\n<li>朱祐萱（2019）。銀髮族使用 Zenbo 機器人服務體驗洞察研究。南開科技大學福祉科技與服務管理所碩士論文，南投縣。檢自：<a href=\"https://hdl.handle.net/11296/x4x8c6%E3%80%82\">https://hdl.handle.net/11296/x4x8c6。</a></li>\n</ul>"},{"title":"CodeIgniter安裝Swagger","date":"2019-08-19T17:19:26.000Z","_content":"\n* 本文曾發佈在 [https://hackmd.io/@yrw/S1TdomtNS](https://hackmd.io/@yrw/S1TdomtNS)\n\n> 環境: Windows、XAMPP\n\n1. 下載CodeIgniter\n<!-- more -->\n2. 建資料夾`YourProject/swagger/`\n3. 下載[Swagger UI](https://github.com/swagger-api/swagger-ui)，解壓縮，將`dist/`資料夾裡的檔案全搬到`YourProject/swagger/`\n\t![dir](dir.png)\n4. 安裝\n\t```shell\n\tcomposer require zircote/swagger-php:2.*\n\t```\n5. 有需要的話，安裝\n\t```shell\n\tcomposer require darkaonline/l5-swagger\n\t```\n6. 建立Controller(Member)\n7. 加上一些註解 swg annotation\n一份專案裡至少需要一個`@SWG\\Info`的註解\n\t```php\n\t/**\n\t * 这里需要一个主`Swagger`定义：\n\t * @SWG\\Swagger(\n\t *     @SWG\\Info(\n\t *         title=\"我的`Swagger`API文檔\",\n\t *         version=\"1.0.0\"\n\t *     )\n\t * )\n\t */\n\t```\n\n8. 加上一些方法和註解\n\t```php\n\t/**\n\t * @SWG\\Post(\n\t *     path=\"/YourProject/index.php/Member/login\",\n\t *     tags={\"會員功能\"},\n\t *     summary=\"登入\",\n\t *     @SWG\\Parameter(\n\t *         in=\"query\",\n\t *         name=\"account\",\n\t *         type=\"string\",\n\t *         description=\"帳號\",\n\t *         required=true,\n\t *     ),\n\t *     @SWG\\Parameter(\n\t *         in=\"query\",\n\t *         name=\"password\",\n\t *         type=\"string\",\n\t *         description=\"密碼\",\n\t *         required=true,\n\t *     ),\n\t *     @SWG\\Response(response=\"default\", description=\"操作成功\")\n\t * )\n\t *\n\t */\n\tpublic   function   login()\n\t{\n\t\techo '{\"msg\":\"hello world\"}';\n\t}\n\t```\n\n9. 下指令生成API 文件檔(json格式)\n路徑和檔名可以自行調整\n\n\t> php [swagger程式位置] [Controller資料夾(需要掃描的資料夾)] -o [api文件生成位置]\n\n\t```shell\n\tphp /xampp/htdocs/YourProject/vendor/zircote/swagger-php/bin/swagger /xampp/htdocs/YourProject/application/controllers -o \\xampp\\htdocs\\YourProject\\api_doc.json\n\t```\n\t\n10. 修改`YourProject/swagger/index.html`\n    改成你的api文件位置\n    http://127.0.0.1/YourProject/api_doc.json\n    ![edit](edit.png)\n\n11. 瀏覽 http://127.0.0.1/Swagger_CodeIgniter/swagger/\n    **沒更新的話，用無痕瀏覽**\n    ![show](show.png)\n\n","source":"_posts/CodeIgniter安裝Swagger.md","raw":"---\ntitle: CodeIgniter安裝Swagger\ndate: 2019-08-20 01:19:26\ntags:\n- CodeIgniter\n- Swagger\n- API\n---\n\n* 本文曾發佈在 [https://hackmd.io/@yrw/S1TdomtNS](https://hackmd.io/@yrw/S1TdomtNS)\n\n> 環境: Windows、XAMPP\n\n1. 下載CodeIgniter\n<!-- more -->\n2. 建資料夾`YourProject/swagger/`\n3. 下載[Swagger UI](https://github.com/swagger-api/swagger-ui)，解壓縮，將`dist/`資料夾裡的檔案全搬到`YourProject/swagger/`\n\t![dir](dir.png)\n4. 安裝\n\t```shell\n\tcomposer require zircote/swagger-php:2.*\n\t```\n5. 有需要的話，安裝\n\t```shell\n\tcomposer require darkaonline/l5-swagger\n\t```\n6. 建立Controller(Member)\n7. 加上一些註解 swg annotation\n一份專案裡至少需要一個`@SWG\\Info`的註解\n\t```php\n\t/**\n\t * 这里需要一个主`Swagger`定义：\n\t * @SWG\\Swagger(\n\t *     @SWG\\Info(\n\t *         title=\"我的`Swagger`API文檔\",\n\t *         version=\"1.0.0\"\n\t *     )\n\t * )\n\t */\n\t```\n\n8. 加上一些方法和註解\n\t```php\n\t/**\n\t * @SWG\\Post(\n\t *     path=\"/YourProject/index.php/Member/login\",\n\t *     tags={\"會員功能\"},\n\t *     summary=\"登入\",\n\t *     @SWG\\Parameter(\n\t *         in=\"query\",\n\t *         name=\"account\",\n\t *         type=\"string\",\n\t *         description=\"帳號\",\n\t *         required=true,\n\t *     ),\n\t *     @SWG\\Parameter(\n\t *         in=\"query\",\n\t *         name=\"password\",\n\t *         type=\"string\",\n\t *         description=\"密碼\",\n\t *         required=true,\n\t *     ),\n\t *     @SWG\\Response(response=\"default\", description=\"操作成功\")\n\t * )\n\t *\n\t */\n\tpublic   function   login()\n\t{\n\t\techo '{\"msg\":\"hello world\"}';\n\t}\n\t```\n\n9. 下指令生成API 文件檔(json格式)\n路徑和檔名可以自行調整\n\n\t> php [swagger程式位置] [Controller資料夾(需要掃描的資料夾)] -o [api文件生成位置]\n\n\t```shell\n\tphp /xampp/htdocs/YourProject/vendor/zircote/swagger-php/bin/swagger /xampp/htdocs/YourProject/application/controllers -o \\xampp\\htdocs\\YourProject\\api_doc.json\n\t```\n\t\n10. 修改`YourProject/swagger/index.html`\n    改成你的api文件位置\n    http://127.0.0.1/YourProject/api_doc.json\n    ![edit](edit.png)\n\n11. 瀏覽 http://127.0.0.1/Swagger_CodeIgniter/swagger/\n    **沒更新的話，用無痕瀏覽**\n    ![show](show.png)\n\n","slug":"CodeIgniter安裝Swagger","published":1,"updated":"2021-08-27T18:27:43.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98aq00023nwbbe5j40dh","content":"<ul>\n<li>本文曾發佈在 <a href=\"https://hackmd.io/@yrw/S1TdomtNS\">https://hackmd.io/@yrw/S1TdomtNS</a></li>\n</ul>\n<blockquote>\n<p>環境: Windows、XAMPP</p>\n</blockquote>\n<ol>\n<li><p>下載CodeIgniter</p>\n<span id=\"more\"></span></li>\n<li><p>建資料夾<code>YourProject/swagger/</code></p>\n</li>\n<li><p>下載<a href=\"https://github.com/swagger-api/swagger-ui\">Swagger UI</a>，解壓縮，將<code>dist/</code>資料夾裡的檔案全搬到<code>YourProject/swagger/</code><br> <img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/dir.png\" alt=\"dir\"></p>\n</li>\n<li><p>安裝</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require zircote/swagger-php:2.*</span><br></pre></td></tr></table></figure></li>\n<li><p>有需要的話，安裝</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require darkaonline/l5-swagger</span><br></pre></td></tr></table></figure></li>\n<li><p>建立Controller(Member)</p>\n</li>\n<li><p>加上一些註解 swg annotation<br>一份專案裡至少需要一個<code>@SWG\\Info</code>的註解</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这里需要一个主`Swagger`定义：</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SWG</span>\\Swagger(</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Info(</span></span><br><span class=\"line\"><span class=\"comment\"> *         title=&quot;我的`Swagger`API文檔&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         version=&quot;1.0.0&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> *     )</span></span><br><span class=\"line\"><span class=\"comment\"> * )</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></li>\n<li><p>加上一些方法和註解</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SWG</span>\\Post(</span></span><br><span class=\"line\"><span class=\"comment\"> *     path=&quot;/YourProject/index.php/Member/login&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     tags=&#123;&quot;會員功能&quot;&#125;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     summary=&quot;登入&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Parameter(</span></span><br><span class=\"line\"><span class=\"comment\"> *         in=&quot;query&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         name=&quot;account&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         type=&quot;string&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         description=&quot;帳號&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         required=true,</span></span><br><span class=\"line\"><span class=\"comment\"> *     ),</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Parameter(</span></span><br><span class=\"line\"><span class=\"comment\"> *         in=&quot;query&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         name=&quot;password&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         type=&quot;string&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         description=&quot;密碼&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         required=true,</span></span><br><span class=\"line\"><span class=\"comment\"> *     ),</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Response(response=&quot;default&quot;, description=&quot;操作成功&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"> * )</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>   <span class=\"function\"><span class=\"keyword\">function</span>   <span class=\"title\">login</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&#123;&quot;msg&quot;:&quot;hello world&quot;&#125;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>下指令生成API 文件檔(json格式)<br>路徑和檔名可以自行調整</p>\n<blockquote>\n<p>php [swagger程式位置] [Controller資料夾(需要掃描的資料夾)] -o [api文件生成位置]</p>\n</blockquote>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php /xampp/htdocs/YourProject/vendor/zircote/swagger-php/bin/swagger /xampp/htdocs/YourProject/application/controllers -o \\xampp\\htdocs\\YourProject\\api_doc.json</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改<code>YourProject/swagger/index.html</code><br>改成你的api文件位置<br><a href=\"http://127.0.0.1/YourProject/api_doc.json\">http://127.0.0.1/YourProject/api_doc.json</a><br><img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/edit.png\" alt=\"edit\"></p>\n</li>\n<li><p>瀏覽 <a href=\"http://127.0.0.1/Swagger_CodeIgniter/swagger/\">http://127.0.0.1/Swagger_CodeIgniter/swagger/</a><br><strong>沒更新的話，用無痕瀏覽</strong><br><img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/show.png\" alt=\"show\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<ul>\n<li>本文曾發佈在 <a href=\"https://hackmd.io/@yrw/S1TdomtNS\">https://hackmd.io/@yrw/S1TdomtNS</a></li>\n</ul>\n<blockquote>\n<p>環境: Windows、XAMPP</p>\n</blockquote>\n<ol>\n<li><p>下載CodeIgniter</p>","more":"</li>\n<li><p>建資料夾<code>YourProject/swagger/</code></p>\n</li>\n<li><p>下載<a href=\"https://github.com/swagger-api/swagger-ui\">Swagger UI</a>，解壓縮，將<code>dist/</code>資料夾裡的檔案全搬到<code>YourProject/swagger/</code><br> <img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/dir.png\" alt=\"dir\"></p>\n</li>\n<li><p>安裝</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require zircote/swagger-php:2.*</span><br></pre></td></tr></table></figure></li>\n<li><p>有需要的話，安裝</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require darkaonline/l5-swagger</span><br></pre></td></tr></table></figure></li>\n<li><p>建立Controller(Member)</p>\n</li>\n<li><p>加上一些註解 swg annotation<br>一份專案裡至少需要一個<code>@SWG\\Info</code>的註解</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这里需要一个主`Swagger`定义：</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SWG</span>\\Swagger(</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Info(</span></span><br><span class=\"line\"><span class=\"comment\"> *         title=&quot;我的`Swagger`API文檔&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         version=&quot;1.0.0&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> *     )</span></span><br><span class=\"line\"><span class=\"comment\"> * )</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></li>\n<li><p>加上一些方法和註解</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SWG</span>\\Post(</span></span><br><span class=\"line\"><span class=\"comment\"> *     path=&quot;/YourProject/index.php/Member/login&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     tags=&#123;&quot;會員功能&quot;&#125;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     summary=&quot;登入&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Parameter(</span></span><br><span class=\"line\"><span class=\"comment\"> *         in=&quot;query&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         name=&quot;account&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         type=&quot;string&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         description=&quot;帳號&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         required=true,</span></span><br><span class=\"line\"><span class=\"comment\"> *     ),</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Parameter(</span></span><br><span class=\"line\"><span class=\"comment\"> *         in=&quot;query&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         name=&quot;password&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         type=&quot;string&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         description=&quot;密碼&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"> *         required=true,</span></span><br><span class=\"line\"><span class=\"comment\"> *     ),</span></span><br><span class=\"line\"><span class=\"comment\"> *     <span class=\"doctag\">@SWG</span>\\Response(response=&quot;default&quot;, description=&quot;操作成功&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"> * )</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>   <span class=\"function\"><span class=\"keyword\">function</span>   <span class=\"title\">login</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&#123;&quot;msg&quot;:&quot;hello world&quot;&#125;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>下指令生成API 文件檔(json格式)<br>路徑和檔名可以自行調整</p>\n<blockquote>\n<p>php [swagger程式位置] [Controller資料夾(需要掃描的資料夾)] -o [api文件生成位置]</p>\n</blockquote>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php /xampp/htdocs/YourProject/vendor/zircote/swagger-php/bin/swagger /xampp/htdocs/YourProject/application/controllers -o \\xampp\\htdocs\\YourProject\\api_doc.json</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改<code>YourProject/swagger/index.html</code><br>改成你的api文件位置<br><a href=\"http://127.0.0.1/YourProject/api_doc.json\">http://127.0.0.1/YourProject/api_doc.json</a><br><img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/edit.png\" alt=\"edit\"></p>\n</li>\n<li><p>瀏覽 <a href=\"http://127.0.0.1/Swagger_CodeIgniter/swagger/\">http://127.0.0.1/Swagger_CodeIgniter/swagger/</a><br><strong>沒更新的話，用無痕瀏覽</strong><br><img src=\"/2019/08/20/CodeIgniter%E5%AE%89%E8%A3%9DSwagger/show.png\" alt=\"show\"></p>\n</li>\n</ol>"},{"title":"ADB - 在你的手機上下指令","date":"2017-10-25T17:20:06.000Z","_content":"\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=432](https://blog.cmrdb.cs.pu.edu.tw/?p=432)\n\n相信大家或多或少都知道Android是一個基於Linux開發的作業系統，既然是Linux，你有沒有想過要在你的手機上下指令呢?\n\n# ADB\n\nADB(Android Debug Bridge)是一個可以讓你和裝置(虛擬機或實體手機)溝通的工具，透過這個工具，你可以以指令的方式直接在電腦與手機間傳輸檔案、安裝/移除應用程式、讀取手機的SQLite資料庫…等。\n<!-- more -->\n\n# 開啟偵錯模式 (使用虛擬機可以跳過)\n首先，要開啟**開發人員選項**，手機的開發人員選項預設是關閉的，開啟的方式也因廠牌和型號有些微差異，以 SAMSUNG A5 為例:\n 1. 設定 > 關於裝置 > 版本號碼\n    連續按七下**版本號碼**，就會發現下方跳出提示訊息，說明你已經成功成為開發人員了!!\n    ![image1](image1.png)\n    回到上一頁後，就會發現多了一個選項!!\n    ![image2](image2.png)\n 2. 設定 > 開發人員選項 > USB偵錯 開啟\n     偵錯模式主要是用來研發，它可以用來複製電腦和手機間的數據\n     ![image3](image3.png)\n\n# 開啟ADB工具\n如果已經安裝好Android Studio，ADB的預設路徑在\n``` shell\nC:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools\n```\n特別注意，`AppData`資料夾預設是隱藏的，所以在一般情況下看不到的喔!\n1. 將手機接上電腦 / 開啟虛擬機\n1. 開啟cmd\n2. 移到上面的目錄\n    ```shell\n    cd C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools\n    ```\n3. 查詢可用的指令\n    ```shell\n    adb\n    ```\n4. 查詢已連接的裝置\n    ```shell\n    adb devices\n    ```\n    ![image4](image4.png)\n5. 進入手機\n    ```shell\n    adb shell\n    ```\n    ![image5](image5.png)\n\n接下來你可以在裡面到處逛逛，你會發現當你想對一些較重要的檔案存取時，會顯示Permission denied，這表示你權限不足。一般沒有root過的手機是不會有最高權限的。如果想嘗試，可以試試開一些版本較低的虛擬機，有些預設有root權限。\n\n# ADB指令參考\n\n- 列出目錄/檔案\n    ```shell\n    ls\n    ```\n- 移動\n    ```shell\n    cd [路徑]\n    ```\n- 查看目前所在路徑\n    ```shell\n    pwd\n    ```\n- 查看檔案內容\n    ```shell\n    cat [檔案名稱]\n    ```\n- 新增資料夾\n    ```shell\n    mkdir [資料夾名稱]\n    ```\n- 查看裝置cpu和內存占用情況\n    ```shell\n    top\n    ```\n    \n# 補充\n\n這邊列出幾個大家可能比較有興趣的路徑\n\n- 手機內建的App\n```\n/system/app/\n```\n- 可用的指令\n```\n/system/bin/\n```\n- SDCard\n```\n/sdcard/\n```\n- 使用者的檔案、照片\n```\n/storage/sdcard0/\n```\n","source":"_posts/ADB-在你的手機上下指令.md","raw":"---\ntitle: ADB - 在你的手機上下指令\ndate: 2017-10-26 01:20:06\ntags:\n- Android\n- ADB\n- 資安\n- 行雲部落格\n---\n\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=432](https://blog.cmrdb.cs.pu.edu.tw/?p=432)\n\n相信大家或多或少都知道Android是一個基於Linux開發的作業系統，既然是Linux，你有沒有想過要在你的手機上下指令呢?\n\n# ADB\n\nADB(Android Debug Bridge)是一個可以讓你和裝置(虛擬機或實體手機)溝通的工具，透過這個工具，你可以以指令的方式直接在電腦與手機間傳輸檔案、安裝/移除應用程式、讀取手機的SQLite資料庫…等。\n<!-- more -->\n\n# 開啟偵錯模式 (使用虛擬機可以跳過)\n首先，要開啟**開發人員選項**，手機的開發人員選項預設是關閉的，開啟的方式也因廠牌和型號有些微差異，以 SAMSUNG A5 為例:\n 1. 設定 > 關於裝置 > 版本號碼\n    連續按七下**版本號碼**，就會發現下方跳出提示訊息，說明你已經成功成為開發人員了!!\n    ![image1](image1.png)\n    回到上一頁後，就會發現多了一個選項!!\n    ![image2](image2.png)\n 2. 設定 > 開發人員選項 > USB偵錯 開啟\n     偵錯模式主要是用來研發，它可以用來複製電腦和手機間的數據\n     ![image3](image3.png)\n\n# 開啟ADB工具\n如果已經安裝好Android Studio，ADB的預設路徑在\n``` shell\nC:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools\n```\n特別注意，`AppData`資料夾預設是隱藏的，所以在一般情況下看不到的喔!\n1. 將手機接上電腦 / 開啟虛擬機\n1. 開啟cmd\n2. 移到上面的目錄\n    ```shell\n    cd C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools\n    ```\n3. 查詢可用的指令\n    ```shell\n    adb\n    ```\n4. 查詢已連接的裝置\n    ```shell\n    adb devices\n    ```\n    ![image4](image4.png)\n5. 進入手機\n    ```shell\n    adb shell\n    ```\n    ![image5](image5.png)\n\n接下來你可以在裡面到處逛逛，你會發現當你想對一些較重要的檔案存取時，會顯示Permission denied，這表示你權限不足。一般沒有root過的手機是不會有最高權限的。如果想嘗試，可以試試開一些版本較低的虛擬機，有些預設有root權限。\n\n# ADB指令參考\n\n- 列出目錄/檔案\n    ```shell\n    ls\n    ```\n- 移動\n    ```shell\n    cd [路徑]\n    ```\n- 查看目前所在路徑\n    ```shell\n    pwd\n    ```\n- 查看檔案內容\n    ```shell\n    cat [檔案名稱]\n    ```\n- 新增資料夾\n    ```shell\n    mkdir [資料夾名稱]\n    ```\n- 查看裝置cpu和內存占用情況\n    ```shell\n    top\n    ```\n    \n# 補充\n\n這邊列出幾個大家可能比較有興趣的路徑\n\n- 手機內建的App\n```\n/system/app/\n```\n- 可用的指令\n```\n/system/bin/\n```\n- SDCard\n```\n/sdcard/\n```\n- 使用者的檔案、照片\n```\n/storage/sdcard0/\n```\n","slug":"ADB-在你的手機上下指令","published":1,"updated":"2021-08-28T08:25:24.288Z","_id":"cksvi98au00043nwb3326c2ke","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=432\">https://blog.cmrdb.cs.pu.edu.tw/?p=432</a></li>\n</ul>\n<p>相信大家或多或少都知道Android是一個基於Linux開發的作業系統，既然是Linux，你有沒有想過要在你的手機上下指令呢?</p>\n<h1 id=\"ADB\"><a href=\"#ADB\" class=\"headerlink\" title=\"ADB\"></a>ADB</h1><p>ADB(Android Debug Bridge)是一個可以讓你和裝置(虛擬機或實體手機)溝通的工具，透過這個工具，你可以以指令的方式直接在電腦與手機間傳輸檔案、安裝/移除應用程式、讀取手機的SQLite資料庫…等。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"開啟偵錯模式-使用虛擬機可以跳過\"><a href=\"#開啟偵錯模式-使用虛擬機可以跳過\" class=\"headerlink\" title=\"開啟偵錯模式 (使用虛擬機可以跳過)\"></a>開啟偵錯模式 (使用虛擬機可以跳過)</h1><p>首先，要開啟<strong>開發人員選項</strong>，手機的開發人員選項預設是關閉的，開啟的方式也因廠牌和型號有些微差異，以 SAMSUNG A5 為例:</p>\n<ol>\n<li>設定 &gt; 關於裝置 &gt; 版本號碼<br>連續按七下<strong>版本號碼</strong>，就會發現下方跳出提示訊息，說明你已經成功成為開發人員了!!<br><img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image1.png\" alt=\"image1\"><br>回到上一頁後，就會發現多了一個選項!!<br><img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image2.png\" alt=\"image2\"></li>\n<li>設定 &gt; 開發人員選項 &gt; USB偵錯 開啟<br> 偵錯模式主要是用來研發，它可以用來複製電腦和手機間的數據<br> <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image3.png\" alt=\"image3\"></li>\n</ol>\n<h1 id=\"開啟ADB工具\"><a href=\"#開啟ADB工具\" class=\"headerlink\" title=\"開啟ADB工具\"></a>開啟ADB工具</h1><p>如果已經安裝好Android Studio，ADB的預設路徑在</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools</span><br></pre></td></tr></table></figure>\n<p>特別注意，<code>AppData</code>資料夾預設是隱藏的，所以在一般情況下看不到的喔!</p>\n<ol>\n<li>將手機接上電腦 / 開啟虛擬機</li>\n<li>開啟cmd</li>\n<li>移到上面的目錄 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools</span><br></pre></td></tr></table></figure></li>\n<li>查詢可用的指令 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb</span><br></pre></td></tr></table></figure></li>\n<li>查詢已連接的裝置 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb devices</span><br></pre></td></tr></table></figure>\n <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image4.png\" alt=\"image4\"></li>\n<li>進入手機 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell</span><br></pre></td></tr></table></figure>\n <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image5.png\" alt=\"image5\"></li>\n</ol>\n<p>接下來你可以在裡面到處逛逛，你會發現當你想對一些較重要的檔案存取時，會顯示Permission denied，這表示你權限不足。一般沒有root過的手機是不會有最高權限的。如果想嘗試，可以試試開一些版本較低的虛擬機，有些預設有root權限。</p>\n<h1 id=\"ADB指令參考\"><a href=\"#ADB指令參考\" class=\"headerlink\" title=\"ADB指令參考\"></a>ADB指令參考</h1><ul>\n<li>列出目錄/檔案  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls</span><br></pre></td></tr></table></figure></li>\n<li>移動  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [路徑]</span><br></pre></td></tr></table></figure></li>\n<li>查看目前所在路徑  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwd</span><br></pre></td></tr></table></figure></li>\n<li>查看檔案內容  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat [檔案名稱]</span><br></pre></td></tr></table></figure></li>\n<li>新增資料夾  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir [資料夾名稱]</span><br></pre></td></tr></table></figure></li>\n<li>查看裝置cpu和內存占用情況  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"補充\"><a href=\"#補充\" class=\"headerlink\" title=\"補充\"></a>補充</h1><p>這邊列出幾個大家可能比較有興趣的路徑</p>\n<ul>\n<li>手機內建的App<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;system&#x2F;app&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>可用的指令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;system&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>SDCard<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;sdcard&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>使用者的檔案、照片<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;storage&#x2F;sdcard0&#x2F;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=432\">https://blog.cmrdb.cs.pu.edu.tw/?p=432</a></li>\n</ul>\n<p>相信大家或多或少都知道Android是一個基於Linux開發的作業系統，既然是Linux，你有沒有想過要在你的手機上下指令呢?</p>\n<h1 id=\"ADB\"><a href=\"#ADB\" class=\"headerlink\" title=\"ADB\"></a>ADB</h1><p>ADB(Android Debug Bridge)是一個可以讓你和裝置(虛擬機或實體手機)溝通的工具，透過這個工具，你可以以指令的方式直接在電腦與手機間傳輸檔案、安裝/移除應用程式、讀取手機的SQLite資料庫…等。</p>","more":"<h1 id=\"開啟偵錯模式-使用虛擬機可以跳過\"><a href=\"#開啟偵錯模式-使用虛擬機可以跳過\" class=\"headerlink\" title=\"開啟偵錯模式 (使用虛擬機可以跳過)\"></a>開啟偵錯模式 (使用虛擬機可以跳過)</h1><p>首先，要開啟<strong>開發人員選項</strong>，手機的開發人員選項預設是關閉的，開啟的方式也因廠牌和型號有些微差異，以 SAMSUNG A5 為例:</p>\n<ol>\n<li>設定 &gt; 關於裝置 &gt; 版本號碼<br>連續按七下<strong>版本號碼</strong>，就會發現下方跳出提示訊息，說明你已經成功成為開發人員了!!<br><img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image1.png\" alt=\"image1\"><br>回到上一頁後，就會發現多了一個選項!!<br><img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image2.png\" alt=\"image2\"></li>\n<li>設定 &gt; 開發人員選項 &gt; USB偵錯 開啟<br> 偵錯模式主要是用來研發，它可以用來複製電腦和手機間的數據<br> <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image3.png\" alt=\"image3\"></li>\n</ol>\n<h1 id=\"開啟ADB工具\"><a href=\"#開啟ADB工具\" class=\"headerlink\" title=\"開啟ADB工具\"></a>開啟ADB工具</h1><p>如果已經安裝好Android Studio，ADB的預設路徑在</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools</span><br></pre></td></tr></table></figure>\n<p>特別注意，<code>AppData</code>資料夾預設是隱藏的，所以在一般情況下看不到的喔!</p>\n<ol>\n<li>將手機接上電腦 / 開啟虛擬機</li>\n<li>開啟cmd</li>\n<li>移到上面的目錄 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd C:\\Users\\[使用者名稱]\\AppData\\Local\\Android\\sdk\\platform-tools</span><br></pre></td></tr></table></figure></li>\n<li>查詢可用的指令 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb</span><br></pre></td></tr></table></figure></li>\n<li>查詢已連接的裝置 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb devices</span><br></pre></td></tr></table></figure>\n <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image4.png\" alt=\"image4\"></li>\n<li>進入手機 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell</span><br></pre></td></tr></table></figure>\n <img src=\"/2017/10/26/ADB-%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%B8%8B%E6%8C%87%E4%BB%A4/image5.png\" alt=\"image5\"></li>\n</ol>\n<p>接下來你可以在裡面到處逛逛，你會發現當你想對一些較重要的檔案存取時，會顯示Permission denied，這表示你權限不足。一般沒有root過的手機是不會有最高權限的。如果想嘗試，可以試試開一些版本較低的虛擬機，有些預設有root權限。</p>\n<h1 id=\"ADB指令參考\"><a href=\"#ADB指令參考\" class=\"headerlink\" title=\"ADB指令參考\"></a>ADB指令參考</h1><ul>\n<li>列出目錄/檔案  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls</span><br></pre></td></tr></table></figure></li>\n<li>移動  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [路徑]</span><br></pre></td></tr></table></figure></li>\n<li>查看目前所在路徑  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwd</span><br></pre></td></tr></table></figure></li>\n<li>查看檔案內容  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat [檔案名稱]</span><br></pre></td></tr></table></figure></li>\n<li>新增資料夾  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir [資料夾名稱]</span><br></pre></td></tr></table></figure></li>\n<li>查看裝置cpu和內存占用情況  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"補充\"><a href=\"#補充\" class=\"headerlink\" title=\"補充\"></a>補充</h1><p>這邊列出幾個大家可能比較有興趣的路徑</p>\n<ul>\n<li>手機內建的App<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;system&#x2F;app&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>可用的指令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;system&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>SDCard<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;sdcard&#x2F;</span><br></pre></td></tr></table></figure></li>\n<li>使用者的檔案、照片<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;storage&#x2F;sdcard0&#x2F;</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"Windows 停用開機即啟動 MongoDB","date":"2021-04-22T06:21:32.000Z","_content":"\n最近發現之前裝的 MongoDB，會在電腦開機時執行，還找不到地方關掉開機啟動的設定，只能手動關閉。網路上大家問的都是如何在 Windows 上開機執行 MongoDB，沒有人跟我一樣，有如何關閉的問題嗎？Google 了好久，才找到這篇 [How to stop mongodb server on Windows startup?](https://stackoverflow.com/questions/45011195/how-to-stop-mongodb-server-on-windows-startup)\n<!-- more -->\n## 手動開啟/關閉\n\n以管理員身份執行 cmd\n```shell\nnet start MongoDB\nnet stop MongoDB\n```\n\n## 停用開機執行\n\n### 打開 services.msc\n\n按下 `win+R` 顯示執行視窗，輸入 `services.msc`\n\n![執行](services_msc.png)\n\n![服務](服務.png)\n\n### 修改啟動類型\n\n將啟動類型更改為 **手動**\n\n![mongodb_內容](mongodb_內容.png)\n\n### 完成\n以後電腦重啟，就不會再看到 MongoDB 被默默啟動囉！\n","source":"_posts/Windows-停用開機即啟動-MongoDB.md","raw":"---\ntitle: Windows 停用開機即啟動 MongoDB\ndate: 2021-04-22 14:21:32\ntags:\n- MongoDB\n---\n\n最近發現之前裝的 MongoDB，會在電腦開機時執行，還找不到地方關掉開機啟動的設定，只能手動關閉。網路上大家問的都是如何在 Windows 上開機執行 MongoDB，沒有人跟我一樣，有如何關閉的問題嗎？Google 了好久，才找到這篇 [How to stop mongodb server on Windows startup?](https://stackoverflow.com/questions/45011195/how-to-stop-mongodb-server-on-windows-startup)\n<!-- more -->\n## 手動開啟/關閉\n\n以管理員身份執行 cmd\n```shell\nnet start MongoDB\nnet stop MongoDB\n```\n\n## 停用開機執行\n\n### 打開 services.msc\n\n按下 `win+R` 顯示執行視窗，輸入 `services.msc`\n\n![執行](services_msc.png)\n\n![服務](服務.png)\n\n### 修改啟動類型\n\n將啟動類型更改為 **手動**\n\n![mongodb_內容](mongodb_內容.png)\n\n### 完成\n以後電腦重啟，就不會再看到 MongoDB 被默默啟動囉！\n","slug":"Windows-停用開機即啟動-MongoDB","published":1,"updated":"2021-08-07T07:00:17.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98aw00053nwb8tut953n","content":"<p>最近發現之前裝的 MongoDB，會在電腦開機時執行，還找不到地方關掉開機啟動的設定，只能手動關閉。網路上大家問的都是如何在 Windows 上開機執行 MongoDB，沒有人跟我一樣，有如何關閉的問題嗎？Google 了好久，才找到這篇 <a href=\"https://stackoverflow.com/questions/45011195/how-to-stop-mongodb-server-on-windows-startup\">How to stop mongodb server on Windows startup?</a></p>\n<span id=\"more\"></span>\n<h2 id=\"手動開啟-關閉\"><a href=\"#手動開啟-關閉\" class=\"headerlink\" title=\"手動開啟/關閉\"></a>手動開啟/關閉</h2><p>以管理員身份執行 cmd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net start MongoDB</span><br><span class=\"line\">net stop MongoDB</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"停用開機執行\"><a href=\"#停用開機執行\" class=\"headerlink\" title=\"停用開機執行\"></a>停用開機執行</h2><h3 id=\"打開-services-msc\"><a href=\"#打開-services-msc\" class=\"headerlink\" title=\"打開 services.msc\"></a>打開 services.msc</h3><p>按下 <code>win+R</code> 顯示執行視窗，輸入 <code>services.msc</code></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/services_msc.png\" alt=\"執行\"></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/%E6%9C%8D%E5%8B%99.png\" alt=\"服務\"></p>\n<h3 id=\"修改啟動類型\"><a href=\"#修改啟動類型\" class=\"headerlink\" title=\"修改啟動類型\"></a>修改啟動類型</h3><p>將啟動類型更改為 <strong>手動</strong></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/mongodb_%E5%85%A7%E5%AE%B9.png\" alt=\"mongodb_內容\"></p>\n<h3 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h3><p>以後電腦重啟，就不會再看到 MongoDB 被默默啟動囉！</p>\n","site":{"data":{}},"excerpt":"<p>最近發現之前裝的 MongoDB，會在電腦開機時執行，還找不到地方關掉開機啟動的設定，只能手動關閉。網路上大家問的都是如何在 Windows 上開機執行 MongoDB，沒有人跟我一樣，有如何關閉的問題嗎？Google 了好久，才找到這篇 <a href=\"https://stackoverflow.com/questions/45011195/how-to-stop-mongodb-server-on-windows-startup\">How to stop mongodb server on Windows startup?</a></p>","more":"<h2 id=\"手動開啟-關閉\"><a href=\"#手動開啟-關閉\" class=\"headerlink\" title=\"手動開啟/關閉\"></a>手動開啟/關閉</h2><p>以管理員身份執行 cmd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net start MongoDB</span><br><span class=\"line\">net stop MongoDB</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"停用開機執行\"><a href=\"#停用開機執行\" class=\"headerlink\" title=\"停用開機執行\"></a>停用開機執行</h2><h3 id=\"打開-services-msc\"><a href=\"#打開-services-msc\" class=\"headerlink\" title=\"打開 services.msc\"></a>打開 services.msc</h3><p>按下 <code>win+R</code> 顯示執行視窗，輸入 <code>services.msc</code></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/services_msc.png\" alt=\"執行\"></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/%E6%9C%8D%E5%8B%99.png\" alt=\"服務\"></p>\n<h3 id=\"修改啟動類型\"><a href=\"#修改啟動類型\" class=\"headerlink\" title=\"修改啟動類型\"></a>修改啟動類型</h3><p>將啟動類型更改為 <strong>手動</strong></p>\n<p><img src=\"/2021/04/22/Windows-%E5%81%9C%E7%94%A8%E9%96%8B%E6%A9%9F%E5%8D%B3%E5%95%9F%E5%8B%95-MongoDB/mongodb_%E5%85%A7%E5%AE%B9.png\" alt=\"mongodb_內容\"></p>\n<h3 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h3><p>以後電腦重啟，就不會再看到 MongoDB 被默默啟動囉！</p>"},{"title":"Word 新增快捷建","date":"2021-05-11T03:04:45.000Z","_content":"\n按下 `ctl + alt + 加號`\n\n滑鼠就會變成一個小花的圖案，然後對著你想添加快捷建的 icon 按下後，就能進入設定頁面，輸入想要的快捷建組合。\n<!-- more -->\n![自訂鍵盤](自訂鍵盤.png)\n\n換新電腦就要設定一次，紀錄一下新增自訂快捷建的方法。\n因為很常遇到再表格中要使用項目符號排版時，Tab鍵會跳到下一格而不是將項目符號縮排，所以我習慣把 `減少縮排` 設定成 `Alt + Ctrl + Num 4`、`增加縮排` 設定成 `Alt + Ctrl + Num 6`。","source":"_posts/Word-新增快捷建.md","raw":"---\ntitle: Word 新增快捷建\ndate: 2021-05-11 11:04:45\ntags:\n- Word\n- hotkey\n---\n\n按下 `ctl + alt + 加號`\n\n滑鼠就會變成一個小花的圖案，然後對著你想添加快捷建的 icon 按下後，就能進入設定頁面，輸入想要的快捷建組合。\n<!-- more -->\n![自訂鍵盤](自訂鍵盤.png)\n\n換新電腦就要設定一次，紀錄一下新增自訂快捷建的方法。\n因為很常遇到再表格中要使用項目符號排版時，Tab鍵會跳到下一格而不是將項目符號縮排，所以我習慣把 `減少縮排` 設定成 `Alt + Ctrl + Num 4`、`增加縮排` 設定成 `Alt + Ctrl + Num 6`。","slug":"Word-新增快捷建","published":1,"updated":"2021-08-07T07:00:46.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98ax00063nwbhhdb9frq","content":"<p>按下 <code>ctl + alt + 加號</code></p>\n<p>滑鼠就會變成一個小花的圖案，然後對著你想添加快捷建的 icon 按下後，就能進入設定頁面，輸入想要的快捷建組合。</p>\n<span id=\"more\"></span>\n<p><img src=\"/2021/05/11/Word-%E6%96%B0%E5%A2%9E%E5%BF%AB%E6%8D%B7%E5%BB%BA/%E8%87%AA%E8%A8%82%E9%8D%B5%E7%9B%A4.png\" alt=\"自訂鍵盤\"></p>\n<p>換新電腦就要設定一次，紀錄一下新增自訂快捷建的方法。<br>因為很常遇到再表格中要使用項目符號排版時，Tab鍵會跳到下一格而不是將項目符號縮排，所以我習慣把 <code>減少縮排</code> 設定成 <code>Alt + Ctrl + Num 4</code>、<code>增加縮排</code> 設定成 <code>Alt + Ctrl + Num 6</code>。</p>\n","site":{"data":{}},"excerpt":"<p>按下 <code>ctl + alt + 加號</code></p>\n<p>滑鼠就會變成一個小花的圖案，然後對著你想添加快捷建的 icon 按下後，就能進入設定頁面，輸入想要的快捷建組合。</p>","more":"<p><img src=\"/2021/05/11/Word-%E6%96%B0%E5%A2%9E%E5%BF%AB%E6%8D%B7%E5%BB%BA/%E8%87%AA%E8%A8%82%E9%8D%B5%E7%9B%A4.png\" alt=\"自訂鍵盤\"></p>\n<p>換新電腦就要設定一次，紀錄一下新增自訂快捷建的方法。<br>因為很常遇到再表格中要使用項目符號排版時，Tab鍵會跳到下一格而不是將項目符號縮排，所以我習慣把 <code>減少縮排</code> 設定成 <code>Alt + Ctrl + Num 4</code>、<code>增加縮排</code> 設定成 <code>Alt + Ctrl + Num 6</code>。</p>"},{"title":"[Zenbo開發系列] 01-後蓋打開方式、偵錯USB孔位置","date":"2021-08-04T08:58:04.000Z","_content":"\n就在今天終於把論文送印了，我的論文是有關聊天機器人與 ASUS Zenbo 的主題，其實還有很多開發過程遇到的各種狀況時沒辦法寫進論文。開發過程中常常參考網路資料，但發現 Zenbo 相關的資料實在太少了。實驗室的電腦預計在一個月內會洗掉，在這之前我想盡量把之前的筆記整理成部落格，希望哪天也能幫助到其他人。\n\n這系列文章會以我遇到的卡關問題為主，不會太詳細介紹 Android 的開發方式，那就開始吧。\n<!--more-->\n\n# 打開後腦杓\n這篇是最重要的部份，真的！我完全沒想過他的連接孔藏在那裡，沒有插傳輸線是要怎麼 debug...\n\n一般來說，我們開發 Android 程式用實體機測試，就是把傳輸線接上電腦，但是我把 Zenbo 翻了一圈看起來能插線的就只有頭上那個 USB 孔了，還專程去買了一條 Type-A 對 Type-A 的線。後來到 Zenbo 開發群組發問才知道原來後腦杓可以開阿，而且連接孔就藏在裡面。\n\nZenbo 的後腦杓是用磁鐵吸住的，只要從後方脖子兩邊往後拉，就會開了。連接孔是跟舊型 Android 一樣的 microUSB。\n\n{% youtube bNx20Eu_kfw %}\n","source":"_posts/Zenbo開發系列-01-後蓋打開方式、偵錯USB孔位置.md","raw":"---\ntitle: '[Zenbo開發系列] 01-後蓋打開方式、偵錯USB孔位置'\ndate: 2021-08-04 16:58:04\ntags:\n- Zenbo\n- 偵錯\n---\n\n就在今天終於把論文送印了，我的論文是有關聊天機器人與 ASUS Zenbo 的主題，其實還有很多開發過程遇到的各種狀況時沒辦法寫進論文。開發過程中常常參考網路資料，但發現 Zenbo 相關的資料實在太少了。實驗室的電腦預計在一個月內會洗掉，在這之前我想盡量把之前的筆記整理成部落格，希望哪天也能幫助到其他人。\n\n這系列文章會以我遇到的卡關問題為主，不會太詳細介紹 Android 的開發方式，那就開始吧。\n<!--more-->\n\n# 打開後腦杓\n這篇是最重要的部份，真的！我完全沒想過他的連接孔藏在那裡，沒有插傳輸線是要怎麼 debug...\n\n一般來說，我們開發 Android 程式用實體機測試，就是把傳輸線接上電腦，但是我把 Zenbo 翻了一圈看起來能插線的就只有頭上那個 USB 孔了，還專程去買了一條 Type-A 對 Type-A 的線。後來到 Zenbo 開發群組發問才知道原來後腦杓可以開阿，而且連接孔就藏在裡面。\n\nZenbo 的後腦杓是用磁鐵吸住的，只要從後方脖子兩邊往後拉，就會開了。連接孔是跟舊型 Android 一樣的 microUSB。\n\n{% youtube bNx20Eu_kfw %}\n","slug":"Zenbo開發系列-01-後蓋打開方式、偵錯USB孔位置","published":1,"updated":"2021-08-07T07:02:18.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98ay00083nwb31s4358l","content":"<p>就在今天終於把論文送印了，我的論文是有關聊天機器人與 ASUS Zenbo 的主題，其實還有很多開發過程遇到的各種狀況時沒辦法寫進論文。開發過程中常常參考網路資料，但發現 Zenbo 相關的資料實在太少了。實驗室的電腦預計在一個月內會洗掉，在這之前我想盡量把之前的筆記整理成部落格，希望哪天也能幫助到其他人。</p>\n<p>這系列文章會以我遇到的卡關問題為主，不會太詳細介紹 Android 的開發方式，那就開始吧。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"打開後腦杓\"><a href=\"#打開後腦杓\" class=\"headerlink\" title=\"打開後腦杓\"></a>打開後腦杓</h1><p>這篇是最重要的部份，真的！我完全沒想過他的連接孔藏在那裡，沒有插傳輸線是要怎麼 debug…</p>\n<p>一般來說，我們開發 Android 程式用實體機測試，就是把傳輸線接上電腦，但是我把 Zenbo 翻了一圈看起來能插線的就只有頭上那個 USB 孔了，還專程去買了一條 Type-A 對 Type-A 的線。後來到 Zenbo 開發群組發問才知道原來後腦杓可以開阿，而且連接孔就藏在裡面。</p>\n<p>Zenbo 的後腦杓是用磁鐵吸住的，只要從後方脖子兩邊往後拉，就會開了。連接孔是跟舊型 Android 一樣的 microUSB。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/bNx20Eu_kfw\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n","site":{"data":{}},"excerpt":"<p>就在今天終於把論文送印了，我的論文是有關聊天機器人與 ASUS Zenbo 的主題，其實還有很多開發過程遇到的各種狀況時沒辦法寫進論文。開發過程中常常參考網路資料，但發現 Zenbo 相關的資料實在太少了。實驗室的電腦預計在一個月內會洗掉，在這之前我想盡量把之前的筆記整理成部落格，希望哪天也能幫助到其他人。</p>\n<p>這系列文章會以我遇到的卡關問題為主，不會太詳細介紹 Android 的開發方式，那就開始吧。</p>","more":"<h1 id=\"打開後腦杓\"><a href=\"#打開後腦杓\" class=\"headerlink\" title=\"打開後腦杓\"></a>打開後腦杓</h1><p>這篇是最重要的部份，真的！我完全沒想過他的連接孔藏在那裡，沒有插傳輸線是要怎麼 debug…</p>\n<p>一般來說，我們開發 Android 程式用實體機測試，就是把傳輸線接上電腦，但是我把 Zenbo 翻了一圈看起來能插線的就只有頭上那個 USB 孔了，還專程去買了一條 Type-A 對 Type-A 的線。後來到 Zenbo 開發群組發問才知道原來後腦杓可以開阿，而且連接孔就藏在裡面。</p>\n<p>Zenbo 的後腦杓是用磁鐵吸住的，只要從後方脖子兩邊往後拉，就會開了。連接孔是跟舊型 Android 一樣的 microUSB。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/bNx20Eu_kfw\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>"},{"title":"[Zenbo開發系列] 02-建置與Zenbo規格相同的模擬器","date":"2021-08-05T09:32:20.000Z","_content":"\n時逢疫情來襲，三級警戒讓我也不敢回學校，但又不可能把 Zenbo 搬回家，還好之前有照 Zenbo 的規格開了一台模擬器，雖然沒辦法所有的畫面都和在 Zenbo 一樣 (ASUS 應該有自己客製一些東西)，但至少在沒有使用 Zenbo SDK 的狀況下，執行 Android 程式和測試有沒有跑版都OK，這樣我就能在本機測試了。\n\n這篇會簡單紀錄一下我開的模擬器規格，Zenbo 的作業系統是 Android，基本上可以把他當作是一台會走路的平板啦。\n<!--more-->\n\n# 模擬器規格\n螢幕解析度: 1028*752 (10.1 吋)\n螢幕方向: 橫向\nAndroid 版本: 6.0 (API 23)\n\n# 開始建置\n\n首先開一個新的模擬器\n![建立新模擬器](建立新模擬器.jpg)\n\n## 建立硬體外型\n建立新裝置外型\n![建立新硬體外型](建立新硬體外型.jpg)\n\n可以照著設定\n![硬體規格](硬體規格.jpg)\n\n或是把下面這個我做好的直接 import\n<script src=\"https://gist.github.com/dreambo4/44f9a782e079964da0a46fa4757e673e.js\"></script>\n\n## 建立模擬器\n\n選擇我們剛建好的硬體外型\n![選擇硬體裝置](選擇硬體裝置.jpg)\n\n作業系統版本，因為要跟 Zenbo 一樣，所以選 6.0\n![選擇作業系統版本](選擇作業系統版本.jpg)\n\n確認一下是否都正確，按下Finish，執行一下，模擬器就建好囉！\n![模擬器完成](模擬器完成.jpg)\n\n最後，你會獲得一台 Android 6 的平板 😅\n![就是平板](就是平板.jpg)","source":"_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器.md","raw":"---\ntitle: '[Zenbo開發系列] 02-建置與Zenbo規格相同的模擬器'\ndate: 2021-08-05 17:32:20\ntags:\n- Zenbo\n- 模擬器\n---\n\n時逢疫情來襲，三級警戒讓我也不敢回學校，但又不可能把 Zenbo 搬回家，還好之前有照 Zenbo 的規格開了一台模擬器，雖然沒辦法所有的畫面都和在 Zenbo 一樣 (ASUS 應該有自己客製一些東西)，但至少在沒有使用 Zenbo SDK 的狀況下，執行 Android 程式和測試有沒有跑版都OK，這樣我就能在本機測試了。\n\n這篇會簡單紀錄一下我開的模擬器規格，Zenbo 的作業系統是 Android，基本上可以把他當作是一台會走路的平板啦。\n<!--more-->\n\n# 模擬器規格\n螢幕解析度: 1028*752 (10.1 吋)\n螢幕方向: 橫向\nAndroid 版本: 6.0 (API 23)\n\n# 開始建置\n\n首先開一個新的模擬器\n![建立新模擬器](建立新模擬器.jpg)\n\n## 建立硬體外型\n建立新裝置外型\n![建立新硬體外型](建立新硬體外型.jpg)\n\n可以照著設定\n![硬體規格](硬體規格.jpg)\n\n或是把下面這個我做好的直接 import\n<script src=\"https://gist.github.com/dreambo4/44f9a782e079964da0a46fa4757e673e.js\"></script>\n\n## 建立模擬器\n\n選擇我們剛建好的硬體外型\n![選擇硬體裝置](選擇硬體裝置.jpg)\n\n作業系統版本，因為要跟 Zenbo 一樣，所以選 6.0\n![選擇作業系統版本](選擇作業系統版本.jpg)\n\n確認一下是否都正確，按下Finish，執行一下，模擬器就建好囉！\n![模擬器完成](模擬器完成.jpg)\n\n最後，你會獲得一台 Android 6 的平板 😅\n![就是平板](就是平板.jpg)","slug":"Zenbo開發系列-02-建置與Zenbo規格相同的模擬器","published":1,"updated":"2021-08-07T07:03:30.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98az00093nwb5t7q7xsw","content":"<p>時逢疫情來襲，三級警戒讓我也不敢回學校，但又不可能把 Zenbo 搬回家，還好之前有照 Zenbo 的規格開了一台模擬器，雖然沒辦法所有的畫面都和在 Zenbo 一樣 (ASUS 應該有自己客製一些東西)，但至少在沒有使用 Zenbo SDK 的狀況下，執行 Android 程式和測試有沒有跑版都OK，這樣我就能在本機測試了。</p>\n<p>這篇會簡單紀錄一下我開的模擬器規格，Zenbo 的作業系統是 Android，基本上可以把他當作是一台會走路的平板啦。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"模擬器規格\"><a href=\"#模擬器規格\" class=\"headerlink\" title=\"模擬器規格\"></a>模擬器規格</h1><p>螢幕解析度: 1028*752 (10.1 吋)<br>螢幕方向: 橫向<br>Android 版本: 6.0 (API 23)</p>\n<h1 id=\"開始建置\"><a href=\"#開始建置\" class=\"headerlink\" title=\"開始建置\"></a>開始建置</h1><p>首先開一個新的模擬器<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%BB%BA%E7%AB%8B%E6%96%B0%E6%A8%A1%E6%93%AC%E5%99%A8.jpg\" alt=\"建立新模擬器\"></p>\n<h2 id=\"建立硬體外型\"><a href=\"#建立硬體外型\" class=\"headerlink\" title=\"建立硬體外型\"></a>建立硬體外型</h2><p>建立新裝置外型<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%BB%BA%E7%AB%8B%E6%96%B0%E7%A1%AC%E9%AB%94%E5%A4%96%E5%9E%8B.jpg\" alt=\"建立新硬體外型\"></p>\n<p>可以照著設定<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E7%A1%AC%E9%AB%94%E8%A6%8F%E6%A0%BC.jpg\" alt=\"硬體規格\"></p>\n<p>或是把下面這個我做好的直接 import</p>\n<script src=\"https://gist.github.com/dreambo4/44f9a782e079964da0a46fa4757e673e.js\"></script>\n\n<h2 id=\"建立模擬器\"><a href=\"#建立模擬器\" class=\"headerlink\" title=\"建立模擬器\"></a>建立模擬器</h2><p>選擇我們剛建好的硬體外型<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E9%81%B8%E6%93%87%E7%A1%AC%E9%AB%94%E8%A3%9D%E7%BD%AE.jpg\" alt=\"選擇硬體裝置\"></p>\n<p>作業系統版本，因為要跟 Zenbo 一樣，所以選 6.0<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E9%81%B8%E6%93%87%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1%E7%89%88%E6%9C%AC.jpg\" alt=\"選擇作業系統版本\"></p>\n<p>確認一下是否都正確，按下Finish，執行一下，模擬器就建好囉！<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E6%A8%A1%E6%93%AC%E5%99%A8%E5%AE%8C%E6%88%90.jpg\" alt=\"模擬器完成\"></p>\n<p>最後，你會獲得一台 Android 6 的平板 😅<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%B0%B1%E6%98%AF%E5%B9%B3%E6%9D%BF.jpg\" alt=\"就是平板\"></p>\n","site":{"data":{}},"excerpt":"<p>時逢疫情來襲，三級警戒讓我也不敢回學校，但又不可能把 Zenbo 搬回家，還好之前有照 Zenbo 的規格開了一台模擬器，雖然沒辦法所有的畫面都和在 Zenbo 一樣 (ASUS 應該有自己客製一些東西)，但至少在沒有使用 Zenbo SDK 的狀況下，執行 Android 程式和測試有沒有跑版都OK，這樣我就能在本機測試了。</p>\n<p>這篇會簡單紀錄一下我開的模擬器規格，Zenbo 的作業系統是 Android，基本上可以把他當作是一台會走路的平板啦。</p>","more":"<h1 id=\"模擬器規格\"><a href=\"#模擬器規格\" class=\"headerlink\" title=\"模擬器規格\"></a>模擬器規格</h1><p>螢幕解析度: 1028*752 (10.1 吋)<br>螢幕方向: 橫向<br>Android 版本: 6.0 (API 23)</p>\n<h1 id=\"開始建置\"><a href=\"#開始建置\" class=\"headerlink\" title=\"開始建置\"></a>開始建置</h1><p>首先開一個新的模擬器<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%BB%BA%E7%AB%8B%E6%96%B0%E6%A8%A1%E6%93%AC%E5%99%A8.jpg\" alt=\"建立新模擬器\"></p>\n<h2 id=\"建立硬體外型\"><a href=\"#建立硬體外型\" class=\"headerlink\" title=\"建立硬體外型\"></a>建立硬體外型</h2><p>建立新裝置外型<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%BB%BA%E7%AB%8B%E6%96%B0%E7%A1%AC%E9%AB%94%E5%A4%96%E5%9E%8B.jpg\" alt=\"建立新硬體外型\"></p>\n<p>可以照著設定<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E7%A1%AC%E9%AB%94%E8%A6%8F%E6%A0%BC.jpg\" alt=\"硬體規格\"></p>\n<p>或是把下面這個我做好的直接 import</p>\n<script src=\"https://gist.github.com/dreambo4/44f9a782e079964da0a46fa4757e673e.js\"></script>\n\n<h2 id=\"建立模擬器\"><a href=\"#建立模擬器\" class=\"headerlink\" title=\"建立模擬器\"></a>建立模擬器</h2><p>選擇我們剛建好的硬體外型<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E9%81%B8%E6%93%87%E7%A1%AC%E9%AB%94%E8%A3%9D%E7%BD%AE.jpg\" alt=\"選擇硬體裝置\"></p>\n<p>作業系統版本，因為要跟 Zenbo 一樣，所以選 6.0<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E9%81%B8%E6%93%87%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1%E7%89%88%E6%9C%AC.jpg\" alt=\"選擇作業系統版本\"></p>\n<p>確認一下是否都正確，按下Finish，執行一下，模擬器就建好囉！<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E6%A8%A1%E6%93%AC%E5%99%A8%E5%AE%8C%E6%88%90.jpg\" alt=\"模擬器完成\"></p>\n<p>最後，你會獲得一台 Android 6 的平板 😅<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-02-%E5%BB%BA%E7%BD%AE%E8%88%87Zenbo%E8%A6%8F%E6%A0%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A8%A1%E6%93%AC%E5%99%A8/%E5%B0%B1%E6%98%AF%E5%B9%B3%E6%9D%BF.jpg\" alt=\"就是平板\"></p>"},{"title":"[Zenbo開發系列] 03-DDE Editor vs Dialogflow","date":"2021-08-05T13:44:20.000Z","_content":"\nDDE(dialogue development environment) Editor [[官方文件](https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Welcome)] 是由 ASUS 提供，可以設計自己的回覆規則的工具，製作好之後可以把語料安裝到 Zenbo。\n\n以我有用到的功能來說，Dialogflow 和 DDE 都是 Rule-base 的方式，但我覺得相比 Dialogflow，DDE 就比較工人智慧一點😂。\n<!--more-->\n\n對了，DDE **建議搭配 Chrome**。使用 Firefox 的話，右側的對話測試區會沒有反應 ~~(被雷到💣)~~\n\n# Dialogflow 比較強大\n舉例來說，Dialogflow 可以做到這樣\n\n我先在 Entities 定義了台中「區」的名稱\n![DF_entities](DF_entities.png)\n\n然後設計對話語句\n![DF比較強大](DF比較強大.png)\n\n## 測試對話\nDialogflow 應該有支援**模糊比對**句子之類的功能，像是「我要找長照站」、「哪裡有據點」都沒有完全符合前面設計的句子規則。而且句中如果沒提到地點，Dialogflow 可以再補問「你要找哪裡的長照站?」。相較之下，DDE 就要把句子規則定好定滿，沒有符合就不會回覆相應的句子。\n\n![DF1](DF1.png)\n![DF2](DF2.png)\n> \"...\" 是我還沒把真正的地址加上去，先暫代的，應該是要跟 Fulfillment 串接，但我沒有做完這部份\n\n# DDE 工人智慧\nDDE 雖然是 ASUS 做的，但官方文件卻是以英文為主，中文的版本相對沒那麼齊全。然後建議，文件看過最好順手存下來，他們網站不知道在搞什麼，有一陣子上去找資料發現文字都變成亂碼，還好之前有先用 Notion 存起來。\n\n不過還是有一些優點的，開發遇到問題的時候，寫信給客服信箱，會有他們的工程師回答你，這部分 Dialogflow 應該就無法了。\n> 他也只回我一兩次而已，後面我再接著問的部分，就沒再回了。不過我那時候的主要問題有解決，就不跟他計較啦~\n\nDialogflow 可以模糊比對句子，DDE 話就沒那麼方便，相關的句子規則都要訂清楚，如果設計不好，句子間有可能撞關鍵字。\n\n![DDE1](DDE1.png)\n![DDE2](DDE2.png)\n![DDE3](DDE3.png)\n\n## 和 Zenbo 的搭配\n\n和 Zenbo 的配合方面，DDE 還是要比 Dialogflow 好一點。DDE 做好的語料庫，可以發布到伺服器，在 Zenbo 就可以透過官方提供的 APP 來更新/下載語料。這些語料會跟其他原先就存在的語料放在一起，等於是裝在 Zenbo 腦袋裡。Dialogflow 比較像腦袋在雲端上，只把 Zenbo 當作是一個介面，回傳什麼句子給 Zenbo 他就照唸。\n\n另外，如果要做到「Hey, Zenbo 我要用`APP名稱`」的話，要到 Zenbo 開發者平台註冊 [Developer Console](https://zenbo.asus.com/developer/console/)。\n\n# 結語\n最後，如果沒有真的一定要用 DDE 的話，我會比較建議 Dialogflow。因為 Dialogflow 支援比較多平台，常見的平台都可以串接，如果想裝在 Zenbo 上也可以用 API(不過這部份我沒有實作)，走跟一般 Android 的路線。\n\n好了，比較完了，那你說我最後是用那一個？我只能說都沒有🤦‍♂️\n論文中，我的語料庫模型是用 TF-IDF 自己建的，之後有時間再補這部份的文章吧！\n","source":"_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow.md","raw":"---\ntitle: '[Zenbo開發系列] 03-DDE Editor vs Dialogflow'\ndate: 2021-08-05 21:44:20\ntags:\n- Zenbo\n- DDE\n- Dialogflow\n- 聊天機器人\n---\n\nDDE(dialogue development environment) Editor [[官方文件](https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Welcome)] 是由 ASUS 提供，可以設計自己的回覆規則的工具，製作好之後可以把語料安裝到 Zenbo。\n\n以我有用到的功能來說，Dialogflow 和 DDE 都是 Rule-base 的方式，但我覺得相比 Dialogflow，DDE 就比較工人智慧一點😂。\n<!--more-->\n\n對了，DDE **建議搭配 Chrome**。使用 Firefox 的話，右側的對話測試區會沒有反應 ~~(被雷到💣)~~\n\n# Dialogflow 比較強大\n舉例來說，Dialogflow 可以做到這樣\n\n我先在 Entities 定義了台中「區」的名稱\n![DF_entities](DF_entities.png)\n\n然後設計對話語句\n![DF比較強大](DF比較強大.png)\n\n## 測試對話\nDialogflow 應該有支援**模糊比對**句子之類的功能，像是「我要找長照站」、「哪裡有據點」都沒有完全符合前面設計的句子規則。而且句中如果沒提到地點，Dialogflow 可以再補問「你要找哪裡的長照站?」。相較之下，DDE 就要把句子規則定好定滿，沒有符合就不會回覆相應的句子。\n\n![DF1](DF1.png)\n![DF2](DF2.png)\n> \"...\" 是我還沒把真正的地址加上去，先暫代的，應該是要跟 Fulfillment 串接，但我沒有做完這部份\n\n# DDE 工人智慧\nDDE 雖然是 ASUS 做的，但官方文件卻是以英文為主，中文的版本相對沒那麼齊全。然後建議，文件看過最好順手存下來，他們網站不知道在搞什麼，有一陣子上去找資料發現文字都變成亂碼，還好之前有先用 Notion 存起來。\n\n不過還是有一些優點的，開發遇到問題的時候，寫信給客服信箱，會有他們的工程師回答你，這部分 Dialogflow 應該就無法了。\n> 他也只回我一兩次而已，後面我再接著問的部分，就沒再回了。不過我那時候的主要問題有解決，就不跟他計較啦~\n\nDialogflow 可以模糊比對句子，DDE 話就沒那麼方便，相關的句子規則都要訂清楚，如果設計不好，句子間有可能撞關鍵字。\n\n![DDE1](DDE1.png)\n![DDE2](DDE2.png)\n![DDE3](DDE3.png)\n\n## 和 Zenbo 的搭配\n\n和 Zenbo 的配合方面，DDE 還是要比 Dialogflow 好一點。DDE 做好的語料庫，可以發布到伺服器，在 Zenbo 就可以透過官方提供的 APP 來更新/下載語料。這些語料會跟其他原先就存在的語料放在一起，等於是裝在 Zenbo 腦袋裡。Dialogflow 比較像腦袋在雲端上，只把 Zenbo 當作是一個介面，回傳什麼句子給 Zenbo 他就照唸。\n\n另外，如果要做到「Hey, Zenbo 我要用`APP名稱`」的話，要到 Zenbo 開發者平台註冊 [Developer Console](https://zenbo.asus.com/developer/console/)。\n\n# 結語\n最後，如果沒有真的一定要用 DDE 的話，我會比較建議 Dialogflow。因為 Dialogflow 支援比較多平台，常見的平台都可以串接，如果想裝在 Zenbo 上也可以用 API(不過這部份我沒有實作)，走跟一般 Android 的路線。\n\n好了，比較完了，那你說我最後是用那一個？我只能說都沒有🤦‍♂️\n論文中，我的語料庫模型是用 TF-IDF 自己建的，之後有時間再補這部份的文章吧！\n","slug":"Zenbo開發系列-03-DDE-Editor-vs-Dialogflow","published":1,"updated":"2021-08-07T16:07:06.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b1000b3nwb9s0xar96","content":"<p>DDE(dialogue development environment) Editor [<a href=\"https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Welcome\">官方文件</a>] 是由 ASUS 提供，可以設計自己的回覆規則的工具，製作好之後可以把語料安裝到 Zenbo。</p>\n<p>以我有用到的功能來說，Dialogflow 和 DDE 都是 Rule-base 的方式，但我覺得相比 Dialogflow，DDE 就比較工人智慧一點😂。</p>\n<span id=\"more\"></span>\n\n<p>對了，DDE <strong>建議搭配 Chrome</strong>。使用 Firefox 的話，右側的對話測試區會沒有反應 <del>(被雷到💣)</del></p>\n<h1 id=\"Dialogflow-比較強大\"><a href=\"#Dialogflow-比較強大\" class=\"headerlink\" title=\"Dialogflow 比較強大\"></a>Dialogflow 比較強大</h1><p>舉例來說，Dialogflow 可以做到這樣</p>\n<p>我先在 Entities 定義了台中「區」的名稱<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF_entities.png\" alt=\"DF_entities\"></p>\n<p>然後設計對話語句<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF%E6%AF%94%E8%BC%83%E5%BC%B7%E5%A4%A7.png\" alt=\"DF比較強大\"></p>\n<h2 id=\"測試對話\"><a href=\"#測試對話\" class=\"headerlink\" title=\"測試對話\"></a>測試對話</h2><p>Dialogflow 應該有支援<strong>模糊比對</strong>句子之類的功能，像是「我要找長照站」、「哪裡有據點」都沒有完全符合前面設計的句子規則。而且句中如果沒提到地點，Dialogflow 可以再補問「你要找哪裡的長照站?」。相較之下，DDE 就要把句子規則定好定滿，沒有符合就不會回覆相應的句子。</p>\n<p><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF1.png\" alt=\"DF1\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF2.png\" alt=\"DF2\"></p>\n<blockquote>\n<p>“…” 是我還沒把真正的地址加上去，先暫代的，應該是要跟 Fulfillment 串接，但我沒有做完這部份</p>\n</blockquote>\n<h1 id=\"DDE-工人智慧\"><a href=\"#DDE-工人智慧\" class=\"headerlink\" title=\"DDE 工人智慧\"></a>DDE 工人智慧</h1><p>DDE 雖然是 ASUS 做的，但官方文件卻是以英文為主，中文的版本相對沒那麼齊全。然後建議，文件看過最好順手存下來，他們網站不知道在搞什麼，有一陣子上去找資料發現文字都變成亂碼，還好之前有先用 Notion 存起來。</p>\n<p>不過還是有一些優點的，開發遇到問題的時候，寫信給客服信箱，會有他們的工程師回答你，這部分 Dialogflow 應該就無法了。</p>\n<blockquote>\n<p>他也只回我一兩次而已，後面我再接著問的部分，就沒再回了。不過我那時候的主要問題有解決，就不跟他計較啦~</p>\n</blockquote>\n<p>Dialogflow 可以模糊比對句子，DDE 話就沒那麼方便，相關的句子規則都要訂清楚，如果設計不好，句子間有可能撞關鍵字。</p>\n<p><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE1.png\" alt=\"DDE1\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE2.png\" alt=\"DDE2\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE3.png\" alt=\"DDE3\"></p>\n<h2 id=\"和-Zenbo-的搭配\"><a href=\"#和-Zenbo-的搭配\" class=\"headerlink\" title=\"和 Zenbo 的搭配\"></a>和 Zenbo 的搭配</h2><p>和 Zenbo 的配合方面，DDE 還是要比 Dialogflow 好一點。DDE 做好的語料庫，可以發布到伺服器，在 Zenbo 就可以透過官方提供的 APP 來更新/下載語料。這些語料會跟其他原先就存在的語料放在一起，等於是裝在 Zenbo 腦袋裡。Dialogflow 比較像腦袋在雲端上，只把 Zenbo 當作是一個介面，回傳什麼句子給 Zenbo 他就照唸。</p>\n<p>另外，如果要做到「Hey, Zenbo 我要用<code>APP名稱</code>」的話，要到 Zenbo 開發者平台註冊 <a href=\"https://zenbo.asus.com/developer/console/\">Developer Console</a>。</p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>最後，如果沒有真的一定要用 DDE 的話，我會比較建議 Dialogflow。因為 Dialogflow 支援比較多平台，常見的平台都可以串接，如果想裝在 Zenbo 上也可以用 API(不過這部份我沒有實作)，走跟一般 Android 的路線。</p>\n<p>好了，比較完了，那你說我最後是用那一個？我只能說都沒有🤦‍♂️<br>論文中，我的語料庫模型是用 TF-IDF 自己建的，之後有時間再補這部份的文章吧！</p>\n","site":{"data":{}},"excerpt":"<p>DDE(dialogue development environment) Editor [<a href=\"https://zenbo.asus.com/developer/documents/overview/DDE-Tutorial/Welcome\">官方文件</a>] 是由 ASUS 提供，可以設計自己的回覆規則的工具，製作好之後可以把語料安裝到 Zenbo。</p>\n<p>以我有用到的功能來說，Dialogflow 和 DDE 都是 Rule-base 的方式，但我覺得相比 Dialogflow，DDE 就比較工人智慧一點😂。</p>","more":"<p>對了，DDE <strong>建議搭配 Chrome</strong>。使用 Firefox 的話，右側的對話測試區會沒有反應 <del>(被雷到💣)</del></p>\n<h1 id=\"Dialogflow-比較強大\"><a href=\"#Dialogflow-比較強大\" class=\"headerlink\" title=\"Dialogflow 比較強大\"></a>Dialogflow 比較強大</h1><p>舉例來說，Dialogflow 可以做到這樣</p>\n<p>我先在 Entities 定義了台中「區」的名稱<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF_entities.png\" alt=\"DF_entities\"></p>\n<p>然後設計對話語句<br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF%E6%AF%94%E8%BC%83%E5%BC%B7%E5%A4%A7.png\" alt=\"DF比較強大\"></p>\n<h2 id=\"測試對話\"><a href=\"#測試對話\" class=\"headerlink\" title=\"測試對話\"></a>測試對話</h2><p>Dialogflow 應該有支援<strong>模糊比對</strong>句子之類的功能，像是「我要找長照站」、「哪裡有據點」都沒有完全符合前面設計的句子規則。而且句中如果沒提到地點，Dialogflow 可以再補問「你要找哪裡的長照站?」。相較之下，DDE 就要把句子規則定好定滿，沒有符合就不會回覆相應的句子。</p>\n<p><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF1.png\" alt=\"DF1\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DF2.png\" alt=\"DF2\"></p>\n<blockquote>\n<p>“…” 是我還沒把真正的地址加上去，先暫代的，應該是要跟 Fulfillment 串接，但我沒有做完這部份</p>\n</blockquote>\n<h1 id=\"DDE-工人智慧\"><a href=\"#DDE-工人智慧\" class=\"headerlink\" title=\"DDE 工人智慧\"></a>DDE 工人智慧</h1><p>DDE 雖然是 ASUS 做的，但官方文件卻是以英文為主，中文的版本相對沒那麼齊全。然後建議，文件看過最好順手存下來，他們網站不知道在搞什麼，有一陣子上去找資料發現文字都變成亂碼，還好之前有先用 Notion 存起來。</p>\n<p>不過還是有一些優點的，開發遇到問題的時候，寫信給客服信箱，會有他們的工程師回答你，這部分 Dialogflow 應該就無法了。</p>\n<blockquote>\n<p>他也只回我一兩次而已，後面我再接著問的部分，就沒再回了。不過我那時候的主要問題有解決，就不跟他計較啦~</p>\n</blockquote>\n<p>Dialogflow 可以模糊比對句子，DDE 話就沒那麼方便，相關的句子規則都要訂清楚，如果設計不好，句子間有可能撞關鍵字。</p>\n<p><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE1.png\" alt=\"DDE1\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE2.png\" alt=\"DDE2\"><br><img src=\"/2021/08/05/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-03-DDE-Editor-vs-Dialogflow/DDE3.png\" alt=\"DDE3\"></p>\n<h2 id=\"和-Zenbo-的搭配\"><a href=\"#和-Zenbo-的搭配\" class=\"headerlink\" title=\"和 Zenbo 的搭配\"></a>和 Zenbo 的搭配</h2><p>和 Zenbo 的配合方面，DDE 還是要比 Dialogflow 好一點。DDE 做好的語料庫，可以發布到伺服器，在 Zenbo 就可以透過官方提供的 APP 來更新/下載語料。這些語料會跟其他原先就存在的語料放在一起，等於是裝在 Zenbo 腦袋裡。Dialogflow 比較像腦袋在雲端上，只把 Zenbo 當作是一個介面，回傳什麼句子給 Zenbo 他就照唸。</p>\n<p>另外，如果要做到「Hey, Zenbo 我要用<code>APP名稱</code>」的話，要到 Zenbo 開發者平台註冊 <a href=\"https://zenbo.asus.com/developer/console/\">Developer Console</a>。</p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>最後，如果沒有真的一定要用 DDE 的話，我會比較建議 Dialogflow。因為 Dialogflow 支援比較多平台，常見的平台都可以串接，如果想裝在 Zenbo 上也可以用 API(不過這部份我沒有實作)，走跟一般 Android 的路線。</p>\n<p>好了，比較完了，那你說我最後是用那一個？我只能說都沒有🤦‍♂️<br>論文中，我的語料庫模型是用 TF-IDF 自己建的，之後有時間再補這部份的文章吧！</p>"},{"title":"[Zenbo開發系列] 04-DDE簡介","date":"2021-08-06T17:26:56.000Z","_content":"\n這篇主要是我之前看官方文件的筆記，還有對於幾個 Basic Concepts 的理解，可能比較沒有結構一點。建議以官方文件的教學為主，再參考我的筆記，這篇紀錄了我之前不懂地方，希望也能幫到你。\n\n為了寫這篇文章，今天又上去翻了一下官方文件，發現還有在更新呢!\n\n想想之前做要做 DDE 語料，看官方文件踩了不少雷💣\n<!--more-->\n\n> 官方文件使用方法:\n> - 如果有時間，可以中英文互相參照，有時候兩個版本內容不太相同。\n> - 如果有在官方文件找不到說明，嘗試把不同版本的文件互相參照。曾經發現一個我找很久的說明，在舊版本有寫，但在新版本被移除了。\n>   - 可是這個功能在系統上還存在欸! 😡\n> - 遇到官方文件也沒說明清楚的時候，就只能自己摸索了，加油!\n\n# 筆記開始\n\n> 紀錄時間: 2020/04/25\n\n**<<以下是當初研究時隨手紀錄，不太完整，請以官方文件為主>>**\n\n這次是根據這兩份教學文件\n- [Template: Hello World](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Templates/Hello-World)\n- [Hello-City-(zh)](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/Hello-City-(zh))\n\n建置完後發現，上次不能送出應該是因為瀏覽器(firefox🦊)的問題，改用chrome後可以正常送出。\n\n# How to start 導論\n\n[How to start](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/How-to-start(zh))\n\n> Zenbo 內部因為有口語理解模組 (Spoken Language Understanding / SLU)，將語音辨識資訊轉化為結構化的語意資料，並提供給適當的Domain 處理。\n\n> 人類與Zenbo的對話是透過一連串的Intent(意圖)語句組成。Concept(概念)則是語句的詞彙，而Plan(流程)則是負責串起語句之間的流程來建立一段完整對話。\n\nUser在問答中的語句為Intent，Intent中的詞彙為Concept。\n\n# Info\n\n![Untitled.png](Untitled.png)\n\n塗掉的那幾欄如果需要發佈才要填的\n\n![Untitled1.png](Untitled1.png)\n\n# Plans\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [ASUS DDE - Plans](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Plans) )\n\n因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。\n\n這邊就是要回答的文字，應該翻叫「計畫」，「計畫」是將一組事件對應到一系列的動作。\n\nUtteranceToLaunchApp 是要開啟 APP 的 Plans\n\n![Untitled2.png](Untitled2.png)\n\n## PlanID\n\n每個plan要有唯一id\n\n## Is the plan able to launch the app?\n\n- true: 可以啟動App\n- false: 不行\n\n## Event\nevent的CSR是「語音辨識結果」\n\n![Plans1](Plans1.png)\n![Plans2](Plans2.png)\n\n# Intents\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [DDE Tutorial - Intents](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Intents) )\n\n可以設定多種句型，應該翻叫「意圖」。\n\n因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。\n\n人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。 <- 官方文件寫的\n\n> BrandName = 品牌名，ex: 華碩\n\n> VoiceTag(App Name) = APP名稱，ex: 長照\n\n![Untitled3.png](Untitled3.png)\n\n![Untitled4.png](Untitled4.png)\n\n# Concepts\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [DDE Tutorial - Concepts](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Concepts) )\n\n我會把他翻作「概念」，大概就是可以將很多同意詞群組起來的。在 Dialoflow 叫 Entities。\n\n![Untitled5.png](Untitled5.png)\n![Untitled6.png](Untitled6.png)\n![Untitled07.png](Untitled7.png)\n\n## Type\n選項有： `Class` 和 `Phrase`\n文件建議選 `Class` ，但未解釋`Phrase` 的用途。\n\n> 文件 v1.1.3 提到，若是使用class，所有的實例都要是類別；若使用phrase，所有實例都要是片語。\n\n# Publish\n\n右上有publish按鈕\n\n![Untitled8.png](Untitled8.png)\n\n# Tests\n\n右方有輸入框可以測試\n\n要用Chrome!!\n\n![Untitled9.png](Untitled9.png)\n\n# 參考資料\n## 學習資源\n- [Home Robot / Zenbo (APP Builder / DDE Editor)](https://sites.google.com/site/goofoo777/106_1-jiao-xue-ke-cheng/home-robot)\n- [Zenbo機器人開發者社群](https://www.facebook.com/groups/zenbo.dev)\n- [分享_基於Zenbo語音的多機協作開發技術_ok](https://www.facebook.com/groups/zenbo.dev/permalink/1567101126726820)\n\n## 相關文獻\n- [AI機器人、藍芽與Android整合開發技術](https://www.books.com.tw/products/0010809325)\n  - 推這本書👍，裡面有介紹不同機器人間互動時程式設計的架構，還有 Zenbo SDK 的 Sample Code。可以寄信向作者高煥堂老師索取完整原始碼。\n- [智慧家庭陪伴系統 (專題)](https://www.csie.nuu.edu.tw/wp-content/uploads/2019/09/2018-%E7%8E%8B%E8%83%BD%E4%B8%AD-%E5%B0%88%E9%A1%8C.pdf)\n- [銀髮族使用Zenbo機器人服務體驗洞察研究](https://hdl.handle.net/11296/x4x8c6)\n- [陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo為例](https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282)\n","source":"_posts/Zenbo開發系列-04-DDE簡介.md","raw":"---\ntitle: '[Zenbo開發系列] 04-DDE簡介'\ndate: 2021-08-07 01:26:56\ntags: \n- Zenbo\n- DDE\n---\n\n這篇主要是我之前看官方文件的筆記，還有對於幾個 Basic Concepts 的理解，可能比較沒有結構一點。建議以官方文件的教學為主，再參考我的筆記，這篇紀錄了我之前不懂地方，希望也能幫到你。\n\n為了寫這篇文章，今天又上去翻了一下官方文件，發現還有在更新呢!\n\n想想之前做要做 DDE 語料，看官方文件踩了不少雷💣\n<!--more-->\n\n> 官方文件使用方法:\n> - 如果有時間，可以中英文互相參照，有時候兩個版本內容不太相同。\n> - 如果有在官方文件找不到說明，嘗試把不同版本的文件互相參照。曾經發現一個我找很久的說明，在舊版本有寫，但在新版本被移除了。\n>   - 可是這個功能在系統上還存在欸! 😡\n> - 遇到官方文件也沒說明清楚的時候，就只能自己摸索了，加油!\n\n# 筆記開始\n\n> 紀錄時間: 2020/04/25\n\n**<<以下是當初研究時隨手紀錄，不太完整，請以官方文件為主>>**\n\n這次是根據這兩份教學文件\n- [Template: Hello World](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Templates/Hello-World)\n- [Hello-City-(zh)](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/Hello-City-(zh))\n\n建置完後發現，上次不能送出應該是因為瀏覽器(firefox🦊)的問題，改用chrome後可以正常送出。\n\n# How to start 導論\n\n[How to start](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/How-to-start(zh))\n\n> Zenbo 內部因為有口語理解模組 (Spoken Language Understanding / SLU)，將語音辨識資訊轉化為結構化的語意資料，並提供給適當的Domain 處理。\n\n> 人類與Zenbo的對話是透過一連串的Intent(意圖)語句組成。Concept(概念)則是語句的詞彙，而Plan(流程)則是負責串起語句之間的流程來建立一段完整對話。\n\nUser在問答中的語句為Intent，Intent中的詞彙為Concept。\n\n# Info\n\n![Untitled.png](Untitled.png)\n\n塗掉的那幾欄如果需要發佈才要填的\n\n![Untitled1.png](Untitled1.png)\n\n# Plans\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [ASUS DDE - Plans](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Plans) )\n\n因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。\n\n這邊就是要回答的文字，應該翻叫「計畫」，「計畫」是將一組事件對應到一系列的動作。\n\nUtteranceToLaunchApp 是要開啟 APP 的 Plans\n\n![Untitled2.png](Untitled2.png)\n\n## PlanID\n\n每個plan要有唯一id\n\n## Is the plan able to launch the app?\n\n- true: 可以啟動App\n- false: 不行\n\n## Event\nevent的CSR是「語音辨識結果」\n\n![Plans1](Plans1.png)\n![Plans2](Plans2.png)\n\n# Intents\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [DDE Tutorial - Intents](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Intents) )\n\n可以設定多種句型，應該翻叫「意圖」。\n\n因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。\n\n人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。 <- 官方文件寫的\n\n> BrandName = 品牌名，ex: 華碩\n\n> VoiceTag(App Name) = APP名稱，ex: 長照\n\n![Untitled3.png](Untitled3.png)\n\n![Untitled4.png](Untitled4.png)\n\n# Concepts\n\n撰寫這份筆記時，最新版文件是 `v1.1.4` 。( [DDE Tutorial - Concepts](https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Concepts) )\n\n我會把他翻作「概念」，大概就是可以將很多同意詞群組起來的。在 Dialoflow 叫 Entities。\n\n![Untitled5.png](Untitled5.png)\n![Untitled6.png](Untitled6.png)\n![Untitled07.png](Untitled7.png)\n\n## Type\n選項有： `Class` 和 `Phrase`\n文件建議選 `Class` ，但未解釋`Phrase` 的用途。\n\n> 文件 v1.1.3 提到，若是使用class，所有的實例都要是類別；若使用phrase，所有實例都要是片語。\n\n# Publish\n\n右上有publish按鈕\n\n![Untitled8.png](Untitled8.png)\n\n# Tests\n\n右方有輸入框可以測試\n\n要用Chrome!!\n\n![Untitled9.png](Untitled9.png)\n\n# 參考資料\n## 學習資源\n- [Home Robot / Zenbo (APP Builder / DDE Editor)](https://sites.google.com/site/goofoo777/106_1-jiao-xue-ke-cheng/home-robot)\n- [Zenbo機器人開發者社群](https://www.facebook.com/groups/zenbo.dev)\n- [分享_基於Zenbo語音的多機協作開發技術_ok](https://www.facebook.com/groups/zenbo.dev/permalink/1567101126726820)\n\n## 相關文獻\n- [AI機器人、藍芽與Android整合開發技術](https://www.books.com.tw/products/0010809325)\n  - 推這本書👍，裡面有介紹不同機器人間互動時程式設計的架構，還有 Zenbo SDK 的 Sample Code。可以寄信向作者高煥堂老師索取完整原始碼。\n- [智慧家庭陪伴系統 (專題)](https://www.csie.nuu.edu.tw/wp-content/uploads/2019/09/2018-%E7%8E%8B%E8%83%BD%E4%B8%AD-%E5%B0%88%E9%A1%8C.pdf)\n- [銀髮族使用Zenbo機器人服務體驗洞察研究](https://hdl.handle.net/11296/x4x8c6)\n- [陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo為例](https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282)\n","slug":"Zenbo開發系列-04-DDE簡介","published":1,"updated":"2021-08-07T16:08:15.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b2000d3nwb96dr6p2f","content":"<p>這篇主要是我之前看官方文件的筆記，還有對於幾個 Basic Concepts 的理解，可能比較沒有結構一點。建議以官方文件的教學為主，再參考我的筆記，這篇紀錄了我之前不懂地方，希望也能幫到你。</p>\n<p>為了寫這篇文章，今天又上去翻了一下官方文件，發現還有在更新呢!</p>\n<p>想想之前做要做 DDE 語料，看官方文件踩了不少雷💣</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>官方文件使用方法:</p>\n<ul>\n<li>如果有時間，可以中英文互相參照，有時候兩個版本內容不太相同。</li>\n<li>如果有在官方文件找不到說明，嘗試把不同版本的文件互相參照。曾經發現一個我找很久的說明，在舊版本有寫，但在新版本被移除了。<ul>\n<li>可是這個功能在系統上還存在欸! 😡</li>\n</ul>\n</li>\n<li>遇到官方文件也沒說明清楚的時候，就只能自己摸索了，加油!</li>\n</ul>\n</blockquote>\n<h1 id=\"筆記開始\"><a href=\"#筆記開始\" class=\"headerlink\" title=\"筆記開始\"></a>筆記開始</h1><blockquote>\n<p>紀錄時間: 2020/04/25</p>\n</blockquote>\n<p><strong>&lt;&lt;以下是當初研究時隨手紀錄，不太完整，請以官方文件為主&gt;&gt;</strong></p>\n<p>這次是根據這兩份教學文件</p>\n<ul>\n<li><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Templates/Hello-World\">Template: Hello World</a></li>\n<li><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/Hello-City-(zh)\">Hello-City-(zh)</a></li>\n</ul>\n<p>建置完後發現，上次不能送出應該是因為瀏覽器(firefox🦊)的問題，改用chrome後可以正常送出。</p>\n<h1 id=\"How-to-start-導論\"><a href=\"#How-to-start-導論\" class=\"headerlink\" title=\"How to start 導論\"></a>How to start 導論</h1><p><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/How-to-start(zh)\">How to start</a></p>\n<blockquote>\n<p>Zenbo 內部因為有口語理解模組 (Spoken Language Understanding / SLU)，將語音辨識資訊轉化為結構化的語意資料，並提供給適當的Domain 處理。</p>\n</blockquote>\n<blockquote>\n<p>人類與Zenbo的對話是透過一連串的Intent(意圖)語句組成。Concept(概念)則是語句的詞彙，而Plan(流程)則是負責串起語句之間的流程來建立一段完整對話。</p>\n</blockquote>\n<p>User在問答中的語句為Intent，Intent中的詞彙為Concept。</p>\n<h1 id=\"Info\"><a href=\"#Info\" class=\"headerlink\" title=\"Info\"></a>Info</h1><p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>塗掉的那幾欄如果需要發佈才要填的</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled1.png\" alt=\"Untitled1.png\"></p>\n<h1 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Plans\">ASUS DDE - Plans</a> )</p>\n<p>因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。</p>\n<p>這邊就是要回答的文字，應該翻叫「計畫」，「計畫」是將一組事件對應到一系列的動作。</p>\n<p>UtteranceToLaunchApp 是要開啟 APP 的 Plans</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled2.png\" alt=\"Untitled2.png\"></p>\n<h2 id=\"PlanID\"><a href=\"#PlanID\" class=\"headerlink\" title=\"PlanID\"></a>PlanID</h2><p>每個plan要有唯一id</p>\n<h2 id=\"Is-the-plan-able-to-launch-the-app\"><a href=\"#Is-the-plan-able-to-launch-the-app\" class=\"headerlink\" title=\"Is the plan able to launch the app?\"></a>Is the plan able to launch the app?</h2><ul>\n<li>true: 可以啟動App</li>\n<li>false: 不行</li>\n</ul>\n<h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><p>event的CSR是「語音辨識結果」</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Plans1.png\" alt=\"Plans1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Plans2.png\" alt=\"Plans2\"></p>\n<h1 id=\"Intents\"><a href=\"#Intents\" class=\"headerlink\" title=\"Intents\"></a>Intents</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Intents\">DDE Tutorial - Intents</a> )</p>\n<p>可以設定多種句型，應該翻叫「意圖」。</p>\n<p>因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。</p>\n<p>人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。 &lt;- 官方文件寫的</p>\n<blockquote>\n<p>BrandName = 品牌名，ex: 華碩</p>\n</blockquote>\n<blockquote>\n<p>VoiceTag(App Name) = APP名稱，ex: 長照</p>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled3.png\" alt=\"Untitled3.png\"></p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled4.png\" alt=\"Untitled4.png\"></p>\n<h1 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Concepts\">DDE Tutorial - Concepts</a> )</p>\n<p>我會把他翻作「概念」，大概就是可以將很多同意詞群組起來的。在 Dialoflow 叫 Entities。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled5.png\" alt=\"Untitled5.png\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled6.png\" alt=\"Untitled6.png\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled7.png\" alt=\"Untitled07.png\"></p>\n<h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><p>選項有： <code>Class</code> 和 <code>Phrase</code><br>文件建議選 <code>Class</code> ，但未解釋<code>Phrase</code> 的用途。</p>\n<blockquote>\n<p>文件 v1.1.3 提到，若是使用class，所有的實例都要是類別；若使用phrase，所有實例都要是片語。</p>\n</blockquote>\n<h1 id=\"Publish\"><a href=\"#Publish\" class=\"headerlink\" title=\"Publish\"></a>Publish</h1><p>右上有publish按鈕</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled8.png\" alt=\"Untitled8.png\"></p>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>右方有輸入框可以測試</p>\n<p>要用Chrome!!</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled9.png\" alt=\"Untitled9.png\"></p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><h2 id=\"學習資源\"><a href=\"#學習資源\" class=\"headerlink\" title=\"學習資源\"></a>學習資源</h2><ul>\n<li><a href=\"https://sites.google.com/site/goofoo777/106_1-jiao-xue-ke-cheng/home-robot\">Home Robot / Zenbo (APP Builder / DDE Editor)</a></li>\n<li><a href=\"https://www.facebook.com/groups/zenbo.dev\">Zenbo機器人開發者社群</a></li>\n<li><a href=\"https://www.facebook.com/groups/zenbo.dev/permalink/1567101126726820\">分享_基於Zenbo語音的多機協作開發技術_ok</a></li>\n</ul>\n<h2 id=\"相關文獻\"><a href=\"#相關文獻\" class=\"headerlink\" title=\"相關文獻\"></a>相關文獻</h2><ul>\n<li><a href=\"https://www.books.com.tw/products/0010809325\">AI機器人、藍芽與Android整合開發技術</a><ul>\n<li>推這本書👍，裡面有介紹不同機器人間互動時程式設計的架構，還有 Zenbo SDK 的 Sample Code。可以寄信向作者高煥堂老師索取完整原始碼。</li>\n</ul>\n</li>\n<li><a href=\"https://www.csie.nuu.edu.tw/wp-content/uploads/2019/09/2018-%E7%8E%8B%E8%83%BD%E4%B8%AD-%E5%B0%88%E9%A1%8C.pdf\">智慧家庭陪伴系統 (專題)</a></li>\n<li><a href=\"https://hdl.handle.net/11296/x4x8c6\">銀髮族使用Zenbo機器人服務體驗洞察研究</a></li>\n<li><a href=\"https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282\">陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo為例</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>這篇主要是我之前看官方文件的筆記，還有對於幾個 Basic Concepts 的理解，可能比較沒有結構一點。建議以官方文件的教學為主，再參考我的筆記，這篇紀錄了我之前不懂地方，希望也能幫到你。</p>\n<p>為了寫這篇文章，今天又上去翻了一下官方文件，發現還有在更新呢!</p>\n<p>想想之前做要做 DDE 語料，看官方文件踩了不少雷💣</p>","more":"<blockquote>\n<p>官方文件使用方法:</p>\n<ul>\n<li>如果有時間，可以中英文互相參照，有時候兩個版本內容不太相同。</li>\n<li>如果有在官方文件找不到說明，嘗試把不同版本的文件互相參照。曾經發現一個我找很久的說明，在舊版本有寫，但在新版本被移除了。<ul>\n<li>可是這個功能在系統上還存在欸! 😡</li>\n</ul>\n</li>\n<li>遇到官方文件也沒說明清楚的時候，就只能自己摸索了，加油!</li>\n</ul>\n</blockquote>\n<h1 id=\"筆記開始\"><a href=\"#筆記開始\" class=\"headerlink\" title=\"筆記開始\"></a>筆記開始</h1><blockquote>\n<p>紀錄時間: 2020/04/25</p>\n</blockquote>\n<p><strong>&lt;&lt;以下是當初研究時隨手紀錄，不太完整，請以官方文件為主&gt;&gt;</strong></p>\n<p>這次是根據這兩份教學文件</p>\n<ul>\n<li><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Templates/Hello-World\">Template: Hello World</a></li>\n<li><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/Hello-City-(zh)\">Hello-City-(zh)</a></li>\n</ul>\n<p>建置完後發現，上次不能送出應該是因為瀏覽器(firefox🦊)的問題，改用chrome後可以正常送出。</p>\n<h1 id=\"How-to-start-導論\"><a href=\"#How-to-start-導論\" class=\"headerlink\" title=\"How to start 導論\"></a>How to start 導論</h1><p><a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Quick-Start/How-to-start(zh)\">How to start</a></p>\n<blockquote>\n<p>Zenbo 內部因為有口語理解模組 (Spoken Language Understanding / SLU)，將語音辨識資訊轉化為結構化的語意資料，並提供給適當的Domain 處理。</p>\n</blockquote>\n<blockquote>\n<p>人類與Zenbo的對話是透過一連串的Intent(意圖)語句組成。Concept(概念)則是語句的詞彙，而Plan(流程)則是負責串起語句之間的流程來建立一段完整對話。</p>\n</blockquote>\n<p>User在問答中的語句為Intent，Intent中的詞彙為Concept。</p>\n<h1 id=\"Info\"><a href=\"#Info\" class=\"headerlink\" title=\"Info\"></a>Info</h1><p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>塗掉的那幾欄如果需要發佈才要填的</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled1.png\" alt=\"Untitled1.png\"></p>\n<h1 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Plans\">ASUS DDE - Plans</a> )</p>\n<p>因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。</p>\n<p>這邊就是要回答的文字，應該翻叫「計畫」，「計畫」是將一組事件對應到一系列的動作。</p>\n<p>UtteranceToLaunchApp 是要開啟 APP 的 Plans</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled2.png\" alt=\"Untitled2.png\"></p>\n<h2 id=\"PlanID\"><a href=\"#PlanID\" class=\"headerlink\" title=\"PlanID\"></a>PlanID</h2><p>每個plan要有唯一id</p>\n<h2 id=\"Is-the-plan-able-to-launch-the-app\"><a href=\"#Is-the-plan-able-to-launch-the-app\" class=\"headerlink\" title=\"Is the plan able to launch the app?\"></a>Is the plan able to launch the app?</h2><ul>\n<li>true: 可以啟動App</li>\n<li>false: 不行</li>\n</ul>\n<h2 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h2><p>event的CSR是「語音辨識結果」</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Plans1.png\" alt=\"Plans1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Plans2.png\" alt=\"Plans2\"></p>\n<h1 id=\"Intents\"><a href=\"#Intents\" class=\"headerlink\" title=\"Intents\"></a>Intents</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Intents\">DDE Tutorial - Intents</a> )</p>\n<p>可以設定多種句型，應該翻叫「意圖」。</p>\n<p>因舊文件的說明較詳細，部分筆記有參考v1.1.3、v1.1.2。</p>\n<p>人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。 &lt;- 官方文件寫的</p>\n<blockquote>\n<p>BrandName = 品牌名，ex: 華碩</p>\n</blockquote>\n<blockquote>\n<p>VoiceTag(App Name) = APP名稱，ex: 長照</p>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled3.png\" alt=\"Untitled3.png\"></p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled4.png\" alt=\"Untitled4.png\"></p>\n<h1 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h1><p>撰寫這份筆記時，最新版文件是 <code>v1.1.4</code> 。( <a href=\"https://zenbo.asus.com/developer/documents/Overview/DDE-Tutorial/Basic-Concepts/Concepts\">DDE Tutorial - Concepts</a> )</p>\n<p>我會把他翻作「概念」，大概就是可以將很多同意詞群組起來的。在 Dialoflow 叫 Entities。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled5.png\" alt=\"Untitled5.png\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled6.png\" alt=\"Untitled6.png\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled7.png\" alt=\"Untitled07.png\"></p>\n<h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><p>選項有： <code>Class</code> 和 <code>Phrase</code><br>文件建議選 <code>Class</code> ，但未解釋<code>Phrase</code> 的用途。</p>\n<blockquote>\n<p>文件 v1.1.3 提到，若是使用class，所有的實例都要是類別；若使用phrase，所有實例都要是片語。</p>\n</blockquote>\n<h1 id=\"Publish\"><a href=\"#Publish\" class=\"headerlink\" title=\"Publish\"></a>Publish</h1><p>右上有publish按鈕</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled8.png\" alt=\"Untitled8.png\"></p>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>右方有輸入框可以測試</p>\n<p>要用Chrome!!</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B/Untitled9.png\" alt=\"Untitled9.png\"></p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><h2 id=\"學習資源\"><a href=\"#學習資源\" class=\"headerlink\" title=\"學習資源\"></a>學習資源</h2><ul>\n<li><a href=\"https://sites.google.com/site/goofoo777/106_1-jiao-xue-ke-cheng/home-robot\">Home Robot / Zenbo (APP Builder / DDE Editor)</a></li>\n<li><a href=\"https://www.facebook.com/groups/zenbo.dev\">Zenbo機器人開發者社群</a></li>\n<li><a href=\"https://www.facebook.com/groups/zenbo.dev/permalink/1567101126726820\">分享_基於Zenbo語音的多機協作開發技術_ok</a></li>\n</ul>\n<h2 id=\"相關文獻\"><a href=\"#相關文獻\" class=\"headerlink\" title=\"相關文獻\"></a>相關文獻</h2><ul>\n<li><a href=\"https://www.books.com.tw/products/0010809325\">AI機器人、藍芽與Android整合開發技術</a><ul>\n<li>推這本書👍，裡面有介紹不同機器人間互動時程式設計的架構，還有 Zenbo SDK 的 Sample Code。可以寄信向作者高煥堂老師索取完整原始碼。</li>\n</ul>\n</li>\n<li><a href=\"https://www.csie.nuu.edu.tw/wp-content/uploads/2019/09/2018-%E7%8E%8B%E8%83%BD%E4%B8%AD-%E5%B0%88%E9%A1%8C.pdf\">智慧家庭陪伴系統 (專題)</a></li>\n<li><a href=\"https://hdl.handle.net/11296/x4x8c6\">銀髮族使用Zenbo機器人服務體驗洞察研究</a></li>\n<li><a href=\"https://www.airitilibrary.com/Publication/alDetailedMesh?DocID=23061790-201809-201810220006-201810220006-265-282\">陪伴型機器人使用者經驗評估─以智慧居家機器人Zenbo為例</a></li>\n</ul>"},{"title":"[Zenbo開發系列] 05-DDE回覆規則設計","date":"2021-08-07T07:52:45.000Z","_content":"\n這篇會寫如何設計 DDE 語料庫，還有 DDE 設計的邏輯。\n終於來到第五篇，這次截圖比較多，主要是我如何設定，直接看圖比文字說明清楚。\n\n# 在 ASUS 平台註冊 APP\n有完成這個步驟才能呼叫「嘿，Zenbo，我要用 `App name`」\n<!--more-->\n首先需要先建立一個 Android 專案，要特別注意 Package name 等下會用到，所以請盡量取個不會跟別人重複的。\n\n> 習慣上 Package name 會用公司會學校或學校的 domian 相反過來。\n> 例如: google.com -> com.google\n\n再來你還需要一個 ASUS 帳號，就可以在 [Console](https://zenbo.asus.com/developer/console/) 註冊自己的 APP。\n依序輸入打 * 號的幾個欄位，送出後可以看到生成好的 App ID 和 App Key。APP ID 會在設定 DDE 專案的地方用到。\n\n![console_config](console_config.png)\n\n# 建立 DDE 專案\n從這邊 [DDE Editor](https://zenbo.asus.com/developer/tools/ds-editor.jsp) 建立一個新的 Project。\n\n## 設定專案資訊\n點選畫面上方的 info 設定\n![info](info.png)\n![project_info](project_info.png)\n\n- **DDE Domain ID**: 如果是第一次使用，需要先註冊 (Register) 一個 DDE Domain ID，創建好點選 All 可以看到你所有的 DDE Domain 和相應的 UUID。UUID 之後在 Zenbo 端會用到。這個欄位是下拉式選單，記得選擇剛註冊的 Domain 哦。\n- **Developer App ID**: 要選擇前面註冊好 Package name 的那組，下面的三個欄位會自動跟著填滿。\n  - 確定 Developer App ID(App ID)、Package Name(Package Name)、Brand(Brand Name)、App Name(App Name) 和上一步驟一樣\n- **Launch Activity**: 填寫你 APP 首頁 Activity 完整的 package 路徑。\n- 剩下都預設就好~\n\n## 設計 DDE 規則\n各個 Basic Contexts 的說明可以看我的上一篇文章 [[Zenbo開發系列] 04-DDE簡介](../../07/Zenbo開發系列-04-DDE簡介)\n\n### 流程\n因為我做的是一個 Q&A 的聊天機器人，我希望使用使用者可以一直問完一題再問下一題，但是 Zenbo 一般問題流程會比較像樹狀結構，一條路走到底就結束了，沒辦法接下一題。\n\n所以我後來借用 Plans 的 Input/Output Contexts 參數達到可以一題接一題的效果。流程大致如下圖。\n\n![flow](flow.jpg)\n\n### Concepts\n把同樣概念的詞，做成一個個 Concepts，我截幾個作範例。\n\n![concepts1](concepts1.png)\n![concepts2](concepts2.png)\n\n- Concept ID: 這個 Concepts 的名稱，可以用中文。\n- Instances: 先不用建，等下在 Concept 有用到的時候再加就好。\n\n### Intents\n舉出一個「意圖」所有可能的說法。例如說，我今天想申請長照，就可以有很多種說法，「我要申請長照」、「申請長照」、「我想申請長照」、「如何申請長照」、「申請長照的流程」，盡可能把各種你想得到、想不到的講法都寫上去。\n\n> 官方文件:\n> 人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。\n\n![Intents1](Intents1.png)\n![Intents2](Intents2.png)\n\n圖中可以看到詞分種 3 種顏色，藍色、橘色、淺橘，代表不同的用意\n\n- 藍色\n一定要出現的常數，而且一定要相同。像 applyLTC 的第一個例句中\"我\"，如果輸入的句子中是\"你\"，就比對不到，一定要是\"我\"。\n可以在這裡建立新的 Concept，或是加入一個原有的 Concept\n![Intents3](Intents3.png)\n![Intents4](Intents4.png)\n\n- 橘色\n和 Concept 綁定的詞。\n\n- 淺橘\n和橘色一樣，但是 optional 的，代表輸入的句子中可以有也可以沒有這個詞。\n![Intents5](Intents5.png)\n\n### Plans\n介紹幾個會用到的欄位:\n- Input Context/Output Contexts: 舉例，如果這個 Plan 的 Input Context 是 \"A\"，那他會接在其他 Output Context 是 \"A\" 的 Plan 後面\n- Events: 是指要綁定哪個 Intent\n- Actions\n  - Condition: 可以設定一些條件，例如: 早上/晚上要說什麼? 晴天/雨天要說什麼?\n  - Task Type: Zenbo 要回應什麼內容。如果有多個 Task Type，會照順序唸，而不是隨機挑一個唸哦!\n    - 第二個欄位可以選擇 `Text` 或 `Reference`。Text 直接寫要回覆的內容。Reference 可對應到 TTS ID。\n\n首先，預設的這個 Plan `ThisPlanLaunchingThisApp`，在 Output Context 的地方填 `needAnyHelp`，再讓其他每一個 Plan 的 Input/Output Context 也都填 `needAnyHelp`，對話可以就能像這個流程圖一樣，一直迴圈。\n\n![input_output_contexts](input_output_contexts.jpg)\n> 圓角方形:\n> ```\n> Intent ID/Plan ID\n>   Intent 句子 \n> ```\n\n![Plans1](Plans1.png)\n![Plans2](Plans2.png)\n\n#### Graph\nDDE Editor 提供了方便的視覺化工具，可以查看 Plan 之間的關聯。\n\n![plan_graph](plan_graph.png)\n\n### TTS\n若有會重複使用的句子，可以寫到 TTS 重複利用哦。我只有一個 TTS，給大家參考。\n\n![TTS](TTS.png)\n\n# 發布 DDE\n先 Publish 再 Deploy To Download Server，Zenbo 端才能下載。之後 DDE 還有修改的話，記得要再 Publish 和 Deploy 一次唷。\n\n![publish](publish.png)\n\n# Tests\n基本上，上面的步驟做完就設定好了，接下來測試一下吧!\n右側的 Tests 區，可以測試剛剛設計的流程。要開始這個對話流程，需要使用 UtteranceToLanuchApp Intent 的句子。\n\n所以要先用「我要用靜宜大學長照機器人」，下一句才能用「我要申請長照」。\n選 All domains 或 Specified domains 都可以。\n\n![Test1](Test1.png)\n![Test2](Test2.png)","source":"_posts/Zenbo開發系列-05-DDE回覆規則設計.md","raw":"---\ntitle: '[Zenbo開發系列] 05-DDE回覆規則設計'\ndate: 2021-08-07 15:52:45\ntags:\n- Zenbo\n- DDE\n---\n\n這篇會寫如何設計 DDE 語料庫，還有 DDE 設計的邏輯。\n終於來到第五篇，這次截圖比較多，主要是我如何設定，直接看圖比文字說明清楚。\n\n# 在 ASUS 平台註冊 APP\n有完成這個步驟才能呼叫「嘿，Zenbo，我要用 `App name`」\n<!--more-->\n首先需要先建立一個 Android 專案，要特別注意 Package name 等下會用到，所以請盡量取個不會跟別人重複的。\n\n> 習慣上 Package name 會用公司會學校或學校的 domian 相反過來。\n> 例如: google.com -> com.google\n\n再來你還需要一個 ASUS 帳號，就可以在 [Console](https://zenbo.asus.com/developer/console/) 註冊自己的 APP。\n依序輸入打 * 號的幾個欄位，送出後可以看到生成好的 App ID 和 App Key。APP ID 會在設定 DDE 專案的地方用到。\n\n![console_config](console_config.png)\n\n# 建立 DDE 專案\n從這邊 [DDE Editor](https://zenbo.asus.com/developer/tools/ds-editor.jsp) 建立一個新的 Project。\n\n## 設定專案資訊\n點選畫面上方的 info 設定\n![info](info.png)\n![project_info](project_info.png)\n\n- **DDE Domain ID**: 如果是第一次使用，需要先註冊 (Register) 一個 DDE Domain ID，創建好點選 All 可以看到你所有的 DDE Domain 和相應的 UUID。UUID 之後在 Zenbo 端會用到。這個欄位是下拉式選單，記得選擇剛註冊的 Domain 哦。\n- **Developer App ID**: 要選擇前面註冊好 Package name 的那組，下面的三個欄位會自動跟著填滿。\n  - 確定 Developer App ID(App ID)、Package Name(Package Name)、Brand(Brand Name)、App Name(App Name) 和上一步驟一樣\n- **Launch Activity**: 填寫你 APP 首頁 Activity 完整的 package 路徑。\n- 剩下都預設就好~\n\n## 設計 DDE 規則\n各個 Basic Contexts 的說明可以看我的上一篇文章 [[Zenbo開發系列] 04-DDE簡介](../../07/Zenbo開發系列-04-DDE簡介)\n\n### 流程\n因為我做的是一個 Q&A 的聊天機器人，我希望使用使用者可以一直問完一題再問下一題，但是 Zenbo 一般問題流程會比較像樹狀結構，一條路走到底就結束了，沒辦法接下一題。\n\n所以我後來借用 Plans 的 Input/Output Contexts 參數達到可以一題接一題的效果。流程大致如下圖。\n\n![flow](flow.jpg)\n\n### Concepts\n把同樣概念的詞，做成一個個 Concepts，我截幾個作範例。\n\n![concepts1](concepts1.png)\n![concepts2](concepts2.png)\n\n- Concept ID: 這個 Concepts 的名稱，可以用中文。\n- Instances: 先不用建，等下在 Concept 有用到的時候再加就好。\n\n### Intents\n舉出一個「意圖」所有可能的說法。例如說，我今天想申請長照，就可以有很多種說法，「我要申請長照」、「申請長照」、「我想申請長照」、「如何申請長照」、「申請長照的流程」，盡可能把各種你想得到、想不到的講法都寫上去。\n\n> 官方文件:\n> 人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。\n\n![Intents1](Intents1.png)\n![Intents2](Intents2.png)\n\n圖中可以看到詞分種 3 種顏色，藍色、橘色、淺橘，代表不同的用意\n\n- 藍色\n一定要出現的常數，而且一定要相同。像 applyLTC 的第一個例句中\"我\"，如果輸入的句子中是\"你\"，就比對不到，一定要是\"我\"。\n可以在這裡建立新的 Concept，或是加入一個原有的 Concept\n![Intents3](Intents3.png)\n![Intents4](Intents4.png)\n\n- 橘色\n和 Concept 綁定的詞。\n\n- 淺橘\n和橘色一樣，但是 optional 的，代表輸入的句子中可以有也可以沒有這個詞。\n![Intents5](Intents5.png)\n\n### Plans\n介紹幾個會用到的欄位:\n- Input Context/Output Contexts: 舉例，如果這個 Plan 的 Input Context 是 \"A\"，那他會接在其他 Output Context 是 \"A\" 的 Plan 後面\n- Events: 是指要綁定哪個 Intent\n- Actions\n  - Condition: 可以設定一些條件，例如: 早上/晚上要說什麼? 晴天/雨天要說什麼?\n  - Task Type: Zenbo 要回應什麼內容。如果有多個 Task Type，會照順序唸，而不是隨機挑一個唸哦!\n    - 第二個欄位可以選擇 `Text` 或 `Reference`。Text 直接寫要回覆的內容。Reference 可對應到 TTS ID。\n\n首先，預設的這個 Plan `ThisPlanLaunchingThisApp`，在 Output Context 的地方填 `needAnyHelp`，再讓其他每一個 Plan 的 Input/Output Context 也都填 `needAnyHelp`，對話可以就能像這個流程圖一樣，一直迴圈。\n\n![input_output_contexts](input_output_contexts.jpg)\n> 圓角方形:\n> ```\n> Intent ID/Plan ID\n>   Intent 句子 \n> ```\n\n![Plans1](Plans1.png)\n![Plans2](Plans2.png)\n\n#### Graph\nDDE Editor 提供了方便的視覺化工具，可以查看 Plan 之間的關聯。\n\n![plan_graph](plan_graph.png)\n\n### TTS\n若有會重複使用的句子，可以寫到 TTS 重複利用哦。我只有一個 TTS，給大家參考。\n\n![TTS](TTS.png)\n\n# 發布 DDE\n先 Publish 再 Deploy To Download Server，Zenbo 端才能下載。之後 DDE 還有修改的話，記得要再 Publish 和 Deploy 一次唷。\n\n![publish](publish.png)\n\n# Tests\n基本上，上面的步驟做完就設定好了，接下來測試一下吧!\n右側的 Tests 區，可以測試剛剛設計的流程。要開始這個對話流程，需要使用 UtteranceToLanuchApp Intent 的句子。\n\n所以要先用「我要用靜宜大學長照機器人」，下一句才能用「我要申請長照」。\n選 All domains 或 Specified domains 都可以。\n\n![Test1](Test1.png)\n![Test2](Test2.png)","slug":"Zenbo開發系列-05-DDE回覆規則設計","published":1,"updated":"2021-08-09T18:42:39.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b4000g3nwbchwd8wk3","content":"<p>這篇會寫如何設計 DDE 語料庫，還有 DDE 設計的邏輯。<br>終於來到第五篇，這次截圖比較多，主要是我如何設定，直接看圖比文字說明清楚。</p>\n<h1 id=\"在-ASUS-平台註冊-APP\"><a href=\"#在-ASUS-平台註冊-APP\" class=\"headerlink\" title=\"在 ASUS 平台註冊 APP\"></a>在 ASUS 平台註冊 APP</h1><p>有完成這個步驟才能呼叫「嘿，Zenbo，我要用 <code>App name</code>」</p>\n<span id=\"more\"></span>\n<p>首先需要先建立一個 Android 專案，要特別注意 Package name 等下會用到，所以請盡量取個不會跟別人重複的。</p>\n<blockquote>\n<p>習慣上 Package name 會用公司會學校或學校的 domian 相反過來。<br>例如: google.com -&gt; com.google</p>\n</blockquote>\n<p>再來你還需要一個 ASUS 帳號，就可以在 <a href=\"https://zenbo.asus.com/developer/console/\">Console</a> 註冊自己的 APP。<br>依序輸入打 * 號的幾個欄位，送出後可以看到生成好的 App ID 和 App Key。APP ID 會在設定 DDE 專案的地方用到。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/console_config.png\" alt=\"console_config\"></p>\n<h1 id=\"建立-DDE-專案\"><a href=\"#建立-DDE-專案\" class=\"headerlink\" title=\"建立 DDE 專案\"></a>建立 DDE 專案</h1><p>從這邊 <a href=\"https://zenbo.asus.com/developer/tools/ds-editor.jsp\">DDE Editor</a> 建立一個新的 Project。</p>\n<h2 id=\"設定專案資訊\"><a href=\"#設定專案資訊\" class=\"headerlink\" title=\"設定專案資訊\"></a>設定專案資訊</h2><p>點選畫面上方的 info 設定<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/info.png\" alt=\"info\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/project_info.png\" alt=\"project_info\"></p>\n<ul>\n<li><strong>DDE Domain ID</strong>: 如果是第一次使用，需要先註冊 (Register) 一個 DDE Domain ID，創建好點選 All 可以看到你所有的 DDE Domain 和相應的 UUID。UUID 之後在 Zenbo 端會用到。這個欄位是下拉式選單，記得選擇剛註冊的 Domain 哦。</li>\n<li><strong>Developer App ID</strong>: 要選擇前面註冊好 Package name 的那組，下面的三個欄位會自動跟著填滿。<ul>\n<li>確定 Developer App ID(App ID)、Package Name(Package Name)、Brand(Brand Name)、App Name(App Name) 和上一步驟一樣</li>\n</ul>\n</li>\n<li><strong>Launch Activity</strong>: 填寫你 APP 首頁 Activity 完整的 package 路徑。</li>\n<li>剩下都預設就好~</li>\n</ul>\n<h2 id=\"設計-DDE-規則\"><a href=\"#設計-DDE-規則\" class=\"headerlink\" title=\"設計 DDE 規則\"></a>設計 DDE 規則</h2><p>各個 Basic Contexts 的說明可以看我的上一篇文章 <a href=\"../../07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B\">[Zenbo開發系列] 04-DDE簡介</a></p>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p>因為我做的是一個 Q&amp;A 的聊天機器人，我希望使用使用者可以一直問完一題再問下一題，但是 Zenbo 一般問題流程會比較像樹狀結構，一條路走到底就結束了，沒辦法接下一題。</p>\n<p>所以我後來借用 Plans 的 Input/Output Contexts 參數達到可以一題接一題的效果。流程大致如下圖。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/flow.jpg\" alt=\"flow\"></p>\n<h3 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h3><p>把同樣概念的詞，做成一個個 Concepts，我截幾個作範例。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/concepts1.png\" alt=\"concepts1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/concepts2.png\" alt=\"concepts2\"></p>\n<ul>\n<li>Concept ID: 這個 Concepts 的名稱，可以用中文。</li>\n<li>Instances: 先不用建，等下在 Concept 有用到的時候再加就好。</li>\n</ul>\n<h3 id=\"Intents\"><a href=\"#Intents\" class=\"headerlink\" title=\"Intents\"></a>Intents</h3><p>舉出一個「意圖」所有可能的說法。例如說，我今天想申請長照，就可以有很多種說法，「我要申請長照」、「申請長照」、「我想申請長照」、「如何申請長照」、「申請長照的流程」，盡可能把各種你想得到、想不到的講法都寫上去。</p>\n<blockquote>\n<p>官方文件:<br>人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。</p>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents1.png\" alt=\"Intents1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents2.png\" alt=\"Intents2\"></p>\n<p>圖中可以看到詞分種 3 種顏色，藍色、橘色、淺橘，代表不同的用意</p>\n<ul>\n<li><p>藍色<br>一定要出現的常數，而且一定要相同。像 applyLTC 的第一個例句中”我”，如果輸入的句子中是”你”，就比對不到，一定要是”我”。<br>可以在這裡建立新的 Concept，或是加入一個原有的 Concept<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents3.png\" alt=\"Intents3\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents4.png\" alt=\"Intents4\"></p>\n</li>\n<li><p>橘色<br>和 Concept 綁定的詞。</p>\n</li>\n<li><p>淺橘<br>和橘色一樣，但是 optional 的，代表輸入的句子中可以有也可以沒有這個詞。<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents5.png\" alt=\"Intents5\"></p>\n</li>\n</ul>\n<h3 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h3><p>介紹幾個會用到的欄位:</p>\n<ul>\n<li>Input Context/Output Contexts: 舉例，如果這個 Plan 的 Input Context 是 “A”，那他會接在其他 Output Context 是 “A” 的 Plan 後面</li>\n<li>Events: 是指要綁定哪個 Intent</li>\n<li>Actions<ul>\n<li>Condition: 可以設定一些條件，例如: 早上/晚上要說什麼? 晴天/雨天要說什麼?</li>\n<li>Task Type: Zenbo 要回應什麼內容。如果有多個 Task Type，會照順序唸，而不是隨機挑一個唸哦!<ul>\n<li>第二個欄位可以選擇 <code>Text</code> 或 <code>Reference</code>。Text 直接寫要回覆的內容。Reference 可對應到 TTS ID。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>首先，預設的這個 Plan <code>ThisPlanLaunchingThisApp</code>，在 Output Context 的地方填 <code>needAnyHelp</code>，再讓其他每一個 Plan 的 Input/Output Context 也都填 <code>needAnyHelp</code>，對話可以就能像這個流程圖一樣，一直迴圈。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/input_output_contexts.jpg\" alt=\"input_output_contexts\"></p>\n<blockquote>\n<p>圓角方形:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intent ID&#x2F;Plan ID</span><br><span class=\"line\">  Intent 句子 </span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Plans1.png\" alt=\"Plans1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Plans2.png\" alt=\"Plans2\"></p>\n<h4 id=\"Graph\"><a href=\"#Graph\" class=\"headerlink\" title=\"Graph\"></a>Graph</h4><p>DDE Editor 提供了方便的視覺化工具，可以查看 Plan 之間的關聯。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/plan_graph.png\" alt=\"plan_graph\"></p>\n<h3 id=\"TTS\"><a href=\"#TTS\" class=\"headerlink\" title=\"TTS\"></a>TTS</h3><p>若有會重複使用的句子，可以寫到 TTS 重複利用哦。我只有一個 TTS，給大家參考。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/TTS.png\" alt=\"TTS\"></p>\n<h1 id=\"發布-DDE\"><a href=\"#發布-DDE\" class=\"headerlink\" title=\"發布 DDE\"></a>發布 DDE</h1><p>先 Publish 再 Deploy To Download Server，Zenbo 端才能下載。之後 DDE 還有修改的話，記得要再 Publish 和 Deploy 一次唷。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/publish.png\" alt=\"publish\"></p>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>基本上，上面的步驟做完就設定好了，接下來測試一下吧!<br>右側的 Tests 區，可以測試剛剛設計的流程。要開始這個對話流程，需要使用 UtteranceToLanuchApp Intent 的句子。</p>\n<p>所以要先用「我要用靜宜大學長照機器人」，下一句才能用「我要申請長照」。<br>選 All domains 或 Specified domains 都可以。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Test1.png\" alt=\"Test1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Test2.png\" alt=\"Test2\"></p>\n","site":{"data":{}},"excerpt":"<p>這篇會寫如何設計 DDE 語料庫，還有 DDE 設計的邏輯。<br>終於來到第五篇，這次截圖比較多，主要是我如何設定，直接看圖比文字說明清楚。</p>\n<h1 id=\"在-ASUS-平台註冊-APP\"><a href=\"#在-ASUS-平台註冊-APP\" class=\"headerlink\" title=\"在 ASUS 平台註冊 APP\"></a>在 ASUS 平台註冊 APP</h1><p>有完成這個步驟才能呼叫「嘿，Zenbo，我要用 <code>App name</code>」</p>","more":"<p>首先需要先建立一個 Android 專案，要特別注意 Package name 等下會用到，所以請盡量取個不會跟別人重複的。</p>\n<blockquote>\n<p>習慣上 Package name 會用公司會學校或學校的 domian 相反過來。<br>例如: google.com -&gt; com.google</p>\n</blockquote>\n<p>再來你還需要一個 ASUS 帳號，就可以在 <a href=\"https://zenbo.asus.com/developer/console/\">Console</a> 註冊自己的 APP。<br>依序輸入打 * 號的幾個欄位，送出後可以看到生成好的 App ID 和 App Key。APP ID 會在設定 DDE 專案的地方用到。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/console_config.png\" alt=\"console_config\"></p>\n<h1 id=\"建立-DDE-專案\"><a href=\"#建立-DDE-專案\" class=\"headerlink\" title=\"建立 DDE 專案\"></a>建立 DDE 專案</h1><p>從這邊 <a href=\"https://zenbo.asus.com/developer/tools/ds-editor.jsp\">DDE Editor</a> 建立一個新的 Project。</p>\n<h2 id=\"設定專案資訊\"><a href=\"#設定專案資訊\" class=\"headerlink\" title=\"設定專案資訊\"></a>設定專案資訊</h2><p>點選畫面上方的 info 設定<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/info.png\" alt=\"info\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/project_info.png\" alt=\"project_info\"></p>\n<ul>\n<li><strong>DDE Domain ID</strong>: 如果是第一次使用，需要先註冊 (Register) 一個 DDE Domain ID，創建好點選 All 可以看到你所有的 DDE Domain 和相應的 UUID。UUID 之後在 Zenbo 端會用到。這個欄位是下拉式選單，記得選擇剛註冊的 Domain 哦。</li>\n<li><strong>Developer App ID</strong>: 要選擇前面註冊好 Package name 的那組，下面的三個欄位會自動跟著填滿。<ul>\n<li>確定 Developer App ID(App ID)、Package Name(Package Name)、Brand(Brand Name)、App Name(App Name) 和上一步驟一樣</li>\n</ul>\n</li>\n<li><strong>Launch Activity</strong>: 填寫你 APP 首頁 Activity 完整的 package 路徑。</li>\n<li>剩下都預設就好~</li>\n</ul>\n<h2 id=\"設計-DDE-規則\"><a href=\"#設計-DDE-規則\" class=\"headerlink\" title=\"設計 DDE 規則\"></a>設計 DDE 規則</h2><p>各個 Basic Contexts 的說明可以看我的上一篇文章 <a href=\"../../07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-04-DDE%E7%B0%A1%E4%BB%8B\">[Zenbo開發系列] 04-DDE簡介</a></p>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p>因為我做的是一個 Q&amp;A 的聊天機器人，我希望使用使用者可以一直問完一題再問下一題，但是 Zenbo 一般問題流程會比較像樹狀結構，一條路走到底就結束了，沒辦法接下一題。</p>\n<p>所以我後來借用 Plans 的 Input/Output Contexts 參數達到可以一題接一題的效果。流程大致如下圖。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/flow.jpg\" alt=\"flow\"></p>\n<h3 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h3><p>把同樣概念的詞，做成一個個 Concepts，我截幾個作範例。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/concepts1.png\" alt=\"concepts1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/concepts2.png\" alt=\"concepts2\"></p>\n<ul>\n<li>Concept ID: 這個 Concepts 的名稱，可以用中文。</li>\n<li>Instances: 先不用建，等下在 Concept 有用到的時候再加就好。</li>\n</ul>\n<h3 id=\"Intents\"><a href=\"#Intents\" class=\"headerlink\" title=\"Intents\"></a>Intents</h3><p>舉出一個「意圖」所有可能的說法。例如說，我今天想申請長照，就可以有很多種說法，「我要申請長照」、「申請長照」、「我想申請長照」、「如何申請長照」、「申請長照的流程」，盡可能把各種你想得到、想不到的講法都寫上去。</p>\n<blockquote>\n<p>官方文件:<br>人們可能使用不同句子來表達自己的意圖，因此開發人員有責任枚舉所有可能的句子。</p>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents1.png\" alt=\"Intents1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents2.png\" alt=\"Intents2\"></p>\n<p>圖中可以看到詞分種 3 種顏色，藍色、橘色、淺橘，代表不同的用意</p>\n<ul>\n<li><p>藍色<br>一定要出現的常數，而且一定要相同。像 applyLTC 的第一個例句中”我”，如果輸入的句子中是”你”，就比對不到，一定要是”我”。<br>可以在這裡建立新的 Concept，或是加入一個原有的 Concept<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents3.png\" alt=\"Intents3\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents4.png\" alt=\"Intents4\"></p>\n</li>\n<li><p>橘色<br>和 Concept 綁定的詞。</p>\n</li>\n<li><p>淺橘<br>和橘色一樣，但是 optional 的，代表輸入的句子中可以有也可以沒有這個詞。<br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Intents5.png\" alt=\"Intents5\"></p>\n</li>\n</ul>\n<h3 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h3><p>介紹幾個會用到的欄位:</p>\n<ul>\n<li>Input Context/Output Contexts: 舉例，如果這個 Plan 的 Input Context 是 “A”，那他會接在其他 Output Context 是 “A” 的 Plan 後面</li>\n<li>Events: 是指要綁定哪個 Intent</li>\n<li>Actions<ul>\n<li>Condition: 可以設定一些條件，例如: 早上/晚上要說什麼? 晴天/雨天要說什麼?</li>\n<li>Task Type: Zenbo 要回應什麼內容。如果有多個 Task Type，會照順序唸，而不是隨機挑一個唸哦!<ul>\n<li>第二個欄位可以選擇 <code>Text</code> 或 <code>Reference</code>。Text 直接寫要回覆的內容。Reference 可對應到 TTS ID。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>首先，預設的這個 Plan <code>ThisPlanLaunchingThisApp</code>，在 Output Context 的地方填 <code>needAnyHelp</code>，再讓其他每一個 Plan 的 Input/Output Context 也都填 <code>needAnyHelp</code>，對話可以就能像這個流程圖一樣，一直迴圈。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/input_output_contexts.jpg\" alt=\"input_output_contexts\"></p>\n<blockquote>\n<p>圓角方形:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intent ID&#x2F;Plan ID</span><br><span class=\"line\">  Intent 句子 </span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Plans1.png\" alt=\"Plans1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Plans2.png\" alt=\"Plans2\"></p>\n<h4 id=\"Graph\"><a href=\"#Graph\" class=\"headerlink\" title=\"Graph\"></a>Graph</h4><p>DDE Editor 提供了方便的視覺化工具，可以查看 Plan 之間的關聯。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/plan_graph.png\" alt=\"plan_graph\"></p>\n<h3 id=\"TTS\"><a href=\"#TTS\" class=\"headerlink\" title=\"TTS\"></a>TTS</h3><p>若有會重複使用的句子，可以寫到 TTS 重複利用哦。我只有一個 TTS，給大家參考。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/TTS.png\" alt=\"TTS\"></p>\n<h1 id=\"發布-DDE\"><a href=\"#發布-DDE\" class=\"headerlink\" title=\"發布 DDE\"></a>發布 DDE</h1><p>先 Publish 再 Deploy To Download Server，Zenbo 端才能下載。之後 DDE 還有修改的話，記得要再 Publish 和 Deploy 一次唷。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/publish.png\" alt=\"publish\"></p>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>基本上，上面的步驟做完就設定好了，接下來測試一下吧!<br>右側的 Tests 區，可以測試剛剛設計的流程。要開始這個對話流程，需要使用 UtteranceToLanuchApp Intent 的句子。</p>\n<p>所以要先用「我要用靜宜大學長照機器人」，下一句才能用「我要申請長照」。<br>選 All domains 或 Specified domains 都可以。</p>\n<p><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Test1.png\" alt=\"Test1\"><br><img src=\"/2021/08/07/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-05-DDE%E5%9B%9E%E8%A6%86%E8%A6%8F%E5%89%87%E8%A8%AD%E8%A8%88/Test2.png\" alt=\"Test2\"></p>"},{"title":"[Zenbo開發系列] 07-DDE與App Builder","date":"2021-08-10T08:42:53.000Z","_content":"\n研究過程中，要把 DDE 安裝到 Zenbo 的時候，卡關超久...🙃\n試過好多方法，當然也包括 App Builder (下面簡稱 AB)。AB 就是像 App Inventor 或 Scrach 的積木程式，可以讓小朋友玩，訓練邏輯。可能是身為 Android 工程師的堅持(?)，本來很抗拒使用積木程式的，但實在卡關太久了，隨便啦，就試試看吧!\n<!-- more -->\n\n先說結論，AB 不適合我的使用情境，因為我題庫很多，一個個建積木太累，也很占版面，不好維護。但如果你的對話不多或有比較複雜的槽狀判斷，我會覺得用積木會比在 DDE Input/Output Context 設計，看起來更清楚。\n\n# 註冊專案\nDeveloper > Console > App Management\n要選 App Builder 哦！\n得到的 APP ID，等下要用。\n![project_register](project_register.jpg)\n\n# DDE 語料建置\n\n這部份請參考前面的文章，就不再多說明了。\n\nConcepts 和 Intents 的內容都跟前面要搭配 Zenbo SDK 裝到 Zenbo 的時候一樣，只有 Plans 有點不同。\n除了 `ThisPlanLaunchingThisApp` 不用 Input Context 以外，每個 Plan 的 Input Context 都要是不同的字串。Action 不用填，用不到，要回覆的內容寫在 AB 那邊。\n\n## 設定參考\n\n### Info\n設定方式參考前面的文章。建立一個新的 Domain UUID。Domain UUID 等下要用。\n![info](info.png)\n\n### Plans\n![plans1](plans1.png)\n![plans2](plans2.png)\n![plans3](plans3.png)\n\n# App Builder 專案建置\n打開 [App Builder](https://zenbo.asus.com/developer/tools/app-builder.jsp) 建立一個新專案。\n彈個手指！就好啦～\n\n![AB](AB.png)\n\n放大圖:\n![AB1](AB1.png)\n![AB2](AB2.png)\n![AB3](AB3.png)\n> 因為沒辦法只放圖片，它一定要搭配 Music Sorce，所以就隨便挑一個音樂，音量填 0 就好。\n![AB4](AB4.png)\n\n## 專案儲存\n![save](save.jpg)\nAPP ID 和 Domain UUID 在上面註冊專案和 Info 的時候都建好了，複製貼上。\n\n# 安裝\n專案儲存後，會得到 ZBA 檔，可以想成是 APK，就是 App 的安裝檔。\n可以使用任何方式，只要你能把 ZBA 傳到 Zenbo，影片中我使用的是雲端硬碟。\n\n{% youtube 5J5_-64-Foo %}\n\n## 更新語料(DS Tools)\n安裝的時候就會更新一次了，如果 DDE 有修改可以再來這邊更新一次。\n\n{% youtube Qko4bVNGnl4 %}\n","source":"_posts/Zenbo開發系列-07-DDE與App-Builder.md","raw":"---\ntitle: '[Zenbo開發系列] 07-DDE與App Builder'\ndate: 2021-08-10 16:42:53\ntags:\n- Zenbo\n- DDE\n- 聊天機器人\n---\n\n研究過程中，要把 DDE 安裝到 Zenbo 的時候，卡關超久...🙃\n試過好多方法，當然也包括 App Builder (下面簡稱 AB)。AB 就是像 App Inventor 或 Scrach 的積木程式，可以讓小朋友玩，訓練邏輯。可能是身為 Android 工程師的堅持(?)，本來很抗拒使用積木程式的，但實在卡關太久了，隨便啦，就試試看吧!\n<!-- more -->\n\n先說結論，AB 不適合我的使用情境，因為我題庫很多，一個個建積木太累，也很占版面，不好維護。但如果你的對話不多或有比較複雜的槽狀判斷，我會覺得用積木會比在 DDE Input/Output Context 設計，看起來更清楚。\n\n# 註冊專案\nDeveloper > Console > App Management\n要選 App Builder 哦！\n得到的 APP ID，等下要用。\n![project_register](project_register.jpg)\n\n# DDE 語料建置\n\n這部份請參考前面的文章，就不再多說明了。\n\nConcepts 和 Intents 的內容都跟前面要搭配 Zenbo SDK 裝到 Zenbo 的時候一樣，只有 Plans 有點不同。\n除了 `ThisPlanLaunchingThisApp` 不用 Input Context 以外，每個 Plan 的 Input Context 都要是不同的字串。Action 不用填，用不到，要回覆的內容寫在 AB 那邊。\n\n## 設定參考\n\n### Info\n設定方式參考前面的文章。建立一個新的 Domain UUID。Domain UUID 等下要用。\n![info](info.png)\n\n### Plans\n![plans1](plans1.png)\n![plans2](plans2.png)\n![plans3](plans3.png)\n\n# App Builder 專案建置\n打開 [App Builder](https://zenbo.asus.com/developer/tools/app-builder.jsp) 建立一個新專案。\n彈個手指！就好啦～\n\n![AB](AB.png)\n\n放大圖:\n![AB1](AB1.png)\n![AB2](AB2.png)\n![AB3](AB3.png)\n> 因為沒辦法只放圖片，它一定要搭配 Music Sorce，所以就隨便挑一個音樂，音量填 0 就好。\n![AB4](AB4.png)\n\n## 專案儲存\n![save](save.jpg)\nAPP ID 和 Domain UUID 在上面註冊專案和 Info 的時候都建好了，複製貼上。\n\n# 安裝\n專案儲存後，會得到 ZBA 檔，可以想成是 APK，就是 App 的安裝檔。\n可以使用任何方式，只要你能把 ZBA 傳到 Zenbo，影片中我使用的是雲端硬碟。\n\n{% youtube 5J5_-64-Foo %}\n\n## 更新語料(DS Tools)\n安裝的時候就會更新一次了，如果 DDE 有修改可以再來這邊更新一次。\n\n{% youtube Qko4bVNGnl4 %}\n","slug":"Zenbo開發系列-07-DDE與App-Builder","published":1,"updated":"2021-08-27T16:29:26.841Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b5000i3nwb6wtefyyx","content":"<p>研究過程中，要把 DDE 安裝到 Zenbo 的時候，卡關超久…🙃<br>試過好多方法，當然也包括 App Builder (下面簡稱 AB)。AB 就是像 App Inventor 或 Scrach 的積木程式，可以讓小朋友玩，訓練邏輯。可能是身為 Android 工程師的堅持(?)，本來很抗拒使用積木程式的，但實在卡關太久了，隨便啦，就試試看吧!</p>\n<span id=\"more\"></span>\n\n<p>先說結論，AB 不適合我的使用情境，因為我題庫很多，一個個建積木太累，也很占版面，不好維護。但如果你的對話不多或有比較複雜的槽狀判斷，我會覺得用積木會比在 DDE Input/Output Context 設計，看起來更清楚。</p>\n<h1 id=\"註冊專案\"><a href=\"#註冊專案\" class=\"headerlink\" title=\"註冊專案\"></a>註冊專案</h1><p>Developer &gt; Console &gt; App Management<br>要選 App Builder 哦！<br>得到的 APP ID，等下要用。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/project_register.jpg\" alt=\"project_register\"></p>\n<h1 id=\"DDE-語料建置\"><a href=\"#DDE-語料建置\" class=\"headerlink\" title=\"DDE 語料建置\"></a>DDE 語料建置</h1><p>這部份請參考前面的文章，就不再多說明了。</p>\n<p>Concepts 和 Intents 的內容都跟前面要搭配 Zenbo SDK 裝到 Zenbo 的時候一樣，只有 Plans 有點不同。<br>除了 <code>ThisPlanLaunchingThisApp</code> 不用 Input Context 以外，每個 Plan 的 Input Context 都要是不同的字串。Action 不用填，用不到，要回覆的內容寫在 AB 那邊。</p>\n<h2 id=\"設定參考\"><a href=\"#設定參考\" class=\"headerlink\" title=\"設定參考\"></a>設定參考</h2><h3 id=\"Info\"><a href=\"#Info\" class=\"headerlink\" title=\"Info\"></a>Info</h3><p>設定方式參考前面的文章。建立一個新的 Domain UUID。Domain UUID 等下要用。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/info.png\" alt=\"info\"></p>\n<h3 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h3><p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans1.png\" alt=\"plans1\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans2.png\" alt=\"plans2\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans3.png\" alt=\"plans3\"></p>\n<h1 id=\"App-Builder-專案建置\"><a href=\"#App-Builder-專案建置\" class=\"headerlink\" title=\"App Builder 專案建置\"></a>App Builder 專案建置</h1><p>打開 <a href=\"https://zenbo.asus.com/developer/tools/app-builder.jsp\">App Builder</a> 建立一個新專案。<br>彈個手指！就好啦～</p>\n<p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB.png\" alt=\"AB\"></p>\n<p>放大圖:<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB1.png\" alt=\"AB1\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB2.png\" alt=\"AB2\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB3.png\" alt=\"AB3\"></p>\n<blockquote>\n<p>因為沒辦法只放圖片，它一定要搭配 Music Sorce，所以就隨便挑一個音樂，音量填 0 就好。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB4.png\" alt=\"AB4\"></p>\n</blockquote>\n<h2 id=\"專案儲存\"><a href=\"#專案儲存\" class=\"headerlink\" title=\"專案儲存\"></a>專案儲存</h2><p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/save.jpg\" alt=\"save\"><br>APP ID 和 Domain UUID 在上面註冊專案和 Info 的時候都建好了，複製貼上。</p>\n<h1 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h1><p>專案儲存後，會得到 ZBA 檔，可以想成是 APK，就是 App 的安裝檔。<br>可以使用任何方式，只要你能把 ZBA 傳到 Zenbo，影片中我使用的是雲端硬碟。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/5J5_-64-Foo\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<h2 id=\"更新語料-DS-Tools\"><a href=\"#更新語料-DS-Tools\" class=\"headerlink\" title=\"更新語料(DS Tools)\"></a>更新語料(DS Tools)</h2><p>安裝的時候就會更新一次了，如果 DDE 有修改可以再來這邊更新一次。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Qko4bVNGnl4\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n","site":{"data":{}},"excerpt":"<p>研究過程中，要把 DDE 安裝到 Zenbo 的時候，卡關超久…🙃<br>試過好多方法，當然也包括 App Builder (下面簡稱 AB)。AB 就是像 App Inventor 或 Scrach 的積木程式，可以讓小朋友玩，訓練邏輯。可能是身為 Android 工程師的堅持(?)，本來很抗拒使用積木程式的，但實在卡關太久了，隨便啦，就試試看吧!</p>","more":"<p>先說結論，AB 不適合我的使用情境，因為我題庫很多，一個個建積木太累，也很占版面，不好維護。但如果你的對話不多或有比較複雜的槽狀判斷，我會覺得用積木會比在 DDE Input/Output Context 設計，看起來更清楚。</p>\n<h1 id=\"註冊專案\"><a href=\"#註冊專案\" class=\"headerlink\" title=\"註冊專案\"></a>註冊專案</h1><p>Developer &gt; Console &gt; App Management<br>要選 App Builder 哦！<br>得到的 APP ID，等下要用。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/project_register.jpg\" alt=\"project_register\"></p>\n<h1 id=\"DDE-語料建置\"><a href=\"#DDE-語料建置\" class=\"headerlink\" title=\"DDE 語料建置\"></a>DDE 語料建置</h1><p>這部份請參考前面的文章，就不再多說明了。</p>\n<p>Concepts 和 Intents 的內容都跟前面要搭配 Zenbo SDK 裝到 Zenbo 的時候一樣，只有 Plans 有點不同。<br>除了 <code>ThisPlanLaunchingThisApp</code> 不用 Input Context 以外，每個 Plan 的 Input Context 都要是不同的字串。Action 不用填，用不到，要回覆的內容寫在 AB 那邊。</p>\n<h2 id=\"設定參考\"><a href=\"#設定參考\" class=\"headerlink\" title=\"設定參考\"></a>設定參考</h2><h3 id=\"Info\"><a href=\"#Info\" class=\"headerlink\" title=\"Info\"></a>Info</h3><p>設定方式參考前面的文章。建立一個新的 Domain UUID。Domain UUID 等下要用。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/info.png\" alt=\"info\"></p>\n<h3 id=\"Plans\"><a href=\"#Plans\" class=\"headerlink\" title=\"Plans\"></a>Plans</h3><p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans1.png\" alt=\"plans1\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans2.png\" alt=\"plans2\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/plans3.png\" alt=\"plans3\"></p>\n<h1 id=\"App-Builder-專案建置\"><a href=\"#App-Builder-專案建置\" class=\"headerlink\" title=\"App Builder 專案建置\"></a>App Builder 專案建置</h1><p>打開 <a href=\"https://zenbo.asus.com/developer/tools/app-builder.jsp\">App Builder</a> 建立一個新專案。<br>彈個手指！就好啦～</p>\n<p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB.png\" alt=\"AB\"></p>\n<p>放大圖:<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB1.png\" alt=\"AB1\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB2.png\" alt=\"AB2\"><br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB3.png\" alt=\"AB3\"></p>\n<blockquote>\n<p>因為沒辦法只放圖片，它一定要搭配 Music Sorce，所以就隨便挑一個音樂，音量填 0 就好。<br><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/AB4.png\" alt=\"AB4\"></p>\n</blockquote>\n<h2 id=\"專案儲存\"><a href=\"#專案儲存\" class=\"headerlink\" title=\"專案儲存\"></a>專案儲存</h2><p><img src=\"/2021/08/10/Zenbo%E9%96%8B%E7%99%BC%E7%B3%BB%E5%88%97-07-DDE%E8%88%87App-Builder/save.jpg\" alt=\"save\"><br>APP ID 和 Domain UUID 在上面註冊專案和 Info 的時候都建好了，複製貼上。</p>\n<h1 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h1><p>專案儲存後，會得到 ZBA 檔，可以想成是 APK，就是 App 的安裝檔。<br>可以使用任何方式，只要你能把 ZBA 傳到 Zenbo，影片中我使用的是雲端硬碟。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/5J5_-64-Foo\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n\n<h2 id=\"更新語料-DS-Tools\"><a href=\"#更新語料-DS-Tools\" class=\"headerlink\" title=\"更新語料(DS Tools)\"></a>更新語料(DS Tools)</h2><p>安裝的時候就會更新一次了，如果 DDE 有修改可以再來這邊更新一次。</p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Qko4bVNGnl4\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>"},{"title":"按鈕監聽器","date":"2017-08-30T07:38:34.000Z","_content":"\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=341](https://blog.cmrdb.cs.pu.edu.tw/?p=341)\n\n雖然上次介紹了Kotlin，但目前開發Android大部分還是以Java為主，今天就要教大家用程式碼控制TextView的文字內容，主要是介紹按鈕(Button)的監聽器(Listener)控制。\n<!-- more -->\n\n# 監聽器\n常見的監聽器有幾個 \n> 之間差別可以參考 : http://blog.csdn.net/eclipsexys/article/details/8785149 \n\n- `OnClickListener` (點擊) : 在手指**按下再放開**後才執行\n- `OnLongClickListener` (長按) : 手指按住不放時執行\n- `OnTouchListener` (觸碰) : 手指一碰到按鈕就執行，與OnClick不同的是不需等到手指放開\n\n# 建立專案\n首先建立一個新專案( [可以參考上次的文章](http://blog.cmrdb.cs.pu.edu.tw/?p=291) )\n\n# 排版\n在畫面上新增一個TextView、一個Button\n![image](image.png) \n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    tools:context=\"com.example.yr.helloworld.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"30dp\"\n        android:text=\"TextView\" />\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"horizontal\">\n\n        <Button\n            android:id=\"@+id/btn\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_weight=\"1\"\n            android:text=\"Button\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n# 程式碼\n\n1. 宣告 \n```java \nButton btn;\nTextView txv;\n```\n\n1. 與畫面物件配對\n```java\nbtn = (Button) findViewById(R.id.btn);\ntxv = (TextView) findViewById(R.id.textView);\n```\n\n1. 設置OnClick監聽器\n```java\nbtn.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View view) {\n        txv.setText(\"OnClick\");\n    }\n});\n```\n\n1. 設置OnLongClick監聽器\n```java \nbtn.setOnLongClickListener(new View.OnLongClickListener() {\n    @Override\n    public boolean onLongClick(View view) {\n        txv.setText(\"OnLongClick\");\n            return false;\n    }\n});\n```\n\n1. 設置OnTouch監聽器\n```java\nbtn.setOnTouchListener(new View.OnTouchListener() {\n    @Override\n    public boolean onTouch(View view, MotionEvent motionEvent) {\n        txv.setText(\"OnTouch\");\n            return false;\n    }\n});\n```\n\n# 完整程式碼\n\n```java\npackage com.example.yr.helloworld;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    Button btn;\n    TextView txv;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        btn = (Button) findViewById(R.id.btn);\n        txv = (TextView) findViewById(R.id.textView);\n\n        btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                txv.setText(\"OnClick\");\n            }\n        });\n\n        btn.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View view) {\n                txv.setText(\"OnLongClick\");\n                return false;\n            }\n        });\n\n        btn.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View view, MotionEvent motionEvent) {\n                txv.setText(\"OnTouch\");\n                return false;\n            }\n        });\n    }\n}\n```\n","source":"_posts/按鈕監聽器.md","raw":"---\ntitle: 按鈕監聽器\ndate: 2017-08-30 15:38:34\ntags:\n- Android\n- 監聽器\n- 行雲部落格\n---\n\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=341](https://blog.cmrdb.cs.pu.edu.tw/?p=341)\n\n雖然上次介紹了Kotlin，但目前開發Android大部分還是以Java為主，今天就要教大家用程式碼控制TextView的文字內容，主要是介紹按鈕(Button)的監聽器(Listener)控制。\n<!-- more -->\n\n# 監聽器\n常見的監聽器有幾個 \n> 之間差別可以參考 : http://blog.csdn.net/eclipsexys/article/details/8785149 \n\n- `OnClickListener` (點擊) : 在手指**按下再放開**後才執行\n- `OnLongClickListener` (長按) : 手指按住不放時執行\n- `OnTouchListener` (觸碰) : 手指一碰到按鈕就執行，與OnClick不同的是不需等到手指放開\n\n# 建立專案\n首先建立一個新專案( [可以參考上次的文章](http://blog.cmrdb.cs.pu.edu.tw/?p=291) )\n\n# 排版\n在畫面上新增一個TextView、一個Button\n![image](image.png) \n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    tools:context=\"com.example.yr.helloworld.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"30dp\"\n        android:text=\"TextView\" />\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"horizontal\">\n\n        <Button\n            android:id=\"@+id/btn\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_weight=\"1\"\n            android:text=\"Button\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n# 程式碼\n\n1. 宣告 \n```java \nButton btn;\nTextView txv;\n```\n\n1. 與畫面物件配對\n```java\nbtn = (Button) findViewById(R.id.btn);\ntxv = (TextView) findViewById(R.id.textView);\n```\n\n1. 設置OnClick監聽器\n```java\nbtn.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View view) {\n        txv.setText(\"OnClick\");\n    }\n});\n```\n\n1. 設置OnLongClick監聽器\n```java \nbtn.setOnLongClickListener(new View.OnLongClickListener() {\n    @Override\n    public boolean onLongClick(View view) {\n        txv.setText(\"OnLongClick\");\n            return false;\n    }\n});\n```\n\n1. 設置OnTouch監聽器\n```java\nbtn.setOnTouchListener(new View.OnTouchListener() {\n    @Override\n    public boolean onTouch(View view, MotionEvent motionEvent) {\n        txv.setText(\"OnTouch\");\n            return false;\n    }\n});\n```\n\n# 完整程式碼\n\n```java\npackage com.example.yr.helloworld;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    Button btn;\n    TextView txv;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        btn = (Button) findViewById(R.id.btn);\n        txv = (TextView) findViewById(R.id.textView);\n\n        btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                txv.setText(\"OnClick\");\n            }\n        });\n\n        btn.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View view) {\n                txv.setText(\"OnLongClick\");\n                return false;\n            }\n        });\n\n        btn.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View view, MotionEvent motionEvent) {\n                txv.setText(\"OnTouch\");\n                return false;\n            }\n        });\n    }\n}\n```\n","slug":"按鈕監聽器","published":1,"updated":"2021-08-28T08:07:12.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b6000l3nwbhhh76aeq","content":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=341\">https://blog.cmrdb.cs.pu.edu.tw/?p=341</a></li>\n</ul>\n<p>雖然上次介紹了Kotlin，但目前開發Android大部分還是以Java為主，今天就要教大家用程式碼控制TextView的文字內容，主要是介紹按鈕(Button)的監聽器(Listener)控制。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"監聽器\"><a href=\"#監聽器\" class=\"headerlink\" title=\"監聽器\"></a>監聽器</h1><p>常見的監聽器有幾個 </p>\n<blockquote>\n<p>之間差別可以參考 : <a href=\"http://blog.csdn.net/eclipsexys/article/details/8785149\">http://blog.csdn.net/eclipsexys/article/details/8785149</a> </p>\n</blockquote>\n<ul>\n<li><code>OnClickListener</code> (點擊) : 在手指<strong>按下再放開</strong>後才執行</li>\n<li><code>OnLongClickListener</code> (長按) : 手指按住不放時執行</li>\n<li><code>OnTouchListener</code> (觸碰) : 手指一碰到按鈕就執行，與OnClick不同的是不需等到手指放開</li>\n</ul>\n<h1 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h1><p>首先建立一個新專案( <a href=\"http://blog.cmrdb.cs.pu.edu.tw/?p=291\">可以參考上次的文章</a> )</p>\n<h1 id=\"排版\"><a href=\"#排版\" class=\"headerlink\" title=\"排版\"></a>排版</h1><p>在畫面上新增一個TextView、一個Button<br><img src=\"/2017/08/30/%E6%8C%89%E9%88%95%E7%9B%A3%E8%81%BD%E5%99%A8/image.png\" alt=\"image\"> </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">&quot;com.example.yr.helloworld.MainActivity&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/textView&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:textSize=&quot;30dp&quot;</span><br><span class=\"line\">        android:text=&quot;TextView&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Button</span><br><span class=\"line\">            android:id=&quot;@+id/btn&quot;</span><br><span class=\"line\">            android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">            android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">            android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">            android:text=&quot;Button&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><ol>\n<li><p>宣告 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Button btn;</span><br><span class=\"line\">TextView txv;</span><br></pre></td></tr></table></figure></li>\n<li><p>與畫面物件配對</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = (Button) findViewById(R.id.btn);</span><br><span class=\"line\">txv = (TextView) findViewById(R.id.textView);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnClick監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnClick&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnLongClick監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnLongClickListener(<span class=\"keyword\">new</span> View.OnLongClickListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnLongClick&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnTouch監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnTouchListener(<span class=\"keyword\">new</span> View.OnTouchListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View view, MotionEvent motionEvent)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnTouch&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"完整程式碼\"><a href=\"#完整程式碼\" class=\"headerlink\" title=\"完整程式碼\"></a>完整程式碼</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.yr.helloworld;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.MotionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Button btn;</span><br><span class=\"line\">    TextView txv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        btn = (Button) findViewById(R.id.btn);</span><br><span class=\"line\">        txv = (TextView) findViewById(R.id.textView);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnClick&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnLongClickListener(<span class=\"keyword\">new</span> View.OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnLongClick&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnTouchListener(<span class=\"keyword\">new</span> View.OnTouchListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View view, MotionEvent motionEvent)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnTouch&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=341\">https://blog.cmrdb.cs.pu.edu.tw/?p=341</a></li>\n</ul>\n<p>雖然上次介紹了Kotlin，但目前開發Android大部分還是以Java為主，今天就要教大家用程式碼控制TextView的文字內容，主要是介紹按鈕(Button)的監聽器(Listener)控制。</p>","more":"<h1 id=\"監聽器\"><a href=\"#監聽器\" class=\"headerlink\" title=\"監聽器\"></a>監聽器</h1><p>常見的監聽器有幾個 </p>\n<blockquote>\n<p>之間差別可以參考 : <a href=\"http://blog.csdn.net/eclipsexys/article/details/8785149\">http://blog.csdn.net/eclipsexys/article/details/8785149</a> </p>\n</blockquote>\n<ul>\n<li><code>OnClickListener</code> (點擊) : 在手指<strong>按下再放開</strong>後才執行</li>\n<li><code>OnLongClickListener</code> (長按) : 手指按住不放時執行</li>\n<li><code>OnTouchListener</code> (觸碰) : 手指一碰到按鈕就執行，與OnClick不同的是不需等到手指放開</li>\n</ul>\n<h1 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h1><p>首先建立一個新專案( <a href=\"http://blog.cmrdb.cs.pu.edu.tw/?p=291\">可以參考上次的文章</a> )</p>\n<h1 id=\"排版\"><a href=\"#排版\" class=\"headerlink\" title=\"排版\"></a>排版</h1><p>在畫面上新增一個TextView、一個Button<br><img src=\"/2017/08/30/%E6%8C%89%E9%88%95%E7%9B%A3%E8%81%BD%E5%99%A8/image.png\" alt=\"image\"> </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">&quot;com.example.yr.helloworld.MainActivity&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/textView&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:textSize=&quot;30dp&quot;</span><br><span class=\"line\">        android:text=&quot;TextView&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Button</span><br><span class=\"line\">            android:id=&quot;@+id/btn&quot;</span><br><span class=\"line\">            android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">            android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">            android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">            android:text=&quot;Button&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><ol>\n<li><p>宣告 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Button btn;</span><br><span class=\"line\">TextView txv;</span><br></pre></td></tr></table></figure></li>\n<li><p>與畫面物件配對</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = (Button) findViewById(R.id.btn);</span><br><span class=\"line\">txv = (TextView) findViewById(R.id.textView);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnClick監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnClick&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnLongClick監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnLongClickListener(<span class=\"keyword\">new</span> View.OnLongClickListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnLongClick&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li><p>設置OnTouch監聽器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnTouchListener(<span class=\"keyword\">new</span> View.OnTouchListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View view, MotionEvent motionEvent)</span> </span>&#123;</span><br><span class=\"line\">        txv.setText(<span class=\"string\">&quot;OnTouch&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"完整程式碼\"><a href=\"#完整程式碼\" class=\"headerlink\" title=\"完整程式碼\"></a>完整程式碼</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.yr.helloworld;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.MotionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Button btn;</span><br><span class=\"line\">    TextView txv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        btn = (Button) findViewById(R.id.btn);</span><br><span class=\"line\">        txv = (TextView) findViewById(R.id.textView);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnClick&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnLongClickListener(<span class=\"keyword\">new</span> View.OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnLongClick&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnTouchListener(<span class=\"keyword\">new</span> View.OnTouchListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouch</span><span class=\"params\">(View view, MotionEvent motionEvent)</span> </span>&#123;</span><br><span class=\"line\">                txv.setText(<span class=\"string\">&quot;OnTouch&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"第一個 Kotlin 專案","date":"2017-07-10T12:43:00.000Z","_content":"\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=291](https://blog.cmrdb.cs.pu.edu.tw/?p=291)\n\n2020/11/09 更新:\n現在的 Android Studio 安裝時，都附帶有 Kotlin 了，不需要再另外安裝。\n<!-- more -->\n---\n\n在Google I/O 2017 開發者大會中，Kotlin已被宣布成為Android 程式的官方一級開發語言（First-class language）。Android Studio 3.0之後的版本更直接內建支援Kotlin。\n\nKotlin能與Java在專案中並存，讓開發者能保有原本的專案，也能以Kotlin繼續開發。 \n\n# 安裝外掛\n由於目前的Android Studio還沒內建支援Kotlin，所以我們要安裝Plugin\n\n1. 點選右下 Configure > Plugins\n    ![image13](image13.png) \n\n1. 點選 Browse repositories...\n    ![image12](image12.png) \n\n1. 搜尋 Kotlin\n    ![image11](image11.png) \n\n1. 點選 Install，安裝完成後點 Restart Android Studio，重新開啟 Android Studio\n    ![image10](image10.png) \n\n# 第一支Kotlin程式\n\n1. 開新專案\n    ![image8](image8.png) \n    ![image7](image7.png) \n    ![image6](image6.png) \n\n2. 目前的專案還是Java\n    ![image5](image5.png) \n\n1. 接著我們要把 Java 轉換成 Kotlin，點選上方工具列中 Code > Convert Java File to Kotlin File\n    ![image4](image4.png) \n\n1. 稍待幾秒鐘，轉換完成!!\n    ![image3](image3.png) \n\n1. 在 activity_main.xml 中新增一個 Button 和 TextView\n    ![image2](image2.png) \n\n1. 切換至 MainActivity.kt，宣告變數\n```kotlin\nvar btn = findViewById(R.id.button) as Button\nvar txv = findViewById(R.id.textView) as TextView\n```\n\n1. 設置監聽器，改變TextView文字內容\n```kotlin\nbtn.setOnClickListener { \n            txv.setText(\"Hello World !\")\n}\n```\n\n1. 執行畫面參考\n    ![image1](image1.png) \n    ![image](image.png) \n\n# 程式碼參考\n\n- activity_main.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    tools:context=\"com.example.yr.kotlinfirst.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"TextView\" />\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Button\" />\n\n</LinearLayout>\n```\n\n- MainActivity.kt\n\n```kotlin\npackage com.example.yr.kotlinfirst\n\nimport android.os.Bundle\nimport android.support.v7.app.AppCompatActivity\nimport android.widget.Button\nimport android.widget.TextView\n\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        var btn = findViewById(R.id.button) as Button\n        var txv = findViewById(R.id.textView) as TextView\n\n        btn.setOnClickListener {\n            txv.setText(\"Hello World !\")\n        }\n    }\n}\n```\n","source":"_posts/第一個-Kotlin-專案.md","raw":"---\ntitle: 第一個 Kotlin 專案\ndate: 2017-07-10 20:43:00\ntags:\n- Kotlin\n- Android\n- 行雲部落格\n---\n\n* 本文曾發佈在 [https://blog.cmrdb.cs.pu.edu.tw/?p=291](https://blog.cmrdb.cs.pu.edu.tw/?p=291)\n\n2020/11/09 更新:\n現在的 Android Studio 安裝時，都附帶有 Kotlin 了，不需要再另外安裝。\n<!-- more -->\n---\n\n在Google I/O 2017 開發者大會中，Kotlin已被宣布成為Android 程式的官方一級開發語言（First-class language）。Android Studio 3.0之後的版本更直接內建支援Kotlin。\n\nKotlin能與Java在專案中並存，讓開發者能保有原本的專案，也能以Kotlin繼續開發。 \n\n# 安裝外掛\n由於目前的Android Studio還沒內建支援Kotlin，所以我們要安裝Plugin\n\n1. 點選右下 Configure > Plugins\n    ![image13](image13.png) \n\n1. 點選 Browse repositories...\n    ![image12](image12.png) \n\n1. 搜尋 Kotlin\n    ![image11](image11.png) \n\n1. 點選 Install，安裝完成後點 Restart Android Studio，重新開啟 Android Studio\n    ![image10](image10.png) \n\n# 第一支Kotlin程式\n\n1. 開新專案\n    ![image8](image8.png) \n    ![image7](image7.png) \n    ![image6](image6.png) \n\n2. 目前的專案還是Java\n    ![image5](image5.png) \n\n1. 接著我們要把 Java 轉換成 Kotlin，點選上方工具列中 Code > Convert Java File to Kotlin File\n    ![image4](image4.png) \n\n1. 稍待幾秒鐘，轉換完成!!\n    ![image3](image3.png) \n\n1. 在 activity_main.xml 中新增一個 Button 和 TextView\n    ![image2](image2.png) \n\n1. 切換至 MainActivity.kt，宣告變數\n```kotlin\nvar btn = findViewById(R.id.button) as Button\nvar txv = findViewById(R.id.textView) as TextView\n```\n\n1. 設置監聽器，改變TextView文字內容\n```kotlin\nbtn.setOnClickListener { \n            txv.setText(\"Hello World !\")\n}\n```\n\n1. 執行畫面參考\n    ![image1](image1.png) \n    ![image](image.png) \n\n# 程式碼參考\n\n- activity_main.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    tools:context=\"com.example.yr.kotlinfirst.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"TextView\" />\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Button\" />\n\n</LinearLayout>\n```\n\n- MainActivity.kt\n\n```kotlin\npackage com.example.yr.kotlinfirst\n\nimport android.os.Bundle\nimport android.support.v7.app.AppCompatActivity\nimport android.widget.Button\nimport android.widget.TextView\n\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        var btn = findViewById(R.id.button) as Button\n        var txv = findViewById(R.id.textView) as TextView\n\n        btn.setOnClickListener {\n            txv.setText(\"Hello World !\")\n        }\n    }\n}\n```\n","slug":"第一個-Kotlin-專案","published":1,"updated":"2021-08-27T18:32:29.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b7000n3nwbb3dgg1pg","content":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=291\">https://blog.cmrdb.cs.pu.edu.tw/?p=291</a></li>\n</ul>\n<p>2020/11/09 更新:<br>現在的 Android Studio 安裝時，都附帶有 Kotlin 了，不需要再另外安裝。</p>\n<span id=\"more\"></span>\n<hr>\n<p>在Google I/O 2017 開發者大會中，Kotlin已被宣布成為Android 程式的官方一級開發語言（First-class language）。Android Studio 3.0之後的版本更直接內建支援Kotlin。</p>\n<p>Kotlin能與Java在專案中並存，讓開發者能保有原本的專案，也能以Kotlin繼續開發。 </p>\n<h1 id=\"安裝外掛\"><a href=\"#安裝外掛\" class=\"headerlink\" title=\"安裝外掛\"></a>安裝外掛</h1><p>由於目前的Android Studio還沒內建支援Kotlin，所以我們要安裝Plugin</p>\n<ol>\n<li><p>點選右下 Configure &gt; Plugins<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image13.png\" alt=\"image13\"> </p>\n</li>\n<li><p>點選 Browse repositories…<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image12.png\" alt=\"image12\"> </p>\n</li>\n<li><p>搜尋 Kotlin<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image11.png\" alt=\"image11\"> </p>\n</li>\n<li><p>點選 Install，安裝完成後點 Restart Android Studio，重新開啟 Android Studio<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image10.png\" alt=\"image10\"> </p>\n</li>\n</ol>\n<h1 id=\"第一支Kotlin程式\"><a href=\"#第一支Kotlin程式\" class=\"headerlink\" title=\"第一支Kotlin程式\"></a>第一支Kotlin程式</h1><ol>\n<li><p>開新專案<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image8.png\" alt=\"image8\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image7.png\" alt=\"image7\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image6.png\" alt=\"image6\"> </p>\n</li>\n<li><p>目前的專案還是Java<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image5.png\" alt=\"image5\"> </p>\n</li>\n<li><p>接著我們要把 Java 轉換成 Kotlin，點選上方工具列中 Code &gt; Convert Java File to Kotlin File<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image4.png\" alt=\"image4\"> </p>\n</li>\n<li><p>稍待幾秒鐘，轉換完成!!<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image3.png\" alt=\"image3\"> </p>\n</li>\n<li><p>在 activity_main.xml 中新增一個 Button 和 TextView<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image2.png\" alt=\"image2\"> </p>\n</li>\n<li><p>切換至 MainActivity.kt，宣告變數</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = findViewById(R.id.button) <span class=\"keyword\">as</span> Button</span><br><span class=\"line\"><span class=\"keyword\">var</span> txv = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br></pre></td></tr></table></figure></li>\n<li><p>設置監聽器，改變TextView文字內容</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnClickListener &#123; </span><br><span class=\"line\">            txv.setText(<span class=\"string\">&quot;Hello World !&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>執行畫面參考<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image1.png\" alt=\"image1\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image.png\" alt=\"image\"> </p>\n</li>\n</ol>\n<h1 id=\"程式碼參考\"><a href=\"#程式碼參考\" class=\"headerlink\" title=\"程式碼參考\"></a>程式碼參考</h1><ul>\n<li>activity_main.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">&quot;com.example.yr.kotlinfirst.MainActivity&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/textView&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;TextView&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/button&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;Button&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>MainActivity.kt</li>\n</ul>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.yr.kotlinfirst</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> : <span class=\"type\">AppCompatActivity</span></span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> btn = findViewById(R.id.button) <span class=\"keyword\">as</span> Button</span><br><span class=\"line\">        <span class=\"keyword\">var</span> txv = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnClickListener &#123;</span><br><span class=\"line\">            txv.setText(<span class=\"string\">&quot;Hello World !&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<ul>\n<li>本文曾發佈在 <a href=\"https://blog.cmrdb.cs.pu.edu.tw/?p=291\">https://blog.cmrdb.cs.pu.edu.tw/?p=291</a></li>\n</ul>\n<p>2020/11/09 更新:<br>現在的 Android Studio 安裝時，都附帶有 Kotlin 了，不需要再另外安裝。</p>","more":"<hr>\n<p>在Google I/O 2017 開發者大會中，Kotlin已被宣布成為Android 程式的官方一級開發語言（First-class language）。Android Studio 3.0之後的版本更直接內建支援Kotlin。</p>\n<p>Kotlin能與Java在專案中並存，讓開發者能保有原本的專案，也能以Kotlin繼續開發。 </p>\n<h1 id=\"安裝外掛\"><a href=\"#安裝外掛\" class=\"headerlink\" title=\"安裝外掛\"></a>安裝外掛</h1><p>由於目前的Android Studio還沒內建支援Kotlin，所以我們要安裝Plugin</p>\n<ol>\n<li><p>點選右下 Configure &gt; Plugins<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image13.png\" alt=\"image13\"> </p>\n</li>\n<li><p>點選 Browse repositories…<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image12.png\" alt=\"image12\"> </p>\n</li>\n<li><p>搜尋 Kotlin<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image11.png\" alt=\"image11\"> </p>\n</li>\n<li><p>點選 Install，安裝完成後點 Restart Android Studio，重新開啟 Android Studio<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image10.png\" alt=\"image10\"> </p>\n</li>\n</ol>\n<h1 id=\"第一支Kotlin程式\"><a href=\"#第一支Kotlin程式\" class=\"headerlink\" title=\"第一支Kotlin程式\"></a>第一支Kotlin程式</h1><ol>\n<li><p>開新專案<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image8.png\" alt=\"image8\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image7.png\" alt=\"image7\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image6.png\" alt=\"image6\"> </p>\n</li>\n<li><p>目前的專案還是Java<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image5.png\" alt=\"image5\"> </p>\n</li>\n<li><p>接著我們要把 Java 轉換成 Kotlin，點選上方工具列中 Code &gt; Convert Java File to Kotlin File<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image4.png\" alt=\"image4\"> </p>\n</li>\n<li><p>稍待幾秒鐘，轉換完成!!<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image3.png\" alt=\"image3\"> </p>\n</li>\n<li><p>在 activity_main.xml 中新增一個 Button 和 TextView<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image2.png\" alt=\"image2\"> </p>\n</li>\n<li><p>切換至 MainActivity.kt，宣告變數</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = findViewById(R.id.button) <span class=\"keyword\">as</span> Button</span><br><span class=\"line\"><span class=\"keyword\">var</span> txv = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br></pre></td></tr></table></figure></li>\n<li><p>設置監聽器，改變TextView文字內容</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.setOnClickListener &#123; </span><br><span class=\"line\">            txv.setText(<span class=\"string\">&quot;Hello World !&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>執行畫面參考<br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image1.png\" alt=\"image1\"><br> <img src=\"/2017/07/10/%E7%AC%AC%E4%B8%80%E5%80%8B-Kotlin-%E5%B0%88%E6%A1%88/image.png\" alt=\"image\"> </p>\n</li>\n</ol>\n<h1 id=\"程式碼參考\"><a href=\"#程式碼參考\" class=\"headerlink\" title=\"程式碼參考\"></a>程式碼參考</h1><ul>\n<li>activity_main.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">&quot;com.example.yr.kotlinfirst.MainActivity&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/textView&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;TextView&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/button&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;Button&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>MainActivity.kt</li>\n</ul>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.yr.kotlinfirst</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Button</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> : <span class=\"type\">AppCompatActivity</span></span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> btn = findViewById(R.id.button) <span class=\"keyword\">as</span> Button</span><br><span class=\"line\">        <span class=\"keyword\">var</span> txv = findViewById(R.id.textView) <span class=\"keyword\">as</span> TextView</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.setOnClickListener &#123;</span><br><span class=\"line\">            txv.setText(<span class=\"string\">&quot;Hello World !&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"轉移 OneNote 筆記到其他帳號","date":"2021-07-14T09:39:16.000Z","_content":"\n先簡單介紹一下我平常作筆記的狀況好了~\n\n我習慣把老師上課的 PPT 先印下來，在課堂上寫筆記，雖然已經盡量節省(每面 4 張投影片，印雙面，等於一張紙有 8 張投影片)，但還是覺得很不環保。自從疫情開始，學校改為遠距上課，有天剛好看到家裡的平板，想說，不然來試試看用平板作筆記。\n<!-- more -->\n我使用 OneNote 的時間也不過短短 2 個月而已吧，卻覺得相見恨晚。其實大概 2、3 年前，我就知道這個軟體了，但那時候只有筆電，不懂他的強大，只覺打字沒有寫字快，而且得滑鼠又不好畫線，難用。因為平板有附觸控筆，我可以先用電腦把 PPT 匯入，同步後就能用平板作筆記了。觸控筆寫起來其實還滿順手的，我後來的筆記都改到 OneNote 上了。(~~怎麼看起來好像在業配😂~~)\n\n缺點來了！通常我在選擇要不要使用一個軟體最重要的一點就是，一定要可以跨裝置存取。關於這點 OneNote 只能算勉強達標，他有同步筆記本的功能，但好像沒那麼即時，有時候匯入 PPT ，同步還要多按幾下才會有資料。或是在平板端明明就已經把筆跡擦掉，但電腦還是看的到。雖然影響不大，但就是覺得有那麼一點不順手。\n\n要畢業了，以後要用 Office 就要自己買了🙁。因此趁教育版帳號還沒被刪除前，我要趕快把資料備份出來。本來想跟 Google 一樣，直接轉移所有權，但 OneDrive 好像沒有這樣的功能，摸索了一番才找到這條半手動的路，紀錄一下，若以後還有人遇到相同問題可以參考。\n\n## 兩個 Microsoft 帳號\n首先你需要兩個 Microsoft 帳號，edu 的帳號是學校的，畢業後會被停用，gmail 的是個人帳號。\n\n> 轉移檔案: edu -> gmail\n\n要先在 OneNote 裡登入兩個帳號方便等下切換。\n![需要兩個帳號](需要兩個帳號.png)\n\n## 匯出筆記本\n沒辦法直接轉移只好手動匯出，再手動匯入了。\n\n先開好要匯出的筆記本，選擇左上的`檔案`>`匯出`。\n匯出目前的`筆記本`，格式是`OneNote 套件 (*.onepkg)`。\n![匯出筆記本](匯出筆記本.png)\n\n可以暫時存到桌面或其他方便找的地方。\n\n## 匯入筆記本\n點擊剛剛匯出好的檔案，可以為匯入的筆記本重新命名，為了怕搞混，我在本來的名稱後加了些字\n![名字改一下](名字改一下.png)\n\n目前這個新匯入的筆記本還只是在本地端，還沒上傳到 OneDrive。\n\n## 上傳到個人雲端\n現在要把新匯入的筆記本上傳到個人雲端。\n\n先切換帳號。\n![切換帳號](切換帳號.png)\n\n再設定一下，讓檔案上傳到 OneDrive。\n![儲存到個人雲端](儲存到個人雲端.png)\n\n這裡的「共用」只是把檔案上傳到雲端而已，不會把檔案公開。\n\n如果有這個畫面應該就算上傳成功了。\n![出現這個畫面就算成功了](出現這個畫面就算成功了.png)\n\n確認一下雲端也有這個檔案了。\n![出現這個畫面就算成功了](出現這個畫面就算成功了.png)\n\n最後平板端就可以登出 edu 帳號，關掉 edu 的筆記本，登入 gmail 帳號，開啟重新匯入的筆記本囉。\n","source":"_posts/轉移-OneNote-筆記到其他帳號.md","raw":"---\ntitle: 轉移 OneNote 筆記到其他帳號\ndate: 2021-07-14 17:39:16\ntags:\n- OneNote\n---\n\n先簡單介紹一下我平常作筆記的狀況好了~\n\n我習慣把老師上課的 PPT 先印下來，在課堂上寫筆記，雖然已經盡量節省(每面 4 張投影片，印雙面，等於一張紙有 8 張投影片)，但還是覺得很不環保。自從疫情開始，學校改為遠距上課，有天剛好看到家裡的平板，想說，不然來試試看用平板作筆記。\n<!-- more -->\n我使用 OneNote 的時間也不過短短 2 個月而已吧，卻覺得相見恨晚。其實大概 2、3 年前，我就知道這個軟體了，但那時候只有筆電，不懂他的強大，只覺打字沒有寫字快，而且得滑鼠又不好畫線，難用。因為平板有附觸控筆，我可以先用電腦把 PPT 匯入，同步後就能用平板作筆記了。觸控筆寫起來其實還滿順手的，我後來的筆記都改到 OneNote 上了。(~~怎麼看起來好像在業配😂~~)\n\n缺點來了！通常我在選擇要不要使用一個軟體最重要的一點就是，一定要可以跨裝置存取。關於這點 OneNote 只能算勉強達標，他有同步筆記本的功能，但好像沒那麼即時，有時候匯入 PPT ，同步還要多按幾下才會有資料。或是在平板端明明就已經把筆跡擦掉，但電腦還是看的到。雖然影響不大，但就是覺得有那麼一點不順手。\n\n要畢業了，以後要用 Office 就要自己買了🙁。因此趁教育版帳號還沒被刪除前，我要趕快把資料備份出來。本來想跟 Google 一樣，直接轉移所有權，但 OneDrive 好像沒有這樣的功能，摸索了一番才找到這條半手動的路，紀錄一下，若以後還有人遇到相同問題可以參考。\n\n## 兩個 Microsoft 帳號\n首先你需要兩個 Microsoft 帳號，edu 的帳號是學校的，畢業後會被停用，gmail 的是個人帳號。\n\n> 轉移檔案: edu -> gmail\n\n要先在 OneNote 裡登入兩個帳號方便等下切換。\n![需要兩個帳號](需要兩個帳號.png)\n\n## 匯出筆記本\n沒辦法直接轉移只好手動匯出，再手動匯入了。\n\n先開好要匯出的筆記本，選擇左上的`檔案`>`匯出`。\n匯出目前的`筆記本`，格式是`OneNote 套件 (*.onepkg)`。\n![匯出筆記本](匯出筆記本.png)\n\n可以暫時存到桌面或其他方便找的地方。\n\n## 匯入筆記本\n點擊剛剛匯出好的檔案，可以為匯入的筆記本重新命名，為了怕搞混，我在本來的名稱後加了些字\n![名字改一下](名字改一下.png)\n\n目前這個新匯入的筆記本還只是在本地端，還沒上傳到 OneDrive。\n\n## 上傳到個人雲端\n現在要把新匯入的筆記本上傳到個人雲端。\n\n先切換帳號。\n![切換帳號](切換帳號.png)\n\n再設定一下，讓檔案上傳到 OneDrive。\n![儲存到個人雲端](儲存到個人雲端.png)\n\n這裡的「共用」只是把檔案上傳到雲端而已，不會把檔案公開。\n\n如果有這個畫面應該就算上傳成功了。\n![出現這個畫面就算成功了](出現這個畫面就算成功了.png)\n\n確認一下雲端也有這個檔案了。\n![出現這個畫面就算成功了](出現這個畫面就算成功了.png)\n\n最後平板端就可以登出 edu 帳號，關掉 edu 的筆記本，登入 gmail 帳號，開啟重新匯入的筆記本囉。\n","slug":"轉移-OneNote-筆記到其他帳號","published":1,"updated":"2021-08-07T07:00:01.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98b9000p3nwbfbmb1y83","content":"<p>先簡單介紹一下我平常作筆記的狀況好了~</p>\n<p>我習慣把老師上課的 PPT 先印下來，在課堂上寫筆記，雖然已經盡量節省(每面 4 張投影片，印雙面，等於一張紙有 8 張投影片)，但還是覺得很不環保。自從疫情開始，學校改為遠距上課，有天剛好看到家裡的平板，想說，不然來試試看用平板作筆記。</p>\n<span id=\"more\"></span>\n<p>我使用 OneNote 的時間也不過短短 2 個月而已吧，卻覺得相見恨晚。其實大概 2、3 年前，我就知道這個軟體了，但那時候只有筆電，不懂他的強大，只覺打字沒有寫字快，而且得滑鼠又不好畫線，難用。因為平板有附觸控筆，我可以先用電腦把 PPT 匯入，同步後就能用平板作筆記了。觸控筆寫起來其實還滿順手的，我後來的筆記都改到 OneNote 上了。(<del>怎麼看起來好像在業配😂</del>)</p>\n<p>缺點來了！通常我在選擇要不要使用一個軟體最重要的一點就是，一定要可以跨裝置存取。關於這點 OneNote 只能算勉強達標，他有同步筆記本的功能，但好像沒那麼即時，有時候匯入 PPT ，同步還要多按幾下才會有資料。或是在平板端明明就已經把筆跡擦掉，但電腦還是看的到。雖然影響不大，但就是覺得有那麼一點不順手。</p>\n<p>要畢業了，以後要用 Office 就要自己買了🙁。因此趁教育版帳號還沒被刪除前，我要趕快把資料備份出來。本來想跟 Google 一樣，直接轉移所有權，但 OneDrive 好像沒有這樣的功能，摸索了一番才找到這條半手動的路，紀錄一下，若以後還有人遇到相同問題可以參考。</p>\n<h2 id=\"兩個-Microsoft-帳號\"><a href=\"#兩個-Microsoft-帳號\" class=\"headerlink\" title=\"兩個 Microsoft 帳號\"></a>兩個 Microsoft 帳號</h2><p>首先你需要兩個 Microsoft 帳號，edu 的帳號是學校的，畢業後會被停用，gmail 的是個人帳號。</p>\n<blockquote>\n<p>轉移檔案: edu -&gt; gmail</p>\n</blockquote>\n<p>要先在 OneNote 裡登入兩個帳號方便等下切換。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E9%9C%80%E8%A6%81%E5%85%A9%E5%80%8B%E5%B8%B3%E8%99%9F.png\" alt=\"需要兩個帳號\"></p>\n<h2 id=\"匯出筆記本\"><a href=\"#匯出筆記本\" class=\"headerlink\" title=\"匯出筆記本\"></a>匯出筆記本</h2><p>沒辦法直接轉移只好手動匯出，再手動匯入了。</p>\n<p>先開好要匯出的筆記本，選擇左上的<code>檔案</code>&gt;<code>匯出</code>。<br>匯出目前的<code>筆記本</code>，格式是<code>OneNote 套件 (*.onepkg)</code>。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%8C%AF%E5%87%BA%E7%AD%86%E8%A8%98%E6%9C%AC.png\" alt=\"匯出筆記本\"></p>\n<p>可以暫時存到桌面或其他方便找的地方。</p>\n<h2 id=\"匯入筆記本\"><a href=\"#匯入筆記本\" class=\"headerlink\" title=\"匯入筆記本\"></a>匯入筆記本</h2><p>點擊剛剛匯出好的檔案，可以為匯入的筆記本重新命名，為了怕搞混，我在本來的名稱後加了些字<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%90%8D%E5%AD%97%E6%94%B9%E4%B8%80%E4%B8%8B.png\" alt=\"名字改一下\"></p>\n<p>目前這個新匯入的筆記本還只是在本地端，還沒上傳到 OneDrive。</p>\n<h2 id=\"上傳到個人雲端\"><a href=\"#上傳到個人雲端\" class=\"headerlink\" title=\"上傳到個人雲端\"></a>上傳到個人雲端</h2><p>現在要把新匯入的筆記本上傳到個人雲端。</p>\n<p>先切換帳號。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%88%87%E6%8F%9B%E5%B8%B3%E8%99%9F.png\" alt=\"切換帳號\"></p>\n<p>再設定一下，讓檔案上傳到 OneDrive。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%84%B2%E5%AD%98%E5%88%B0%E5%80%8B%E4%BA%BA%E9%9B%B2%E7%AB%AF.png\" alt=\"儲存到個人雲端\"></p>\n<p>這裡的「共用」只是把檔案上傳到雲端而已，不會把檔案公開。</p>\n<p>如果有這個畫面應該就算上傳成功了。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%87%BA%E7%8F%BE%E9%80%99%E5%80%8B%E7%95%AB%E9%9D%A2%E5%B0%B1%E7%AE%97%E6%88%90%E5%8A%9F%E4%BA%86.png\" alt=\"出現這個畫面就算成功了\"></p>\n<p>確認一下雲端也有這個檔案了。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%87%BA%E7%8F%BE%E9%80%99%E5%80%8B%E7%95%AB%E9%9D%A2%E5%B0%B1%E7%AE%97%E6%88%90%E5%8A%9F%E4%BA%86.png\" alt=\"出現這個畫面就算成功了\"></p>\n<p>最後平板端就可以登出 edu 帳號，關掉 edu 的筆記本，登入 gmail 帳號，開啟重新匯入的筆記本囉。</p>\n","site":{"data":{}},"excerpt":"<p>先簡單介紹一下我平常作筆記的狀況好了~</p>\n<p>我習慣把老師上課的 PPT 先印下來，在課堂上寫筆記，雖然已經盡量節省(每面 4 張投影片，印雙面，等於一張紙有 8 張投影片)，但還是覺得很不環保。自從疫情開始，學校改為遠距上課，有天剛好看到家裡的平板，想說，不然來試試看用平板作筆記。</p>","more":"<p>我使用 OneNote 的時間也不過短短 2 個月而已吧，卻覺得相見恨晚。其實大概 2、3 年前，我就知道這個軟體了，但那時候只有筆電，不懂他的強大，只覺打字沒有寫字快，而且得滑鼠又不好畫線，難用。因為平板有附觸控筆，我可以先用電腦把 PPT 匯入，同步後就能用平板作筆記了。觸控筆寫起來其實還滿順手的，我後來的筆記都改到 OneNote 上了。(<del>怎麼看起來好像在業配😂</del>)</p>\n<p>缺點來了！通常我在選擇要不要使用一個軟體最重要的一點就是，一定要可以跨裝置存取。關於這點 OneNote 只能算勉強達標，他有同步筆記本的功能，但好像沒那麼即時，有時候匯入 PPT ，同步還要多按幾下才會有資料。或是在平板端明明就已經把筆跡擦掉，但電腦還是看的到。雖然影響不大，但就是覺得有那麼一點不順手。</p>\n<p>要畢業了，以後要用 Office 就要自己買了🙁。因此趁教育版帳號還沒被刪除前，我要趕快把資料備份出來。本來想跟 Google 一樣，直接轉移所有權，但 OneDrive 好像沒有這樣的功能，摸索了一番才找到這條半手動的路，紀錄一下，若以後還有人遇到相同問題可以參考。</p>\n<h2 id=\"兩個-Microsoft-帳號\"><a href=\"#兩個-Microsoft-帳號\" class=\"headerlink\" title=\"兩個 Microsoft 帳號\"></a>兩個 Microsoft 帳號</h2><p>首先你需要兩個 Microsoft 帳號，edu 的帳號是學校的，畢業後會被停用，gmail 的是個人帳號。</p>\n<blockquote>\n<p>轉移檔案: edu -&gt; gmail</p>\n</blockquote>\n<p>要先在 OneNote 裡登入兩個帳號方便等下切換。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E9%9C%80%E8%A6%81%E5%85%A9%E5%80%8B%E5%B8%B3%E8%99%9F.png\" alt=\"需要兩個帳號\"></p>\n<h2 id=\"匯出筆記本\"><a href=\"#匯出筆記本\" class=\"headerlink\" title=\"匯出筆記本\"></a>匯出筆記本</h2><p>沒辦法直接轉移只好手動匯出，再手動匯入了。</p>\n<p>先開好要匯出的筆記本，選擇左上的<code>檔案</code>&gt;<code>匯出</code>。<br>匯出目前的<code>筆記本</code>，格式是<code>OneNote 套件 (*.onepkg)</code>。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%8C%AF%E5%87%BA%E7%AD%86%E8%A8%98%E6%9C%AC.png\" alt=\"匯出筆記本\"></p>\n<p>可以暫時存到桌面或其他方便找的地方。</p>\n<h2 id=\"匯入筆記本\"><a href=\"#匯入筆記本\" class=\"headerlink\" title=\"匯入筆記本\"></a>匯入筆記本</h2><p>點擊剛剛匯出好的檔案，可以為匯入的筆記本重新命名，為了怕搞混，我在本來的名稱後加了些字<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%90%8D%E5%AD%97%E6%94%B9%E4%B8%80%E4%B8%8B.png\" alt=\"名字改一下\"></p>\n<p>目前這個新匯入的筆記本還只是在本地端，還沒上傳到 OneDrive。</p>\n<h2 id=\"上傳到個人雲端\"><a href=\"#上傳到個人雲端\" class=\"headerlink\" title=\"上傳到個人雲端\"></a>上傳到個人雲端</h2><p>現在要把新匯入的筆記本上傳到個人雲端。</p>\n<p>先切換帳號。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%88%87%E6%8F%9B%E5%B8%B3%E8%99%9F.png\" alt=\"切換帳號\"></p>\n<p>再設定一下，讓檔案上傳到 OneDrive。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%84%B2%E5%AD%98%E5%88%B0%E5%80%8B%E4%BA%BA%E9%9B%B2%E7%AB%AF.png\" alt=\"儲存到個人雲端\"></p>\n<p>這裡的「共用」只是把檔案上傳到雲端而已，不會把檔案公開。</p>\n<p>如果有這個畫面應該就算上傳成功了。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%87%BA%E7%8F%BE%E9%80%99%E5%80%8B%E7%95%AB%E9%9D%A2%E5%B0%B1%E7%AE%97%E6%88%90%E5%8A%9F%E4%BA%86.png\" alt=\"出現這個畫面就算成功了\"></p>\n<p>確認一下雲端也有這個檔案了。<br><img src=\"/2021/07/14/%E8%BD%89%E7%A7%BB-OneNote-%E7%AD%86%E8%A8%98%E5%88%B0%E5%85%B6%E4%BB%96%E5%B8%B3%E8%99%9F/%E5%87%BA%E7%8F%BE%E9%80%99%E5%80%8B%E7%95%AB%E9%9D%A2%E5%B0%B1%E7%AE%97%E6%88%90%E5%8A%9F%E4%BA%86.png\" alt=\"出現這個畫面就算成功了\"></p>\n<p>最後平板端就可以登出 edu 帳號，關掉 edu 的筆記本，登入 gmail 帳號，開啟重新匯入的筆記本囉。</p>"},{"title":"逆向工程-反編譯APK","date":"2018-01-25T16:32:15.000Z","_content":"\n* 本文曾發佈在 [https://hackmd.io/@yrw/BJeYauKdBz](https://hackmd.io/@yrw/BJeYauKdBz)\n\n> **編輯紀錄**:\n> 2020/09/24\n> 補齊dex2jar詳細步驟、加入jd-gui\n\n<!-- more -->\n# 環境&材料\n- 一台 Kali Linux\n- 一個 APK\n\n# 1. 解壓縮Apk檔\n\n```shell=\n$ unzip OOXX.apk\n```\n得到 `classes.dex`\n![classes](classes.png) \n\n# 2. Dex to Jar\n\n## 下載\nhttps://sourceforge.net/projects/dex2jar/\n\n## 解壓縮\n解壓縮後，要讓裡面的程式都「可執行」\n```shell=\nunzip dex2jar-2.0.zip\ncd dex2jar-2.0/\nchmod +x d*\n```\n![unzip](unzip.png)\n\n## 執行\n轉檔成jar格式\n\n```shell=\n$ ./d2j-dex2jar.sh classes.dex\n```\n\n得到`classes-dex2jar.jar`\n\n![classes-dex2jar](classes-dex2jar.png)\n\n# 3. Jar to Java\n\n有 gui 和 cmd 兩種版本，依需求取用\ngui 可以 trace code 可能方便一些\n\n## jd-gui\n\n### 下載\nhttp://java-decompiler.github.io/\n![jd-gui](jd-gui.png)\n\n### 執行\nkali 預先有安裝 java 了，省略安裝步驟\n```shell=\njava -jar jd-gui-1.6.6.jar\n```\n開啟剛反編譯完的 `classes-dex2jar.jar`\n![open-file](open-file.png)\n\n就能看到java程式碼\n![result](result.png)\n\n## jd-cmd\nhttps://github.com/kwart/jd-cmd\n\n### 下載 \n\n```shell=\n$ git clone https://github.com/kwart/jd-cmd.git\n```\n\n### 安裝\n\n下載後，可以在資料夾中找找到`hackingOnJdCmd.md`，裡面有安裝步驟\n\n1. 首先要安裝Maven工具\n```shell=\n$ sudo apt-get install maven\n```\n> https://www.facebook.com/teacherchi/posts/830539233634000\n> Maven 是一個「軟體開發流程」的「自動化工具」，一般人會撰寫時下一些指令、編譯時下另外一些指令、測試／除錯／版本維護又是下另外一些指令。\n> Maven 可以讓你把每個流程輸入的指令，分門別類地記錄下來（當然，第一次還是要你用手工把它 Key 進去）。等於它有能力「模仿」你、把你每個流程打入的指令無限次「重現」。以後你只要一聲令下，就能把這一大堆指令，一口氣執行完畢。更棒的是，呼叫 Maven 時，可以從外部下一些小指令，客製化這些「每個流程要輸入的指令」的執行順序。因為軟體開發流程的「撰寫 --> 編譯 --> 測試 --> 除錯 --> 原始碼版本維護 --> ...」並非永遠依照固定順序執行、一成不變的。正因 Maven 可以彈性調整組合軟體開發過程中那一大堆鬼畫符般的指令，讓你不必背誦，它才會那麼受歡迎。\n> **Maven之於Java，相當於Makefile之於C**\n2. 安裝jd-cmd\n```shell=\n$ cd jd-cmd\n$ mvn clean package\n```\n\n### 使用\n\n1. 測試\n```shell=\n$ java -jar jd-cli/target/jd-cli.jar\n```\n2. 建立一個存放反編譯結果的資料夾\n```shell=\n$ mkdir ~/dex2jarTest/apk/OOXX/decompile \n```\n3. 反編譯!\n```shell=\n$ java -jar jd-cli/target/jd-cli.jar [.jar路徑] -od [輸出路徑]\n$ java -jar jd-cli/target/jd-cli.jar ~/dex2jarTest/apk/OOXX/classes-dex2jar.jar -od ~/dex2jarTest/apk/OOXX/decompile/\n```\n接著在decompile資料夾裡就可以看到反編譯完的結果囉~\n","source":"_posts/逆向工程-反編譯APK.md","raw":"---\ntitle: 逆向工程-反編譯APK\ndate: 2018-01-26 00:32:15\ntags:\n- 反編譯\n- 資安\n- 逆向工程\n- APK\n---\n\n* 本文曾發佈在 [https://hackmd.io/@yrw/BJeYauKdBz](https://hackmd.io/@yrw/BJeYauKdBz)\n\n> **編輯紀錄**:\n> 2020/09/24\n> 補齊dex2jar詳細步驟、加入jd-gui\n\n<!-- more -->\n# 環境&材料\n- 一台 Kali Linux\n- 一個 APK\n\n# 1. 解壓縮Apk檔\n\n```shell=\n$ unzip OOXX.apk\n```\n得到 `classes.dex`\n![classes](classes.png) \n\n# 2. Dex to Jar\n\n## 下載\nhttps://sourceforge.net/projects/dex2jar/\n\n## 解壓縮\n解壓縮後，要讓裡面的程式都「可執行」\n```shell=\nunzip dex2jar-2.0.zip\ncd dex2jar-2.0/\nchmod +x d*\n```\n![unzip](unzip.png)\n\n## 執行\n轉檔成jar格式\n\n```shell=\n$ ./d2j-dex2jar.sh classes.dex\n```\n\n得到`classes-dex2jar.jar`\n\n![classes-dex2jar](classes-dex2jar.png)\n\n# 3. Jar to Java\n\n有 gui 和 cmd 兩種版本，依需求取用\ngui 可以 trace code 可能方便一些\n\n## jd-gui\n\n### 下載\nhttp://java-decompiler.github.io/\n![jd-gui](jd-gui.png)\n\n### 執行\nkali 預先有安裝 java 了，省略安裝步驟\n```shell=\njava -jar jd-gui-1.6.6.jar\n```\n開啟剛反編譯完的 `classes-dex2jar.jar`\n![open-file](open-file.png)\n\n就能看到java程式碼\n![result](result.png)\n\n## jd-cmd\nhttps://github.com/kwart/jd-cmd\n\n### 下載 \n\n```shell=\n$ git clone https://github.com/kwart/jd-cmd.git\n```\n\n### 安裝\n\n下載後，可以在資料夾中找找到`hackingOnJdCmd.md`，裡面有安裝步驟\n\n1. 首先要安裝Maven工具\n```shell=\n$ sudo apt-get install maven\n```\n> https://www.facebook.com/teacherchi/posts/830539233634000\n> Maven 是一個「軟體開發流程」的「自動化工具」，一般人會撰寫時下一些指令、編譯時下另外一些指令、測試／除錯／版本維護又是下另外一些指令。\n> Maven 可以讓你把每個流程輸入的指令，分門別類地記錄下來（當然，第一次還是要你用手工把它 Key 進去）。等於它有能力「模仿」你、把你每個流程打入的指令無限次「重現」。以後你只要一聲令下，就能把這一大堆指令，一口氣執行完畢。更棒的是，呼叫 Maven 時，可以從外部下一些小指令，客製化這些「每個流程要輸入的指令」的執行順序。因為軟體開發流程的「撰寫 --> 編譯 --> 測試 --> 除錯 --> 原始碼版本維護 --> ...」並非永遠依照固定順序執行、一成不變的。正因 Maven 可以彈性調整組合軟體開發過程中那一大堆鬼畫符般的指令，讓你不必背誦，它才會那麼受歡迎。\n> **Maven之於Java，相當於Makefile之於C**\n2. 安裝jd-cmd\n```shell=\n$ cd jd-cmd\n$ mvn clean package\n```\n\n### 使用\n\n1. 測試\n```shell=\n$ java -jar jd-cli/target/jd-cli.jar\n```\n2. 建立一個存放反編譯結果的資料夾\n```shell=\n$ mkdir ~/dex2jarTest/apk/OOXX/decompile \n```\n3. 反編譯!\n```shell=\n$ java -jar jd-cli/target/jd-cli.jar [.jar路徑] -od [輸出路徑]\n$ java -jar jd-cli/target/jd-cli.jar ~/dex2jarTest/apk/OOXX/classes-dex2jar.jar -od ~/dex2jarTest/apk/OOXX/decompile/\n```\n接著在decompile資料夾裡就可以看到反編譯完的結果囉~\n","slug":"逆向工程-反編譯APK","published":1,"updated":"2021-08-27T17:02:42.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvi98bp001t3nwb6b7k96ul","content":"<ul>\n<li>本文曾發佈在 <a href=\"https://hackmd.io/@yrw/BJeYauKdBz\">https://hackmd.io/@yrw/BJeYauKdBz</a></li>\n</ul>\n<blockquote>\n<p><strong>編輯紀錄</strong>:<br>2020/09/24<br>補齊dex2jar詳細步驟、加入jd-gui</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"環境-amp-材料\"><a href=\"#環境-amp-材料\" class=\"headerlink\" title=\"環境&amp;材料\"></a>環境&amp;材料</h1><ul>\n<li>一台 Kali Linux</li>\n<li>一個 APK</li>\n</ul>\n<h1 id=\"1-解壓縮Apk檔\"><a href=\"#1-解壓縮Apk檔\" class=\"headerlink\" title=\"1. 解壓縮Apk檔\"></a>1. 解壓縮Apk檔</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> unzip OOXX.apk</span></span><br></pre></td></tr></table></figure>\n<p>得到 <code>classes.dex</code><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/classes.png\" alt=\"classes\"> </p>\n<h1 id=\"2-Dex-to-Jar\"><a href=\"#2-Dex-to-Jar\" class=\"headerlink\" title=\"2. Dex to Jar\"></a>2. Dex to Jar</h1><h2 id=\"下載\"><a href=\"#下載\" class=\"headerlink\" title=\"下載\"></a>下載</h2><p><a href=\"https://sourceforge.net/projects/dex2jar/\">https://sourceforge.net/projects/dex2jar/</a></p>\n<h2 id=\"解壓縮\"><a href=\"#解壓縮\" class=\"headerlink\" title=\"解壓縮\"></a>解壓縮</h2><p>解壓縮後，要讓裡面的程式都「可執行」</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip dex2jar-2.0.zip</span><br><span class=\"line\">cd dex2jar-2.0/</span><br><span class=\"line\">chmod +x d*</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/unzip.png\" alt=\"unzip\"></p>\n<h2 id=\"執行\"><a href=\"#執行\" class=\"headerlink\" title=\"執行\"></a>執行</h2><p>轉檔成jar格式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ./d2j-dex2jar.sh classes.dex</span></span><br></pre></td></tr></table></figure>\n\n<p>得到<code>classes-dex2jar.jar</code></p>\n<p><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/classes-dex2jar.png\" alt=\"classes-dex2jar\"></p>\n<h1 id=\"3-Jar-to-Java\"><a href=\"#3-Jar-to-Java\" class=\"headerlink\" title=\"3. Jar to Java\"></a>3. Jar to Java</h1><p>有 gui 和 cmd 兩種版本，依需求取用<br>gui 可以 trace code 可能方便一些</p>\n<h2 id=\"jd-gui\"><a href=\"#jd-gui\" class=\"headerlink\" title=\"jd-gui\"></a>jd-gui</h2><h3 id=\"下載-1\"><a href=\"#下載-1\" class=\"headerlink\" title=\"下載\"></a>下載</h3><p><a href=\"http://java-decompiler.github.io/\">http://java-decompiler.github.io/</a><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/jd-gui.png\" alt=\"jd-gui\"></p>\n<h3 id=\"執行-1\"><a href=\"#執行-1\" class=\"headerlink\" title=\"執行\"></a>執行</h3><p>kali 預先有安裝 java 了，省略安裝步驟</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar jd-gui-1.6.6.jar</span><br></pre></td></tr></table></figure>\n<p>開啟剛反編譯完的 <code>classes-dex2jar.jar</code><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/open-file.png\" alt=\"open-file\"></p>\n<p>就能看到java程式碼<br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/result.png\" alt=\"result\"></p>\n<h2 id=\"jd-cmd\"><a href=\"#jd-cmd\" class=\"headerlink\" title=\"jd-cmd\"></a>jd-cmd</h2><p><a href=\"https://github.com/kwart/jd-cmd\">https://github.com/kwart/jd-cmd</a></p>\n<h3 id=\"下載-2\"><a href=\"#下載-2\" class=\"headerlink\" title=\"下載\"></a>下載</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/kwart/jd-cmd.git</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><p>下載後，可以在資料夾中找找到<code>hackingOnJdCmd.md</code>，裡面有安裝步驟</p>\n<ol>\n<li>首先要安裝Maven工具<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo apt-get install maven</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://www.facebook.com/teacherchi/posts/830539233634000\">https://www.facebook.com/teacherchi/posts/830539233634000</a><br>Maven 是一個「軟體開發流程」的「自動化工具」，一般人會撰寫時下一些指令、編譯時下另外一些指令、測試／除錯／版本維護又是下另外一些指令。<br>Maven 可以讓你把每個流程輸入的指令，分門別類地記錄下來（當然，第一次還是要你用手工把它 Key 進去）。等於它有能力「模仿」你、把你每個流程打入的指令無限次「重現」。以後你只要一聲令下，就能把這一大堆指令，一口氣執行完畢。更棒的是，呼叫 Maven 時，可以從外部下一些小指令，客製化這些「每個流程要輸入的指令」的執行順序。因為軟體開發流程的「撰寫 –&gt; 編譯 –&gt; 測試 –&gt; 除錯 –&gt; 原始碼版本維護 –&gt; …」並非永遠依照固定順序執行、一成不變的。正因 Maven 可以彈性調整組合軟體開發過程中那一大堆鬼畫符般的指令，讓你不必背誦，它才會那麼受歡迎。<br><strong>Maven之於Java，相當於Makefile之於C</strong></p>\n</blockquote>\n</li>\n<li>安裝jd-cmd<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> jd-cmd</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mvn clean package</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><ol>\n<li>測試<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar</span></span><br></pre></td></tr></table></figure></li>\n<li>建立一個存放反編譯結果的資料夾<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir ~/dex2jarTest/apk/OOXX/decompile</span> </span><br></pre></td></tr></table></figure></li>\n<li>反編譯!<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar [.jar路徑] -od [輸出路徑]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar ~/dex2jarTest/apk/OOXX/classes-dex2jar.jar -od ~/dex2jarTest/apk/OOXX/decompile/</span></span><br></pre></td></tr></table></figure>\n接著在decompile資料夾裡就可以看到反編譯完的結果囉~</li>\n</ol>\n","site":{"data":{}},"excerpt":"<ul>\n<li>本文曾發佈在 <a href=\"https://hackmd.io/@yrw/BJeYauKdBz\">https://hackmd.io/@yrw/BJeYauKdBz</a></li>\n</ul>\n<blockquote>\n<p><strong>編輯紀錄</strong>:<br>2020/09/24<br>補齊dex2jar詳細步驟、加入jd-gui</p>\n</blockquote>","more":"<h1 id=\"環境-amp-材料\"><a href=\"#環境-amp-材料\" class=\"headerlink\" title=\"環境&amp;材料\"></a>環境&amp;材料</h1><ul>\n<li>一台 Kali Linux</li>\n<li>一個 APK</li>\n</ul>\n<h1 id=\"1-解壓縮Apk檔\"><a href=\"#1-解壓縮Apk檔\" class=\"headerlink\" title=\"1. 解壓縮Apk檔\"></a>1. 解壓縮Apk檔</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> unzip OOXX.apk</span></span><br></pre></td></tr></table></figure>\n<p>得到 <code>classes.dex</code><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/classes.png\" alt=\"classes\"> </p>\n<h1 id=\"2-Dex-to-Jar\"><a href=\"#2-Dex-to-Jar\" class=\"headerlink\" title=\"2. Dex to Jar\"></a>2. Dex to Jar</h1><h2 id=\"下載\"><a href=\"#下載\" class=\"headerlink\" title=\"下載\"></a>下載</h2><p><a href=\"https://sourceforge.net/projects/dex2jar/\">https://sourceforge.net/projects/dex2jar/</a></p>\n<h2 id=\"解壓縮\"><a href=\"#解壓縮\" class=\"headerlink\" title=\"解壓縮\"></a>解壓縮</h2><p>解壓縮後，要讓裡面的程式都「可執行」</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip dex2jar-2.0.zip</span><br><span class=\"line\">cd dex2jar-2.0/</span><br><span class=\"line\">chmod +x d*</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/unzip.png\" alt=\"unzip\"></p>\n<h2 id=\"執行\"><a href=\"#執行\" class=\"headerlink\" title=\"執行\"></a>執行</h2><p>轉檔成jar格式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ./d2j-dex2jar.sh classes.dex</span></span><br></pre></td></tr></table></figure>\n\n<p>得到<code>classes-dex2jar.jar</code></p>\n<p><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/classes-dex2jar.png\" alt=\"classes-dex2jar\"></p>\n<h1 id=\"3-Jar-to-Java\"><a href=\"#3-Jar-to-Java\" class=\"headerlink\" title=\"3. Jar to Java\"></a>3. Jar to Java</h1><p>有 gui 和 cmd 兩種版本，依需求取用<br>gui 可以 trace code 可能方便一些</p>\n<h2 id=\"jd-gui\"><a href=\"#jd-gui\" class=\"headerlink\" title=\"jd-gui\"></a>jd-gui</h2><h3 id=\"下載-1\"><a href=\"#下載-1\" class=\"headerlink\" title=\"下載\"></a>下載</h3><p><a href=\"http://java-decompiler.github.io/\">http://java-decompiler.github.io/</a><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/jd-gui.png\" alt=\"jd-gui\"></p>\n<h3 id=\"執行-1\"><a href=\"#執行-1\" class=\"headerlink\" title=\"執行\"></a>執行</h3><p>kali 預先有安裝 java 了，省略安裝步驟</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar jd-gui-1.6.6.jar</span><br></pre></td></tr></table></figure>\n<p>開啟剛反編譯完的 <code>classes-dex2jar.jar</code><br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/open-file.png\" alt=\"open-file\"></p>\n<p>就能看到java程式碼<br><img src=\"/2018/01/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-%E5%8F%8D%E7%B7%A8%E8%AD%AFAPK/result.png\" alt=\"result\"></p>\n<h2 id=\"jd-cmd\"><a href=\"#jd-cmd\" class=\"headerlink\" title=\"jd-cmd\"></a>jd-cmd</h2><p><a href=\"https://github.com/kwart/jd-cmd\">https://github.com/kwart/jd-cmd</a></p>\n<h3 id=\"下載-2\"><a href=\"#下載-2\" class=\"headerlink\" title=\"下載\"></a>下載</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/kwart/jd-cmd.git</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><p>下載後，可以在資料夾中找找到<code>hackingOnJdCmd.md</code>，裡面有安裝步驟</p>\n<ol>\n<li>首先要安裝Maven工具<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo apt-get install maven</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://www.facebook.com/teacherchi/posts/830539233634000\">https://www.facebook.com/teacherchi/posts/830539233634000</a><br>Maven 是一個「軟體開發流程」的「自動化工具」，一般人會撰寫時下一些指令、編譯時下另外一些指令、測試／除錯／版本維護又是下另外一些指令。<br>Maven 可以讓你把每個流程輸入的指令，分門別類地記錄下來（當然，第一次還是要你用手工把它 Key 進去）。等於它有能力「模仿」你、把你每個流程打入的指令無限次「重現」。以後你只要一聲令下，就能把這一大堆指令，一口氣執行完畢。更棒的是，呼叫 Maven 時，可以從外部下一些小指令，客製化這些「每個流程要輸入的指令」的執行順序。因為軟體開發流程的「撰寫 –&gt; 編譯 –&gt; 測試 –&gt; 除錯 –&gt; 原始碼版本維護 –&gt; …」並非永遠依照固定順序執行、一成不變的。正因 Maven 可以彈性調整組合軟體開發過程中那一大堆鬼畫符般的指令，讓你不必背誦，它才會那麼受歡迎。<br><strong>Maven之於Java，相當於Makefile之於C</strong></p>\n</blockquote>\n</li>\n<li>安裝jd-cmd<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> jd-cmd</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mvn clean package</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><ol>\n<li>測試<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar</span></span><br></pre></td></tr></table></figure></li>\n<li>建立一個存放反編譯結果的資料夾<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> mkdir ~/dex2jarTest/apk/OOXX/decompile</span> </span><br></pre></td></tr></table></figure></li>\n<li>反編譯!<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar [.jar路徑] -od [輸出路徑]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> java -jar jd-cli/target/jd-cli.jar ~/dex2jarTest/apk/OOXX/classes-dex2jar.jar -od ~/dex2jarTest/apk/OOXX/decompile/</span></span><br></pre></td></tr></table></figure>\n接著在decompile資料夾裡就可以看到反編譯完的結果囉~</li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/CodeIgniter安裝Swagger/dir.png","slug":"dir.png","post":"cksvi98aq00023nwbbe5j40dh","modified":0,"renderable":0},{"_id":"source/_posts/CodeIgniter安裝Swagger/edit.png","slug":"edit.png","post":"cksvi98aq00023nwbbe5j40dh","modified":0,"renderable":0},{"_id":"source/_posts/CodeIgniter安裝Swagger/show.png","slug":"show.png","post":"cksvi98aq00023nwbbe5j40dh","modified":0,"renderable":0},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/mongodb_內容.png","slug":"mongodb_內容.png","post":"cksvi98aw00053nwb8tut953n","modified":0,"renderable":0},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/services_msc.png","slug":"services_msc.png","post":"cksvi98aw00053nwb8tut953n","modified":0,"renderable":0},{"_id":"source/_posts/Windows-停用開機即啟動-MongoDB/服務.png","slug":"服務.png","post":"cksvi98aw00053nwb8tut953n","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-01-後蓋打開方式、偵錯USB孔位置/Zenbo頭上有USB孔.jpg","slug":"Zenbo頭上有USB孔.jpg","post":"cksvi98ay00083nwb31s4358l","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/就是平板.jpg","slug":"就是平板.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/建立新模擬器.jpg","slug":"建立新模擬器.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/建立新硬體外型.jpg","slug":"建立新硬體外型.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/模擬器完成.jpg","slug":"模擬器完成.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/硬體規格.jpg","slug":"硬體規格.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/選擇作業系統版本.jpg","slug":"選擇作業系統版本.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-02-建置與Zenbo規格相同的模擬器/選擇硬體裝置.jpg","slug":"選擇硬體裝置.jpg","post":"cksvi98az00093nwb5t7q7xsw","modified":0,"renderable":0},{"_id":"source/_posts/Word-新增快捷建/自訂鍵盤.png","slug":"自訂鍵盤.png","post":"cksvi98ax00063nwbhhdb9frq","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE1.png","slug":"DDE1.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE2.png","slug":"DDE2.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DDE3.png","slug":"DDE3.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF1.png","slug":"DF1.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF2.png","slug":"DF2.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF_entities.png","slug":"DF_entities.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-03-DDE-Editor-vs-Dialogflow/DF比較強大.png","slug":"DF比較強大.png","post":"cksvi98b1000b3nwb9s0xar96","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Plans1.png","slug":"Plans1.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Plans2.png","slug":"Plans2.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled.png","slug":"Untitled.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled1.png","slug":"Untitled1.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled2.png","slug":"Untitled2.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled3.png","slug":"Untitled3.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled4.png","slug":"Untitled4.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled5.png","slug":"Untitled5.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled6.png","slug":"Untitled6.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled7.png","slug":"Untitled7.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled8.png","slug":"Untitled8.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-04-DDE簡介/Untitled9.png","slug":"Untitled9.png","post":"cksvi98b2000d3nwb96dr6p2f","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents1.png","slug":"Intents1.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents2.png","slug":"Intents2.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents3.png","slug":"Intents3.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents4.png","slug":"Intents4.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Intents5.png","slug":"Intents5.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Plans1.png","slug":"Plans1.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Plans2.png","slug":"Plans2.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/TTS.png","slug":"TTS.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Test1.png","slug":"Test1.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/Test2.png","slug":"Test2.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/concepts1.png","slug":"concepts1.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/concepts2.png","slug":"concepts2.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/console_config.png","slug":"console_config.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/flow.jpg","slug":"flow.jpg","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/flow.xml","slug":"flow.xml","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/info.png","slug":"info.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/input_output_contexts.jpg","slug":"input_output_contexts.jpg","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/input_output_contexts.xml","slug":"input_output_contexts.xml","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/plan_graph.png","slug":"plan_graph.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/project_info.png","slug":"project_info.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-05-DDE回覆規則設計/publish.png","slug":"publish.png","post":"cksvi98b4000g3nwbchwd8wk3","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB.png","slug":"AB.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB1.png","slug":"AB1.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB2.png","slug":"AB2.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB3.png","slug":"AB3.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/AB4.png","slug":"AB4.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/Zenbo-App-Builder-加關鍵字輔助按鈕.zba","slug":"Zenbo-App-Builder-加關鍵字輔助按鈕.zba","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/info.png","slug":"info.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans1.png","slug":"plans1.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans2.png","slug":"plans2.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/plans3.png","slug":"plans3.png","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/project_register.jpg","slug":"project_register.jpg","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/Zenbo開發系列-07-DDE與App-Builder/save.jpg","slug":"save.jpg","post":"cksvi98b5000i3nwb6wtefyyx","modified":0,"renderable":0},{"_id":"source/_posts/按鈕監聽器/image.png","slug":"image.png","post":"cksvi98b6000l3nwbhhh76aeq","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image.png","slug":"image.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image1.png","slug":"image1.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image10.png","slug":"image10.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image11.png","slug":"image11.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image12.png","slug":"image12.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image13.png","slug":"image13.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image2.png","slug":"image2.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image3.png","slug":"image3.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image4.png","slug":"image4.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image5.png","slug":"image5.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image6.png","slug":"image6.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image7.png","slug":"image7.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image8.png","slug":"image8.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/第一個-Kotlin-專案/image9.png","slug":"image9.png","post":"cksvi98b7000n3nwbb3dgg1pg","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/儲存到個人雲端.png","slug":"儲存到個人雲端.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/出現這個畫面就算成功了.png","slug":"出現這個畫面就算成功了.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/切換帳號.png","slug":"切換帳號.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/匯出筆記本.png","slug":"匯出筆記本.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/名字改一下.png","slug":"名字改一下.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/成功出現在雲端.png","slug":"成功出現在雲端.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/轉移-OneNote-筆記到其他帳號/需要兩個帳號.png","slug":"需要兩個帳號.png","post":"cksvi98b9000p3nwbfbmb1y83","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/classes-dex2jar.png","slug":"classes-dex2jar.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/classes.png","slug":"classes.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/jd-gui.png","slug":"jd-gui.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/open-file.png","slug":"open-file.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/result.png","slug":"result.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/逆向工程-反編譯APK/unzip.png","slug":"unzip.png","post":"cksvi98bp001t3nwb6b7k96ul","modified":0,"renderable":0},{"_id":"source/_posts/ADB-在你的手機上下指令/image1.png","slug":"image1.png","post":"cksvi98au00043nwb3326c2ke","modified":1,"renderable":0},{"_id":"source/_posts/ADB-在你的手機上下指令/image2.png","slug":"image2.png","post":"cksvi98au00043nwb3326c2ke","modified":1,"renderable":0},{"_id":"source/_posts/ADB-在你的手機上下指令/image3.png","slug":"image3.png","post":"cksvi98au00043nwb3326c2ke","modified":1,"renderable":0},{"_id":"source/_posts/ADB-在你的手機上下指令/image4.png","slug":"image4.png","post":"cksvi98au00043nwb3326c2ke","modified":1,"renderable":0},{"_id":"source/_posts/ADB-在你的手機上下指令/image5.png","slug":"image5.png","post":"cksvi98au00043nwb3326c2ke","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cksvi98an00013nwbe2e3c22v","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98b1000c3nwb2ng6h0s0"},{"post_id":"cksvi98an00013nwbe2e3c22v","tag_id":"cksvi98ax00073nwbelh55ozg","_id":"cksvi98b3000e3nwbd9fa3qrr"},{"post_id":"cksvi98b2000d3nwb96dr6p2f","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98b4000h3nwba2ee29ox"},{"post_id":"cksvi98b2000d3nwb96dr6p2f","tag_id":"cksvi98ax00073nwbelh55ozg","_id":"cksvi98b6000j3nwb0f2r08uu"},{"post_id":"cksvi98b4000g3nwbchwd8wk3","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98b7000m3nwb3qal5gbr"},{"post_id":"cksvi98b4000g3nwbchwd8wk3","tag_id":"cksvi98ax00073nwbelh55ozg","_id":"cksvi98b9000o3nwbgmjy9m49"},{"post_id":"cksvi98aq00023nwbbe5j40dh","tag_id":"cksvi98b0000a3nwbbp9jc3fh","_id":"cksvi98bb000r3nwb5tpp4n61"},{"post_id":"cksvi98aq00023nwbbe5j40dh","tag_id":"cksvi98b3000f3nwbho5s0hxj","_id":"cksvi98bb000s3nwb02we1071"},{"post_id":"cksvi98aq00023nwbbe5j40dh","tag_id":"cksvi98b6000k3nwbbk5tfx6g","_id":"cksvi98bc000u3nwb55kofi9x"},{"post_id":"cksvi98aw00053nwb8tut953n","tag_id":"cksvi98ba000q3nwb03p95w5y","_id":"cksvi98bc000v3nwba8wv5t37"},{"post_id":"cksvi98ax00063nwbhhdb9frq","tag_id":"cksvi98bb000t3nwb21z4egaj","_id":"cksvi98bc000y3nwb92cn4ur3"},{"post_id":"cksvi98ax00063nwbhhdb9frq","tag_id":"cksvi98bc000w3nwbene904o3","_id":"cksvi98bc000z3nwb8avmfb50"},{"post_id":"cksvi98ay00083nwb31s4358l","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98bd00113nwb1npx384p"},{"post_id":"cksvi98ay00083nwb31s4358l","tag_id":"cksvi98bc000x3nwb23dzhz4s","_id":"cksvi98bd00123nwbct3g6ucq"},{"post_id":"cksvi98az00093nwb5t7q7xsw","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98bd00143nwb7dma6sy7"},{"post_id":"cksvi98az00093nwb5t7q7xsw","tag_id":"cksvi98bc00103nwb6a32dxue","_id":"cksvi98bd00153nwb13ft1joq"},{"post_id":"cksvi98b1000b3nwb9s0xar96","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98bg00183nwb0jp62gws"},{"post_id":"cksvi98b1000b3nwb9s0xar96","tag_id":"cksvi98ax00073nwbelh55ozg","_id":"cksvi98bh00193nwb8ryb2gmz"},{"post_id":"cksvi98b1000b3nwb9s0xar96","tag_id":"cksvi98bd00133nwbcg9vdj0y","_id":"cksvi98bh001b3nwbgcspd4vr"},{"post_id":"cksvi98b1000b3nwb9s0xar96","tag_id":"cksvi98bd00163nwbhw12993f","_id":"cksvi98bi001c3nwbda350pns"},{"post_id":"cksvi98b5000i3nwb6wtefyyx","tag_id":"cksvi98at00033nwbh6x61n24","_id":"cksvi98bi001e3nwb876t2e1q"},{"post_id":"cksvi98b5000i3nwb6wtefyyx","tag_id":"cksvi98ax00073nwbelh55ozg","_id":"cksvi98bi001f3nwb7gdxdo1t"},{"post_id":"cksvi98b5000i3nwb6wtefyyx","tag_id":"cksvi98bd00163nwbhw12993f","_id":"cksvi98bi001h3nwb9x5ofl0r"},{"post_id":"cksvi98b6000l3nwbhhh76aeq","tag_id":"cksvi98bh001a3nwb3q1x75by","_id":"cksvi98bj001j3nwb3abcgo24"},{"post_id":"cksvi98b6000l3nwbhhh76aeq","tag_id":"cksvi98bi001d3nwbhnilh2aj","_id":"cksvi98bj001k3nwbgeo19foh"},{"post_id":"cksvi98b6000l3nwbhhh76aeq","tag_id":"cksvi98bi001g3nwbb6o37v1i","_id":"cksvi98bj001m3nwb090ra5nw"},{"post_id":"cksvi98b7000n3nwbb3dgg1pg","tag_id":"cksvi98bj001i3nwbgamu0g82","_id":"cksvi98bl001p3nwb97jh6fmp"},{"post_id":"cksvi98b7000n3nwbb3dgg1pg","tag_id":"cksvi98bh001a3nwb3q1x75by","_id":"cksvi98bl001q3nwb8iw0cv7l"},{"post_id":"cksvi98b7000n3nwbb3dgg1pg","tag_id":"cksvi98bi001g3nwbb6o37v1i","_id":"cksvi98bl001r3nwbf1xs2wsh"},{"post_id":"cksvi98b9000p3nwbfbmb1y83","tag_id":"cksvi98bk001o3nwbe2m88tyg","_id":"cksvi98bl001s3nwb3cx45yxb"},{"post_id":"cksvi98bp001t3nwb6b7k96ul","tag_id":"cksvi98br001u3nwbgwuhaz15","_id":"cksvi98bt001y3nwb3r0kdzmk"},{"post_id":"cksvi98bp001t3nwb6b7k96ul","tag_id":"cksvi98bs001v3nwb972d85mw","_id":"cksvi98bt001z3nwb6riy0hqn"},{"post_id":"cksvi98bp001t3nwb6b7k96ul","tag_id":"cksvi98bs001w3nwbea7100ki","_id":"cksvi98bt00203nwb510o7a25"},{"post_id":"cksvi98bp001t3nwb6b7k96ul","tag_id":"cksvi98bs001x3nwb8zrkafy7","_id":"cksvi98bt00213nwbgiisdl77"},{"post_id":"cksvi98au00043nwb3326c2ke","tag_id":"cksvi98bh001a3nwb3q1x75by","_id":"cksvijk8400233nwbdwsh476f"},{"post_id":"cksvi98au00043nwb3326c2ke","tag_id":"cksvijk7t00223nwb09j0bevu","_id":"cksvijk8900243nwbcdgd2elb"},{"post_id":"cksvi98au00043nwb3326c2ke","tag_id":"cksvi98bs001v3nwb972d85mw","_id":"cksvik1em00253nwbc22370wf"},{"post_id":"cksvi98au00043nwb3326c2ke","tag_id":"cksvi98bi001g3nwbb6o37v1i","_id":"cksvird0a00005nwbe465415c"}],"Tag":[{"name":"Zenbo","_id":"cksvi98at00033nwbh6x61n24"},{"name":"DDE","_id":"cksvi98ax00073nwbelh55ozg"},{"name":"CodeIgniter","_id":"cksvi98b0000a3nwbbp9jc3fh"},{"name":"Swagger","_id":"cksvi98b3000f3nwbho5s0hxj"},{"name":"API","_id":"cksvi98b6000k3nwbbk5tfx6g"},{"name":"MongoDB","_id":"cksvi98ba000q3nwb03p95w5y"},{"name":"Word","_id":"cksvi98bb000t3nwb21z4egaj"},{"name":"hotkey","_id":"cksvi98bc000w3nwbene904o3"},{"name":"偵錯","_id":"cksvi98bc000x3nwb23dzhz4s"},{"name":"模擬器","_id":"cksvi98bc00103nwb6a32dxue"},{"name":"Dialogflow","_id":"cksvi98bd00133nwbcg9vdj0y"},{"name":"聊天機器人","_id":"cksvi98bd00163nwbhw12993f"},{"name":"Android","_id":"cksvi98bh001a3nwb3q1x75by"},{"name":"監聽器","_id":"cksvi98bi001d3nwbhnilh2aj"},{"name":"行雲部落格","_id":"cksvi98bi001g3nwbb6o37v1i"},{"name":"Kotlin","_id":"cksvi98bj001i3nwbgamu0g82"},{"name":"OneNote","_id":"cksvi98bk001o3nwbe2m88tyg"},{"name":"反編譯","_id":"cksvi98br001u3nwbgwuhaz15"},{"name":"資安","_id":"cksvi98bs001v3nwb972d85mw"},{"name":"逆向工程","_id":"cksvi98bs001w3nwbea7100ki"},{"name":"APK","_id":"cksvi98bs001x3nwb8zrkafy7"},{"name":"ADB","_id":"cksvijk7t00223nwb09j0bevu"}]}}